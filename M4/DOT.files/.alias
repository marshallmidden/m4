# echo .alias
#-----------------------------------------------------------------------------
export LS_TABSTOP=0
# export TABSTOP=8
export TABSTOP=1
#-----------------------------------------------------------------------------
unalias G 2>>/dev/null >>/dev/null
G()
{
  nd="$*";
  egrep -r "$nd" /px/bin/* /var/www/*
  unset nd
}
#-----------------------------------------------------------------------------
unalias cd 2>>/dev/null >>/dev/null
cd()
{
  nd="$*";
  if [ "$nd" = "" ]; then
    pushd "$HOME" 2>>/dev/null >>/dev/null;
    nd=`/bin/pwd`
    popd 2>>/dev/null >>/dev/null
    pushd "$nd" 2>>/dev/null >>/dev/null;
    echo "$nd"
  else
    pushd "$nd" 2>>/dev/null >>/dev/null;
    if [ "$?" = "0" ]; then
      nd=`/bin/pwd`
      popd 2>>/dev/null >>/dev/null
      pushd "$nd" 2>>/dev/null >>/dev/null;
      echo "$nd"
    else
      echo "$nd is NOT a directory"
    fi
  fi
  unset nd
}

unalias back 2>>/dev/null >>/dev/null
alias "back=popd 2>>/dev/null >>/dev/null ; pwd"
alias noback='dirs -c'

unalias swap 2>>/dev/null >>/dev/null
swap()
{
  nd1=`pwd`
  popd 2>>/dev/null >>/dev/null
  nd2=`/bin/pwd`
  popd 2>>/dev/null >>/dev/null
  pushd "$nd1" 2>>/dev/null >>/dev/null
  pushd "$nd2" 2>>/dev/null >>/dev/null
  /bin/pwd
}

unalias xtitle 2>>/dev/null >>/dev/null
xtitle()
{
  echo "]2;$*";
}
#-----------------------------------------------------------------------------
hostname="`hostname|sed -e 's/.[xX]iocorp.[cd]om//'`"
alias $hostname="echo >/dev/null "
#-----------------------------------------------------------------------------
#-- unalias bc 2>>/dev/null >>/dev/null
#-- bc()
#-- {
#--   if [ `hostname` = 'm.xiocorp.dom' ] ; then
#--     eval /usr/bin/bc ~${USER}/bin/bc.default;
#--   else
#--     eval /usr/bin/bc -q ~${USER}/bin/bc.default;
#--   fi
#-- }
#-----------------------------------------------------------------------------
export OS=`uname`
alias keep="export KEEP=\`pwd\` && pwd"
if [ "${OS}" = 'Darwin' ]; then
alias ls="ls -F"
else
alias ls="ls -F --tabsize=${LS_TABSTOP}"
fi
alias ta="vi -t"
alias :ta="vi -t"
#-----------------------------------------------------------------------------
alias xinit="echo $$ >/tmp/XINIT.pid && ~/bin/xinit"
#-----------------------------------------------------------------------------
alias xpdf="xpdf -z page"
#-----------------------------------------------------------------------------
alias hexdump="/usr/bin/hexdump -f ${HOME}/bin/HEXDUMP"
alias intdump="/usr/bin/hexdump -f ${HOME}/bin/INTDUMP"
alias timedump="/usr/bin/hexdump -f ${HOME}/bin/TIMEDUMP"
#-----------------------------------------------------------------------------
alias a="objdump -lxrtGdDShp"
alias objdmp="objdump -dlrS -j .text -j .data -j .bss"
#-----------------------------------------------------------------------------
alias info="info --vi-keys"
#save - alias vnc="vncviewer -shared 10.64.45.30"
alias x11vnc="x11vnc -display :0 -forever -q -shared"
alias vncs="vncserver -geometry 1592x1126 -depth 16 -name 'VNC $hostname'"
#-----------------------------------------------------------------------------
#save - alias smb="smbclient //xiostore/users\$ -D 199041 -A ~/.smbrc"
#save - alias k="smbclient //xioshare/RSTPrivate -D Release/Yeti -A ~/.smbrc"
#save - alias mounti="root smbmount //xiostore/Private /mnt/smb/i -o credentials=${HOME}/.smbrc,workgroup=xiocorp"
#save - alias umounti="root smbumount /mnt/smb/i"
#-----------------------------------------------------------------------------
alias diff2="diff --suppress-common-lines -W 200 -y -b"
alias d="diff -Nrp -U 7 --no-dereference --no-ignore-file-name-case --strip-trailing-cr --exclude='.git*'"
#-----------------------------------------------------------------------------
# alias uncrustify="uncrustify -c ${HOME}/bin/ssg_coding_standards_uncrustify.cfg"
alias uncrustify="uncrustify -c ${HOME}/bin/m4-standards-uncrustify.cfg"
#-----------------------------------------------------------------------------
if [ "${OS}" = 'Darwin' ]; then
unalias ip 2>>/dev/null >>/dev/null
# delete arguments given -- such as "ip a".
ip()
{
  ifconfig -a | egrep 'inet|: f'
}
fi
#-----------------------------------------------------------------------------
alias grep='grep --exclude-dir=.git'
alias fgrep=/usr/bin/fgrep
alias egrep=/usr/bin/egrep
#-----------------------------------------------------------------------------
# Set tab stops to every ${TABSTOP} characters.
if [ "${OS}" = 'Darwin' ]; then
  if [ "`tty`" \!= 'not a tty' ]; then
    reset && tabs -${TABSTOP}
  fi
  alias reset="reset && tabs -${TABSTOP}"
else
  if [ "`tty`" \!= 'not a tty' ]; then
# Some Linux's have two --'s and 14.04 Ubuntu has one (-) on setterm.
#    env TERM=linux setterm --regtabs ${TABSTOP} && tabs -${TABSTOP}
    env TERM=linux setterm -regtabs ${TABSTOP} && tabs -${TABSTOP}
  fi
  alias reset="reset && env TERM=linux setterm -regtabs ${TABSTOP} && tabs -${TABSTOP}"
fi
# Note .exrc: set shiftwidth=4 tabstop=4
# Note .indent.pro: --tab-size4
#--NOTONMACK--  Note ls alias has --tabsize=4
#-----------------------------------------------------------------------------
if [ "${OS}" = 'Darwin' ]; then
unalias ie 2>>/dev/null >>/dev/null
ie()
{
  nd="$*";
  rm -f .A.ie;
  indent "${nd}" -o .A.ie;
  mv ${nd} ${nd}.~1~;
  unexpand -a -t ${TABSTOP} .A.ie > ${nd};
  rm -f .A.ie;
}
else
unalias ie 2>>/dev/null >>/dev/null
ie()
{
  nd="$*";
  rm -f .A.ie;
  indent "${nd}" -o .A.ie;
  mv ${nd} ${nd}.~1~;
  unexpand --tabs=${TABSTOP} .A.ie > ${nd};
  rm -f .A.ie;
}
fi
#-----------------------------------------------------------------------------
# Create ctags file for all subdirectories.
unalias findctags 2>>/dev/null >>/dev/null
findctags()
{
  rm -f tags;
  nd="$*";
  A=`find . ${nd} '(' -name '*.[hc]' -o -name '*.cpp' ')'` ; eval ctags $A;
}
#-----------------------------------------------------------------------------
export LANG=en_US.UTF-8
# Make sure UTF sorting does it correctly!
export LC_COLLATE=C
#-----------------------------------------------------------------------------
# Jenkins compile machine.
alias 17='ssh -p 22 root@10.0.10.17'
#-----------------------------------------------------------------------------
# Marshall's compile/build machine -- Walter on VM (Ubuntu).
alias hq='ssh -p 22 m4@10.0.10.35'
#-----------------------------------------------------------------------------
# The ESXI VMware physical machine.	root/BetaCat123!
alias 233='ssh -p 22 root@10.0.10.233'
# The parsec ubuntu vm on the ESXI VMware physical machine (cloud) (M4 backup!).
alias 57='ssh -p 22 root@10.0.11.57'
# -- dead vmware crashing windows -- 2017-07-15 # vm ubuntu system. -- m4
# -- alias 2='ssh -p 22 root@10.0.11.2'
#-----------------------------------------------------------------------------
# The ESXI VMware physical machine.	root/BetaCat123!
alias 135='ssh -p 22 root@10.0.10.135'
#-----------------------------------------------------------------------------
# The SigmaTek 5000 #1 physical machine (local).
alias 171='ssh -p 22 root@10.0.10.171'
# The SigmaTek 7000 physical machine (local).
alias 229='ssh -p 22 root@10.0.10.229'
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# The SigmaTek 5000 #2 physical machine (local). -- used with 11.51 as client for FC
alias 205='ssh -p 22 root@10.0.10.205'
# A second 5000 -- strange beast.	-- used with 205 for FC
alias 51='ssh -p 22 root@10.0.11.51'
# Raghu RedHat VM RHEL on 10.0.11.51
alias 243='ssh -p 22 root@10.0.10.243'
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
#-- # Virtual machine ubuntu 14.04 on 10.205
#-- alias 48='ssh -p 22 root@10.0.11.48'
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# m4 - VM on 11.36 - hyperq for testin kernel module changes.
alias 87='ssh -p 22 root@10.0.11.87'
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# RedHat machine for kernel build -- client for Raghu block I/O.
alias 111='ssh -p 22 root@10.0.11.111'
#-- # "Client" ubuntu machine for kernel build -- client for Raghu block I/O.
#-- alias 3='ssh -p 22 root@10.0.11.3'
#-- # RHEL 6 - VirtualBox VM.
#-- alias 67='ssh -p 22 root@10.0.11.67'
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Raghu physical machine with FC see 154
alias 54='ssh -p 22 root@10.0.10.54'
# Raghu HQ for block/IO 2017-06-15 -- see 54
alias 154='ssh -p 22 root@10.0.10.154'
# Raghu 2nd HQ -- see 133 134
alias 232='ssh -p 22 root@10.0.10.232'
# Raghu RedHat development machine
alias 78='ssh -p 22 root@10.0.11.78'
# Raghu RedHat client#1 for 2nd HQ -- see 134 232
alias 133='ssh -p 22 root@10.0.11.133'
# Raghu Ubuntu client#2 for 2nd HQ -- see 133 232
alias 134='ssh -p 22 root@10.0.11.134'
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Sando's machines.
# Ubuntu VM on 10.0.10.135
alias 32='ssh -p 22 root@10.0.11.32'
# HQ
alias 91='ssh -p 22 root@10.0.11.91'
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# HyperQ HQ AT&T HA upper -- m4
# was: 28 31 44
alias 34='ssh -p 22 root@10.0.11.34'
# Both OLD and unused below.
alias 28='ssh -p 22 root@10.0.11.28'
alias 31='ssh -p 22 root@10.0.11.31'
alias 44='ssh -p 22 root@10.0.11.44'
# RedHat AT&T HA lower -- m4
alias 36='ssh -p 22 root@10.0.11.36'
#-----------------------------------------------------------------------------
# Demo AT&T box
alias demo='ssh -p 22 root@10.0.11.180'
alias 180='ssh -p 22 root@10.0.11.180'
#- # RedHat Server for Demo AT&T box
#- alias demo-s='ssh -p 22 root@10.0.11.13'
#- alias 13='ssh -p 22 root@10.0.11.13'
#-----------------------------------------------------------------------------
# Network Attached Storage units.
alias 227='ssh -p 22 root@10.0.10.227'
#- # AF-3000 NIMBLE
#- alias 123='ssh -p 22 admin@10.0.11.123'
#-----------------------------------------------------------------------------
# The Windows VMs in the Lab (local).
#- alias 10.252="rdesktop -a 16 -u 'Administrator' -p 'ParsecAdmin123!' -g '1280x1024' -T '7000 windows box' -z 10.0.10.252 &"
#-----------------------------------------------------------------------------
#-- alias check-qemu='echo ohio;ssh root@4.14.168.246 qemu-system-x86_64 --version;echo 171;171 qemu-system-x86_64 --version;echo 229;229 qemu-system-x86_64 --version;echo 205;205 qemu-system-x86_64 --version'
#-----------------------------------------------------------------------------
# For service, the telemetry server
alias telemetry='ssh -X root@166.78.106.244'
#-----------------------------------------------------------------------------
# Create the local repo.
alias git-checkout='git clone ssh://git@10.0.10.234:7990/hq/pxn.git'
#-----------------------------------------------------------------------------
alias apt-install-date='(zcat /var/log/dpkg.log.*.gz ; cat /var/log/dpkg.log.1 ; cat /var/log/dpkg.log) | egrep " install | remove "'
#-----------------------------------------------------------------------------
unalias check-ql-modes 2>>/dev/null >>/dev/null
check-ql-modes()
{
  find /sys '(' -name supported_mode -o -name active_mode ')' -exec echo -n "{}" ": " \; -exec cat "{}" \; | grep -v '/ata[0-9]*/'
  find /sys/kernel/config/target -name enable -exec echo -n "{}" ": " \; -exec cat "{}" \;
}
#-----------------------------------------------------------------------------
alias "CHECK.DISKS=~/bin/CHECK.DISKS > A.log 2>&1"
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# Parsec Labs LLC.  2017-03-30
# See your git configuration (see if one-time-setups are done?).
# git config --list
#-----------------------------------------------------------------------------
# Create the local repo.
#-? alias git-checkout='git clone ssh://git@10.0.10.234:7999/hq/pxn.git'
#? alias git-checkout='git clone ssh://git@10.0.10.234:7990/hq/pxn.git'
# alias git-checkout='git clone ssh://git@10.0.10.234:7990/hq/pxn.git'
#-----------------------------------------------------------------------------
#-- alias gg='git log --graph --oneline --pretty=format:"%h %ad | %s%d [%an]" --date=short $* | less'
unalias gg 2>>/dev/null >>/dev/null
gg()
{
  git log --graph --oneline --pretty=format:"%h %ad | %s%d [%an]" --date=short $* | less
}
#-----------------------------------------------------------------------------
#-- alias g='git log --all --graph --oneline --pretty=format:"%h %ad | %s%d [%an]" --date=short $* | less'
unalias g 2>>/dev/null >>/dev/null
g()
{
  git log --all --graph --oneline --pretty=format:"%h %ad | %s%d [%an]" --date=short $* | less
}
#-----------------------------------------------------------------------------
unalias gl 2>>/dev/null >>/dev/null
#-- alias gl='git log --source --oneline --date=short --pretty=format:"%h %ad | %s%d [%an]" $* | less'
gl()
{
  git log --source --oneline --date=short --pretty=format:"%h %ad | %s%d [%an]" $* | less
}
#-----------------------------------------------------------------------------
unalias gt 2>>/dev/null >>/dev/null
#-- alias gt='git log --tags --no-walk --pretty="format:%ci %s %h" $*'
gt()
{
  git log --tags --no-walk --pretty="format:%ci %s %h" $*
}
#-----------------------------------------------------------------------------
unalias find-git-commit-from-tag 2>>/dev/null >>/dev/null
find-git-commit-from-tag()
{
  find_tag="$*";
  git rev-parse tags/"$find_tag"'~0'
}
# Provide the dates for when a tag was created.
unalias git-tags 2>>/dev/null >>/dev/null
git-tags()
{
  arguments="$*";
  git log --tags --simplify-by-decoration --pretty="format:%ci %d" $arguments | sort -n
}
#-----------------------------------------------------------------------------
# Given a git tag, find the git commit big long hash.
unalias find-git-commit-from-tag 2>>/dev/null >>/dev/null
find-git-commit-from-tag()
{
  find_tag="$*";
  git rev-parse tags/"$find_tag"'~0'
}
#-----------------------------------------------------------------------------
# Given a git tag, find the git commit big long hash.
unalias find-git-commit-from-tag 2>>/dev/null >>/dev/null
find-git-commit-from-tag()
{
  find_tag="$*";
  git rev-parse tags/"$find_tag"'~0'
}
#-----------------------------------------------------------------------------
# Find git commit of current branch from where it parted ways with dev/lightspeed.
unalias find-git-commit-of-branch 2>>/dev/null >>/dev/null
find-git-commit-of-branch()
{
  base=`git merge-base dev/lightspeed HEAD`
  # echo $base
}
#-----------------------------------------------------------------------------
# Show files changed on current branch (from dev/lightspeed).
unalias find-git-files-only-diff-branch 2>>/dev/null >>/dev/null
find-git-files-only-diff-branch()
{
  find-git-commit-of-branch
  git diff --name-only $base HEAD
}
#-----------------------------------------------------------------------------
# Show all differences in files changed on current branch (from dev/lightspeed).
unalias find-git-diff-branch 2>>/dev/null >>/dev/null
find-git-diff-branch()
{
  find-git-commit-of-branch
  git diff $base HEAD
}
#-----------------------------------------------------------------------------
unalias get-branch-by-date 2>>/dev/null >>/dev/null
git-branch-by-date()
{
    for branch in `git branch -r | grep -v HEAD`;do echo -e `git show --format="%ci %cr" $branch | head -n 1` \\t$branch; done | sort -r
}
#-----------------------------------------------------------------------------
unalias dnffind 2>>/dev/null >>/dev/null
dnffind()
{
   dnf repoquery --alldeps --whatrequires $1
   dnf repoquery --installed --whatrequires $1
}

#-----------------------------------------------------------------------------
unalias kb 2>>/dev/null >>/dev/null
# Probably should build the debuginfo and debug -- for kdump -- don't know for sure yet.
kb()
{
    WORKSPACE=`pwd`
    echo ""
    echo "build is starting up"

    time rpmbuild -bb --define "_topdir $WORKSPACE" \
        --without kabichk   \
        --with baseonly     \
        --without xen       \
        --without fips      \
        --without up        \
        --without perf      \
        --without debuginfo \
        --without debug     \
        $WORKSPACE/SPECS/lightspeed.spec

    echo "build complete"
}
unalias ka 2>>/dev/null >>/dev/null
# Probably should build the debuginfo and debug -- for kdump -- don't know for sure yet.
ka()
{
    WORKSPACE=`pwd`
    echo ""
    echo "build is starting up"

    time rpmbuild -bb --define "_topdir $WORKSPACE" \
        --without kabichk   \
        --with baseonly     \
        --without xen       \
        --without fips      \
        --without up        \
        --without perf      \
        --with debuginfo    \
        --without debug     \
        $WORKSPACE/SPECS/lightspeed.spec

    echo "build complete"
}
#-----------------------------------------------------------------------------
unalias kp 2>>/dev/null >>/dev/null
# Probably should build the debuginfo and debug -- for kdump -- don't know for sure yet.
kp()
{
    WORKSPACE=`pwd`
    echo ""
    echo "build is starting up"

    time rpmbuild -bp --define "_topdir $WORKSPACE" \
        --without kabichk   \
        --with baseonly     \
        --without xen       \
        --without fips      \
        --without up        \
        --without perf      \
        --without debuginfo \
        --without debug     \
        $WORKSPACE/SPECS/lightspeed.spec

    echo "unpack complete"
}
#-----------------------------------------------------------------------------
alias mdstat='watch -n 1 -x egrep "^m|=" /proc/mdstat'
alias db='sqlite3 -line /px/pw/db/development.sqlite3'
#-----------------------------------------------------------------------------
alias lm="echo '# lsscsi' ; lsscsi ; echo '# multipath -ll' ; multipath -ll ; ls /dev/sd* /dev/dm* /dev/mapper/; echo ; echo"
#-----------------------------------------------------------------------------
alias newtools='prepath /home/m4/newtools/bin'
#-----------------------------------------------------------------------------
# echo end of .alias
