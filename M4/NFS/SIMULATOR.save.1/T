#!/bin/bash

# FILES=`echo /media/parsecdata/simulator/input_files/{5,6,7,8,9}*`
# FILES=`echo /media/parsecdata/simulator/input_files/*`
FILES=`echo /media/parsecdata/simulator/[io]*`

# On 172.22.17.99
# vm.min_unmapped_ratio=10
# vm.min_free_kbytes=7913604
# vm.vfs_cache_pressure=100
# vm.swappiness=10

# Default on this machine.
# vm.min_unmapped_ratio=1
# vm.min_free_kbytes=90112
# vm.vfs_cache_pressure=100
# vm.swappiness=10

#=============================================================================
seefree()
{
    E=`date +%s`
    free -m | egrep 'Mem|Swap'
    numactl --hardware | grep free
    slabtop -o -s c | sed -n -e '4p' -e '8,9p'
    N=`vmstat -f | awk '{print $1}'`
    let T=$E-$S
    if [ $T -eq 0 ]; then let T=1; fi
    let F=($N-$O)/$T
    S=$E
    O=$N
    echo "forks/sec $F" "Seconds=$T"
    smem -wk
    echo "----------------------------------------------"
    date
    Z=`free -m  | grep Swap | awk '{print $3}'`
    if [ $Z != 0 ] ; then
	echo "SWAP USED: $Z ..."
    fi
}
#=============================================================================
SIMULATOR()
{
    sysctl vm.vfs_cache_pressure=$1

    # Get rid of swap in use.
    echo "swapoff -a"
    swapoff -a
    echo "sleep 1"
    sleep 1
    # Allow swap to be used again, and the "In Use" number is now zero again.
    echo "swapon -a"
    swapon -a
    echo "sleep 1"
    sleep 1

    sysctl vm.drop_caches=3		# Drop slabtop displayed cache and buffer cache.
    sleep 1
    seefree				# Get output before run, after caches dropped.

    echo "Start two large programs"
    ./large 196608 & L=$!		# Grab most of 192g of 256g ram. (leaving 64g)
#--    ./large 32768 & M=$!		# Grab 32g of 64 ram. (leaving 32g)
    echo "large(s) started, sleep 10"
    sleep 10				# Give it a few moments to get most of it.

    echo "start find /media/parsecdata/simulator/input_files"
    let c=0
    unset W
    for i in $FILES; do
       echo -n "find $i -size 0 & "
       find $i -size 0 & J=$!
       let W[$c]=$J
       echo "${W[$c]}"
       let c=$c+1
    done

    echo "wait ${W[*]}"
    wait ${W[*]}

    echo "kill large programs"
    kill $L				# Kill the first "large" program.
#--    kill $M				# Kill the second "large" program.
    wait

    killall W.wait.kill			# get rid of task that kills when swap is used.

    echo "How Run Did:"
    seefree				# Get output at end of run.
}
#=============================================================================
TESTRUN()
{
    sysctl vm.swappiness=$1

    # Initialize variables for seefree
    S=`date +%s`
    # Get forks per second
    O=`vmstat -f | awk '{print $1}'`

    SIMULATOR 100
    SIMULATOR 150
    SIMULATOR 200
    SIMULATOR 300
    SIMULATOR 400
    SIMULATOR 500
    SIMULATOR 600
    SIMULATOR 700
    SIMULATOR 800
    SIMULATOR 900
    SIMULATOR 1000
    SIMULATOR 2000
    SIMULATOR 10000
    SIMULATOR 100000
}
#=============================================================================
ulimit -c unlimited
ulimit -n 1048576

echo "The defaults are:"
sysctl vm.min_unmapped_ratio
sysctl vm.min_free_kbytes
sysctl vm.vfs_cache_pressure
sysctl vm.swappiness

echo "Initialize to supposed Parsec values:"
sysctl vm.min_unmapped_ratio=10
sysctl vm.min_free_kbytes=7913604
sysctl vm.vfs_cache_pressure=100

# Make sure swap and caches are cleared.
swapoff -a
swapon -a
sysctl vm.drop_caches=3		# Drop slabtop displayed cache and buffer cache.

echo "First time..."
# First argument is "sysctl vm.swappiness=$1" value.
TESTRUN 1
TESTRUN 2
TESTRUN 3
TESTRUN 4
TESTRUN 5
TESTRUN 10
TESTRUN 20

kill $L
##############################################################################
echo DONE with $0
##############################################################################
