abcjs - create html to do things with abc input.

file:///Users/m4/Desktop/saved-m4-stuff/src/abcjs/examples/toc.html
    Table of contents for examples.
file:///Users/m4/Desktop/saved-m4-stuff/src/abcjs/examples/analysis.html
    Analyze tune book string -- Gives idea of what is in "tune".
file:///Users/m4/Desktop/saved-m4-stuff/src/abcjs/examples/animation.html
    "Animation" Draws and plays.
file:///Users/m4/Desktop/saved-m4-stuff/src/abcjs/examples/dragging.html
    Example with piano RH and LH. (Chords, strange overlapping, triplet...)


******************************************************************************
    A) Lilypond used for printing music?
******************************************************************************
  Use:
*   DOALL - to check musicomp2abc output to imscomp.
------------------------------------------------------------------------------
Switch to per note:
   1) tempo change with voice, not measure.
      'tempo acc/rit'
   2) clef change with voice, not measure.
      clef's change anywhere, anytime, middle of measure, etc.
   3) glide

  11) keyword_crescendo  -- NOTDONEYET
  12) keyword_position   -- NOTDONEYET
  13) keyword_arp        -- NOTDONEYET
      arp means chord is staggered in starting.
  14) keyword_fermata    -- NOTDONEYET
      fermata extends notelength by amount in variable fermata.
  15) keyword_glide      -- NOTDONEYET      See "horn:" section below.
      glide    - portamento, flag for turning/enabling it.
      glide 16        16th note length.
      glide(1/16)     I want this format to work too.
  16) keyword_tie        -- NOTDONEYET
      tie 4c4 c8 c16 cs c32 c32       # Tie all but staccato 'cs' (4c16s). Returns to tie?
    c) tie/legato/stacatto/marcato/slur - tacking onto a tie - like suffix/accident on note.
# ----------------------------------------------------------------------------
On/off portamento is cc#65.
The time it takes to slide from note to note is set using cc#5 MSB.
    cc#37 is LSB.
    cc#65 is on/off. (0 or 127)
    CC#84 is portamental control.
#-- Looks like there is another controller involved.
#-- Portamento Control (CC 84) Goes from set note here to new note.
#-- Like from 60 (middle c) to note desired, always. 60 goes in CC#84.
# ----------------------------------------------------------------------------
# vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4
# ----------------------------------------------------------------------------
    1) --staff=right,left                   - limit printing
    2) --staves=right:1,3,4 --staves --staves=left:2,5  - print in staff format.
------------------------------------------------------------------------------
horn: glide 16 3c4 3d4
    The "glide" format has the same effect of synthesizer "portamento". Instead of
    jumping to a new pitch, it will glissando to each new pitch. After the staff
    name and colon, write the word "glide", followed by the length of the glide.
    In the above example, all pitches on staff "horn" will glissando for a sixteenth
    note before arriving at the next pitch. With the above, 16th note "glide" in
    effect, the above notes are played as:
        3c4 3c@D3d16t 3d8d
    horn: glide 0
    Gliding on a staff is stopped by setting the glide to zero.
==============================================================================
Add more "ims" features.
1) keyword processing.
  IGNORE:
?   a) "hide rests" ... "show rests"   Ouch -- for abc notation that is not going to happen - maybe.
    b) transpose +24.   Change for playing, not printing. transpose 0 = off. transpose -5.
    c)  tuba:   transcribe up 1 octave                  # This is for printing, not playing.
        picc:   transcribe down 2 octaves
        horn:   key c major   transcribe up to d major
        horn:   key c major   transcribe down to d major
        Undo via: "transcribe up 0 octaves"
    d) beaming - ignore, has token following (possible COMMAs).
    e) lh / rh                  no tokens after
    f) hide / show              one token after
    g) perc / nohead / normal   printed with percussion - no tokens
    h) midi(xxx,xxx)            one complicated token after (possible COMMAs).
    i) patch(xxx,xxx)           one complicated token after (possible COMMAs).
    j) print / format           ignore command / line.
    k) double quotes = lyrics.
    l) single quotes = pass to LIME (?)
===============================================================================
Commands in IMS:        command(1) =  ...

Differences?
*   tempo           -- NOTDONEYET for accel and rit processing.
    instr           -- probably don't do, very plato specific.
    tuning          -- MIDI - what does this really mean? Is it used?
    print           -- (vln1,vln2),vln3     parenthesis means same staff. (interesting)
                        semicolon between groups. (like [] in %%staves)
    format
?   time    cut / common    - At beginning of measure.  ??
===============================================================================
? key words used on staff line: (staff defines a name like "lefthand:")
    clef, xpose/transpose, beaming, hide, show, midi, lyrics, key, arp, trem0,
    trem1, trem2, trem3, fermata, lh, rh, legato, staccato, marcato, tie, slur,
    volumenumb, volumename, crescendo, position, pan, type, treble, bass,
    soprano, alto, tenor, normal, perc, nohead, oloz, floz, oharm, fharm,
    stemsoff, stemson

    format: pause, density, display, key, combine, lyrics, staff, systems, page

lh is left hand (lower) of grand clef, rh is upper. Grand clef is two together.
===============================================================================
?   vx:     tie 4c4,c8,c16,cs
?   g       = grace
?   transcribe  up 1 octave
?               key c major   transcribe up to d major
?   "do" 3c4 "ri" d "mi" e      lyrics printed under notes.
------------------------------------------------------------------------------
    To set the factor by which fermata increases a note value, "calc"
    commands are again used.  For example, "calc    fermata^=3" will cause
    all following fermatas to triple note lengths.

    The variable "arp"  specifies what fraction of a whole note that the
    notes in a chord are staggered by.  The default value is 1/32, which
    means notes in an arpeggiated chord are played one thirty-second of a
    whole note apart.  "calc    arp^=1/24" would change the interval
    between chord notes to 1/24 a whole note.

    The variables "marc" and "stac" both specify what portion of a note
    will be played, and what portion will be converted to a rest.  For
    instance, if you set the value of "marc" to .75, the note will be
    played for three-quarters of its original length, with the remainder
    of the length spent as a rest.  The default value of "marc" is .5,
    while "stac" is normally .25 .

    The variables "accent" and "aaccent" specify the amount of volume
    increase caused by the light and heavy accents ("a" and "aa").
        calc    accent^=8
        calc    aaccent^=15
    In the first example, the value of "accent" is set to "8", thus any
    OPAL note ending with "a" (light accent) will be played 8 volume
    levels louder than normal.  The second "calc" command causes all notes
    with a heavy accent ("aa") to be played 15 volume levels louder.  The
    default values of accent and aaccent are 10 and 20, respectively.
------------------------------------------------------------------------------
