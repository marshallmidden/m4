# vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4
------------------------------------------------------------------------------
    voices  None = none.
            0 = cn0.        Always maximum used.

    v(cn + 1):

    channels ... was instrument channels ... when to initialize or additionals...
------------------------------------------------------------------------------
cn = channel number
m  = measure number
CH = channel number in HINTS file.
------------------------------------------------------------------------------
*       process_header_lines()
*           prog
*           select
------------------------------------------------------------------------------
*   do_note_length_calculate()
*   insert_rest()
    short_note_and_split_it()
    notes_fit_into_measures()
    check_contiguous_notes()
    check_note_lth()
    check_single_note_lth()
    check_triplets()
    check_staccatto()
    multiple_note_split()
    determine_note_gcs_lengths()
    determine_note_gcs_notes()
*   printable_measures()
    set_instrument_measures()
    set_keys_if_not_specified()
    figure_out_measure_locations()
*   meter_readable()
    process_echo_lines()
    process_noteon()
    process_noteoff()
*   process_sleep()
*   process_cc()
*   process_note_lines()
*   process_line()
*   read_next_line()
*   readthefile()
*   print_debug_measures_1()
*   print_debug_title_1()
*   print_debug_comments_1()
*   print_debug_keys_1()
*   print_debug_instruments_1()
*   print_debug_notes_1()
*   print_debug_internal_1()
*   print_debug_hints()
*   is_float()
*   int_range_to_array()
*   find_terminator_in_string()
*   separate_args()
*       b4it()
*   do_bars()
*   do_clef()
*   get_channel_measure_other()
*   do_key()
*   check_instr()
*   do_instrument()
*   do_meter()
*   do_page()
*   do_title()
*   do_xpose()
*   do_middle_c()

*   compute_hint_command_args()
*   process_hint_line()
*   read_next_hint_line()
*   readhintfile()

    printout_gcs()
    main()
------------------------------------------------------------------------------
.   title[]     = array of titles.
------------------------------------------------------------------------------
.   instrument[cn]
.   last_cc[cn][ctrl]
    key[ch]
    key_clicks[?]
    measures_key[m] -> key
    measures_instrument[m] -> instrument
    meter[] -> text of meter
    meter_fractions[] -> MIDICLICKSPERQUARTER*4 * meter_fraction (clicks per measure)
    meter_clicks[] -> click
    last_measure    -> #
    measures_clicks_start ?
    measures_clicks_length ?
    measures_meter ?

    bufs_notes_channel[ch] = []
    bufs_notes[ch] = []
    bufs_notes_start[ch] = []
    bufs_notes_end[ch] = []
    bufs_notes_velocity[ch] = []
    bufs_cc_start[ch] = []
    bufs_cc_end[ch] = []

    last_cc ?
    bufs_suffix ?
    bufs_gcs_length ?
    bufs_gcs_note ?
------------------------------------------------------------------------------
*   bars_measures_hint[m]                   = bar_number
*   clef_channel_measures_hint[CH][m]       = clef
*   instrument_channel_measures_hint[CH][m] = instrument
*   key_channel_measures_hint[CH][m]        = key
*   meters_measures_hint[m]                 = meter_string
*   meters_values_hint[m]                   = meter_floating_value
*   pages_measures_hint[m]                  = page_number
*   xpose_channel[CH]                       = up/down value
------------------------------------------------------------------------------
*   measures_meter[m]
------------------------------------------------------------------------------
*   readhintfile()
*       process_hint_line()
------------------------------------------------------------------------------
