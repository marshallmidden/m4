*
* If tempo is "x,4" the total number of measures to put
* in the loop is: (x)^*(desired # of minutes)-16
* (or else (x)^*(desired # of minutes)-12 if all fading out
* in a whole note length measure after loop...)
*
* rnd(8) is a 8^*1 randum number vector
* last(8) contains the note numbers of the last chord to
* glide to (optional use)
*
format  systems
instr   musique,Entroid
vars    rnd(8),select,loopnum,mesadj
vars    last(8),i
*
tempo   10,4
calc    loopnum ^= mesadj ^= 9
*
staff   one: 1
staff   two: 2
staff   three: 3
staff   four: 4
staff   five: 5
staff   six: 6
staff   seven: 7
staff   eight: 8
*
macro   randcor
*
loop    i ^= 1,8
.       randu   rnd(i),70
endloop
one:    (rnd(1),.25)
two:    (rnd(2),.25)
three:  (rnd(3),.25)
four:   (rnd(4),.25)
five:   (rnd(5),.25)
six:    (rnd(6),.25)
seven:  (rnd(7),.25)
eight:  (rnd(8),.25)
endmacro
*
* initialize first 8 measures
*
randu   rnd(1),70
randu   rnd(2),70
randu   rnd(3),70
randu   rnd(4),70
randu   rnd(5),70
randu   rnd(6),70
randu   rnd(7),70
randu   rnd(8),70
loop    i ^= 1,8
.       calc    rnd(i) ^= rnd(i) + 5
endloop
*
* set values for end chord (if glide used)
*
calc    i ^= 1
loop    i @< 8
.       calc    last(i) ^= 2^*i + 30
.       calc    i ^= i + 1
endloop
*
measure 1
one:    tie vpp< (rnd(1),.25)
measure 2
one:    (rnd(1),.25)
two:    tie vpp< (rnd(2),.25)
measure 3
one:    (rnd(1),.25)
two:    (rnd(2),.25)
three:  tie vpp< (rnd(3),.25)
measure 4
one:    (rnd(1),.25) vmp<
two:    (rnd(2),.25) vmp<
three:  (rnd(3),.25) vmp<
four:   tie vpp< (rnd(4),.25) vmp<
measure 5
one:    (rnd(1),.25)
two:    (rnd(2),.25)
three:  (rnd(3),.25)
four:   (rnd(4),.25)
five:   tie vpp< (rnd(5),.25)
measure 6
one:    (rnd(1),.25) vmf<
two:    (rnd(2),.25) vmf<
three:  (rnd(3),.25) vmf<
four:   (rnd(4),.25) vmf<
five:   (rnd(5),.25) vmf<
six:    tie vpp< (rnd(6),.25) vmf<
measure 7
one:    (rnd(1),.25)
two:    (rnd(2),.25)
three:  (rnd(3),.25)
four:   (rnd(4),.25)
five:   (rnd(5),.25)
six:    (rnd(6),.25)
seven:  tie vpp< (rnd(7),.25)
measure 8
one:    (rnd(1),.25) vf<
two:    (rnd(2),.25) vf<
three:  (rnd(3),.25) vf<
four:   (rnd(4),.25) vf<
five:   (rnd(5),.25) vf<
six:    (rnd(6),.25) vf<
seven:  (rnd(7),.25) vf<
eight:  tie vpp< (rnd(8),.25) vf<
*
*-- =1label
loop	loopnum @= 0
measure (mesadj+9-loopnum)
randcor
calc    loopnum ^= loopnum - 1
endloop
*-- goto    (loopnum @= 0),=1label,x
*
randu   select,8
randu   rnd(select),70
*
measure (8+1+mesadj)            $$ glide down to end chord
one:    vff> (rnd(1))@D(last(1),1)
two:    vff> (rnd(2))@D(last(2),1)
three:  vff> (rnd(3))@D(last(3),1)
four:   vff> (rnd(4))@D(last(4),1)
five:   vff> (rnd(5))@D(last(5),1)
six:    vff> (rnd(6))@D(last(6),1)
seven:  vff> (rnd(7))@D(last(7),1)
eight:  vff> (rnd(8))@D(last(8),1)
measure (9+1+mesadj)
one:    (last(1),.25) v20
two:    (last(2),.25) v20
three:  (last(3),.25) v20
four:   (last(4),.25) v20
five:   (last(5),.25) v20
six:    (last(6),.25) v20
seven:  (last(7),.25) v20
eight:  (last(8),.25) v20
*
*measure (8+1+mesadj)           $$ these for slow fade-out
*one:    vff> (rnd(1),.25)
*two:    vff> (rnd(2),.25)
*three:  vff> (rnd(3),.25)
*four:   vff> (rnd(4),.25)
*five:   vff> (rnd(5),.25)
*six:    vff> (rnd(6),.25)
*seven:  vff> (rnd(7),.25)
*eight:  vff> (rnd(8),.25) v20
*measure (8+2+mesadj)
*one:    (rnd(1),.25)
*two:    (rnd(2),.25)
*three:  (rnd(3),.25)
*four:   (rnd(4),.25)
*five:   (rnd(5),.25)
*six:    (rnd(6),.25)
*seven:  (rnd(7),.25) v20
*measure (8+3+mesadj)
*one:    (rnd(1),.25)
*two:    (rnd(2),.25)
*three:  (rnd(3),.25)
*four:   (rnd(4),.25)
*five:   (rnd(5),.25)
*six:    (rnd(6),.25) v20
*measure (8+4+mesadj)
*one:    (rnd(1),.25)
*two:    (rnd(2),.25)
*three:  (rnd(3),.25)
*four:   (rnd(4),.25)
*five:   (rnd(5),.25) v20
*measure (8+5+mesadj)
*one:    (rnd(1),.25)
*two:    (rnd(2),.25)
*three:  (rnd(3),.25)
*four:   (rnd(4),.25) v20
*measure (8+6+mesadj)
*one:    (rnd(1),.25)
*two:    (rnd(2),.25)
*three:  (rnd(3),.25) v20
*measure (8+7+mesadj)
*one:    (rnd(1),.25)
*two:    (rnd(2),.25) v20
*measure (8+8+mesadj)
*one:    (rnd(1),.25) v20
