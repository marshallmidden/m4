*

* This macro will compile several pieces in a row.

* This is useful in that it will only take up 1 terminal

* (though it will take more time).

*

* To use this, create an OPAL file that -include-s this

* file in the beginning.  On the following line(s),

* type something like:  compile   piece1 / piece2 / ...

* (don't end with a /)

*

* At the present moment, the originating nameset for all

* files to be compiled must be the same, and the files

* must all be compiled for the same function (i.e. all

* formatting for printing or all compiling for playback).

* The output nameset must be the same for all files, but

* it may be different from the originating nameset.

*

format  systems

macro   compile A

 

        vars    PIECE,DELIM

 

* If this is the first "compile" macro, clear the flag.

* Put the "compile" arguments into the GLOM variable.

 

        if      firstc

                calc    firstc ^= 0

                encode  GLOM^=A

 

* If this is not the first "compile" macro call, then

* restore the value of "compnum".  Append the macro

* argument to the GLOM variable.

 

        else

                calc    compnum ^= savecn

                encode  GLOM^=GLOM / A

        endif

 

* Get first piece name to compile.  If it is empty, or

* if a print command was generated by a previous "parts"

* macro call, then don't generate a print command.

debug   GLOM

 

        encode  PIECE^=GLOM{compnum+1,1}

        encode  DELIM^=GLOM{compnum+2,1}

 

*        if      'PIECE' @= '' $and$ not(outputp)

        if      'PIECE' @= ''

                calc    compnum ^= compnum + 2

                loop    'DELIM' @= '/' $and$ 'DELIM' @= ''

                        encode  PIECE^=PIECE,DELIM

                        calc    compnum ^= compnum + 1

                        encode  DELIM^=A{compnum,1}

                endloop

 

* compile this piece

 

                include piano,PIECE

 

* Set a flag indicating that the print command has

* already been output.

 

*                calc    outputp ^= -1

 

* If this is the last staff to print, set repetitive compile

* variable to 0 (indicating this is the last compile).

* Save a value of the repetitive compile variable in case

* there is another parts macro call.

 

                calc    savecn ^= compnum

                if      'DELIM' = ''

                        calc    compnum ^= 0

                endif

        endif

 

endmacro

 

vars    GLOM            $$ all "parts" tags put together

vars    firstc          $$ -1 if this is the first "compile"

*vars    outputp         $$ -1 if print command was output

vars    savecn          $$ save "compnum" between "parts"

 

calc    firstc ^= -1     $$ no "compile" yet

*calc    outputp ^= 0     $$ no "print" generated yet

calc    savecn ^= compnum $$ saved compnum

*

*

compile Song Without Words
