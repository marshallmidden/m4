* vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4
spaces
staff xabc:1
calc  m1=3
if m1 == 1
  debug m1 is 1 if
elseif m1 == 2
  debug m1 is 2 elseif
else
  debug m1 is not 1 nor 2 else
endif

vars    abc, ABC(2,3), DEF(m1-1,m1), GHI(1,1,1)
encode  ABC(1,1)=hi there11
encode  ABC(1,2)=hi there12
encode  ABC(1,3)=hi there13
encode  ABC(2,1)=hi there21
*-- encode  ABC(2,2)=hi there22
calc ABC(2,2) = 'This is 22'
encode  ABC(2,3)=hi there23
encode GHI(1,1,1)=This is capital ghi indexed 1,1,1

debug   THIS is ABC(1,1) and ABC(2,1) and ABC(2,2)

calc    abc = 5
debug   abc , value5
debug   this is a string
calc    ABC = 'hi there'        $$ ERROR - variable is array
debug ABC
debug ABC(1,1)
debug ABC(1,2)
debug ABC(1,3)
debug ABC(2,1)
debug ABC(2,2)
debug ABC(2,3)

debug DEF(1,1)
debug GHI(1,1,1)
*
measure 111
macro   patch(MIDCHN, PATNUM)
        vars    abc,DEF
        calc abc = "hi there"
        calc DEF = 123.456
        if      lime
                'patch(MIDCHN, PATNUM)'
        else
                midi(o300 + MIDCHN - 1, PATNUM)     $$ WARNING - NOTDONEYET - do_midi
        endif
endmacro

measure 222
*-- patch
xabc: 3c4,patch(1,2)
measure 333
xabc: 3c4,patch   1,2           $$ ERROR - macro patch did not match terminators correctly.
measure 444
xabc: 3c4,patch(MIDCHN, PATNUM) $$ ERROR - macro "patch" argument "MIDCHN" would be recursive with "MIDCHN".
measure 555
xabc: 3c4,patch(MIDCHN PATNUM)  $$ ERROR - macro "patch" argument "PATNUM" would be recursive with "PATNUM".
measure 666
xabc: 3c4,patch(MIDCHN,PATNUM, 4)   $$ ERROR - macro "patch" argument "MIDCHN" would be recursive with "MIDCHN".

vars    CHARSTRING
encode CHARSTRING=3e+4 4c8 [4d2 5a] 3c4 5a2
measure 777
CHARSTRING{2}      $$ 4c8 [4d2 5a]  : brackets count as 1. (start cardinal, lth)
CHARSTRING{2,5}      $$ 4c8 [4d2 5a]  : brackets count as 1. (start cardinal, lth)
                     $$ lth missing means to end of string.

debug   abc{2}
debug   ABC(2,3){2,1}
