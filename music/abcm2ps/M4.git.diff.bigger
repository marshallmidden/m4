diff --git a/abcm2ps.h b/abcm2ps.h
index f322232..e885b3e 100644
--- a/abcm2ps.h
+++ b/abcm2ps.h
@@ -5,7 +5,8 @@
 
 #include "config.h"
 
-#define MAXVOICE 32	/* max number of voices */
+// #define MAXVOICE 32	/* max number of voices */
+#define MAXVOICE 128	/* max number of voices */
 
 #define MAXHD	8	/* max heads in a chord */
 #define MAXDC	32	/* max decorations per symbol */
diff --git a/music.c b/music.c
index 46f9171..ed450fc 100644
--- a/music.c
+++ b/music.c
@@ -2817,6 +2817,7 @@ static void set_pitch(struct SYMBOL *last_s)
 	smallest_duration = dur;
 }
 
+#define VOICESPERSTAFF	6
 /* -- set the stem direction when multi-voices -- */
 /* this function is called only once per tune */
 static void set_stem_dir(void)
@@ -2830,7 +2831,7 @@ static void set_stem_dir(void)
 			int voice;
 			short ymn;
 			short ymx;
-		} st[4];		/* (no more than 4 voices per staff) */
+		} st[VOICESPERSTAFF];		/* (no more than 4 voices per staff) */
 	} stb[MAXSTAFF];
 	struct {
 		signed char st1, st2;	/* (a voice cannot be on more than 2 staves) */
@@ -2842,7 +2843,7 @@ static void set_stem_dir(void)
 	while (s) {
 		for (staff = nst; staff >= 0; staff--) {
 			stb[staff].nvoice = -1;
-			for (i = 4; --i >= 0; ) {
+			for (i = VOICESPERSTAFF; --i >= 0; ) {
 				stb[staff].st[i].voice = -1;
 				stb[staff].st[i].ymx = 0;
 				stb[staff].st[i].ymn = 24;
@@ -2862,7 +2863,7 @@ static void set_stem_dir(void)
 				sy = sy->next;
 				for (staff = nst; staff <= sy->nstaff; staff++) {
 					stb[staff].nvoice = -1;
-					for (i = 4; --i >= 0; ) {
+					for (i = VOICESPERSTAFF; --i >= 0; ) {
 						stb[staff].st[i].voice = -1;
 						stb[staff].st[i].ymx = 0;
 						stb[staff].st[i].ymn = 24;
@@ -2899,7 +2900,7 @@ if (staff > nst) {
 					break;
 			}
 			if (i < 0) {
-				if (++stb[staff].nvoice >= 4)
+				if (++stb[staff].nvoice >= VOICESPERSTAFF)
 					bug("Too many voices per staff", 1);
 				for (i = 0; i < stb[staff].nvoice; i++) {
 					if (rvoice < stb[staff].st[i].voice) {
@@ -4396,6 +4397,7 @@ static void set_stems(void)
 			if (s->sflags & S_FEATHERED_BEAM)
 				nflags = ++s->nflags;
 			for (s2 = s->next; /*s2*/; s2 = s2->next) {
+				if (s2 == NULL) break;
 				if (s2->abc_type == ABC_T_NOTE) {
 					if (s->sflags & S_FEATHERED_BEAM)
 						s2->nflags++;
@@ -4404,14 +4406,17 @@ static void set_stems(void)
 				}
 			}
 /*			if (s2) */
+  			if (s2)
 			    if (s2->nflags > nflags)
 				nflags = s2->nflags;
 		} else if ((s->sflags & (S_BEAM_ST | S_BEAM_END)) == S_BEAM_END) {
-			for (s2 = s->prev; /*s2*/; s2 = s2->prev) {
+//			for (s2 = s->prev; /*s2*/; s2 = s2->prev) {
+			for (s2 = s->prev; s2; s2 = s2->prev) {
 				if (s2->sflags & S_BEAM_ST)
 					break;
 			}
 /*			if (s2) */
+			if (s2)
 			    if (s2->nflags > nflags)
 				nflags = s2->nflags;
 		}
