#! /bin/bash
###############################################################################################
#                                 CONFIDENTIAL AND PROPRIETARY
#                  Copyright (C) 2010 Xiotech Corporation, All Rights Reserved
###############################################################################################
#
# \file     Install
# \author   Tom Marlin
#
# Installation script for performing custom bash shell commands.
#
###############################################################################################


STATUS_FILE=OpStatus.txt
ERRORS_FILE=OpErrors.txt


#
# Processes Input Parameters
#
# -d        DSC Identifier.
# -p        Back-end Switch Admin Password
# -g        Enforce removal of GeoReplication zones (0=no or 1=true)
#


while getopts "d:p:g:" opt; do
  case $opt in
    d  )  DSC_ID="${OPTARG}";;
    p  )  SW_PASSWORD="${OPTARG}";;
    g  )  GEOREP_ZONE_CHECK="${OPTARG}";;
  esac
done
shift $(($OPTIND - 1))

if [[ ${DSC_ID} == "" ]]
then
  OPT_ERR=1
fi


#
# Get the Target DSC ID
#

if [[ ${OPT_ERR} == "1" ]]
then
  echo "System Status Checker: Install"
  echo "Usage: $(basename $0) -d DSC_ID"
  exit 1
fi


ls -R

#
# Decompress CCBCL
#

tar jxvf CCBE.tbz2


#
# Run the "real" system status checker
#

chmod a+x check_warm_booted_sw
chmod a+x SystemStatusChecker

georep_zone_check_string=""
if [[ ${GEOREP_ZONE_CHECK} == "" ]]
then
  georep_zone_check_string=""
else
  georep_zone_check_string="-g ${GEOREP_ZONE_CHECK}"
fi


if [[ ${SW_PASSWORD} == "" ]]
then
  ./SystemStatusChecker -d $DSC_ID -e OpErrors.txt -s OpStatus.txt $georep_zone_check_string
else
  ./SystemStatusChecker -d $DSC_ID -e OpErrors.txt -s OpStatus.txt -p ${SW_PASSWORD} $georep_zone_check_string
fi

exit $?;

