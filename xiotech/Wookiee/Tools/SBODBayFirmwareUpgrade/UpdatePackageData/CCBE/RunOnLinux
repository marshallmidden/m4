#!/usr/bin/perl -w
#====================================================================
#
# FILE NAME:    RunOnLinux 
#
# AUTHOR:       Randy Rysavy
#
# DATE:         9/1/2004
#
# DESCRIPTION:  Modifies ccbCL.pl & DebugConsole.pl (and perhaps others) 
#               to work on Linux, then exec's to it.  This program is intended
#               to be run only on Linux.
#
#====================================================================

use strict;

#
# Print out help/usage info
#
my $script = $0;
$script =~ s/\\/\//g;  # back slashes -> forward slashes
$script =~ s/^.*\///;  # get base name
if (@ARGV < 1) 
{ 
    print "\nUsage: $script perl-script\n";
    exit 1;
}

my $curName = shift @ARGV;
my $linuxName = "$curName-linux";

sub GetModTime
{
    my ($fname) = @_;
    my @times = (0,0);
    
    if (-r "$fname")
    {
        my @st = stat("$fname");
        @times = ($st[8], $st[9]);
    }

    return @times;
}

my @curTime = GetModTime "$curName";
my @linuxTime = GetModTime "$linuxName";

if ($curTime[1] != $linuxTime[1])
{
    print "=== Modifying $curName to run on Linux ===\n";

    unlink "$linuxName";

    open IN, "$curName" or die;
    open OUT, "> $linuxName" or die;

    #
    # Here's where you comment out the lines that Linux doesn't like,
    # and add lines here that Linux does like.
    #
    while(<IN>)
    {
        $_ = "#$_" if /<WINDOWS ONLY>/i;
        $_ =~ s/^#// if /<LINUX ONLY>/i;
        print OUT;
    }

    close IN;
    close OUT;

    chmod 0777, "$linuxName";

    utime @curTime, "$linuxName";
}

# Arguments must not be re-parsed by /bin/sh.  Quote them with single quotes.
my $args = '';
while (@ARGV) {
  $args .= " '" . shift(@ARGV) . "'";
}

exec "./$linuxName$args";
