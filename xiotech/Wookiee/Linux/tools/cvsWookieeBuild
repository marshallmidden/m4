#!/bin/bash -e
# $Id: cvsWookieeBuild 16339 2006-12-28 19:08:44Z mdr $
# Script to build releases
# Copyright 2006 Xiotech Corporation. All Rights reserved.
# Mark D. Rustad, 2006/07/20
#
# WookieeBuild [-h] [-b branch] [-T] [-t tag] [-v version] [-w where] [-m model]

usage() {
    echo "$0 [-h] [-b branch] [-v version] [-w where]"
    echo ""
    echo "-h display help"
    echo "-b branch to build code from, ie. HEAD"
    echo "-v version of code to build, ie. F100"
    echo "-w where to put results of build"
    echo "-T create tag for build"
    echo "-t use tag for build"
    echo "-m model to build (or ALL)"
}

test "$#" -eq 0 && { echo "Parameters required"; usage; exit 1; }
modules=Wookiee
models="750 3000"
branch=
tag=
ver=
where=
settag=
model=ALL

while getopts "b:hm:Tt:v:w:" option; do
    case "${option}" in
        b) branch="${OPTARG}";;
        h) usage;;
        t) tag="${OPTARG}";;
        T) settag=1;;
        v) ver="${OPTARG}";;
        w) where="${OPTARG}";;
        m) model="${OPTARG}";;
        :) echo "Required parameter for option ${OPTARG} missing.";
            usage; exit 1;;
        \?) usage; exit 1;;
        *) echo "Unknown option '${option}'"; usage; exit 1;;
    esac
done

shift $((OPTIND - 1))

test "${branch}" = "" && branch=HEAD
test "`echo ${branch}|tr [:lower:] [:upper:]`" = "MAIN" &&
    branch="HEAD"

test "${ver}" = "" && ver=ENGR
uver="`echo ${ver}|tr [:lower:] [:upper:]`"

where="`echo "${where}"|tr [:lower:] [:upper:]`"
test "${where}" = "" && where=Engr

test "${tag}" = "" && tag="${branch}_${uver}"
tagopt=
ttagopt=
test "${settag}" = "" && { tagopt="-r ${tag}"; ttagopt="-r ${tag}"; }
test "${tagopt}" = "" && tagopt="-r ${branch}"

test "${model}" = "ALL" && model="${models}"

echo "----------"
echo "About to build:"
echo "  branch=${branch}, ver=${ver}, where=${where}"
echo "  tag=${tag}, settag=${settag}, tagopt=${tagopt}"
echo "  ttagopt=${ttagopt}, model=${model}"
echo ""

while { echo -n "Ready [Y/N]? "; read input; } do
    test "${input}" = "Y" && break
    test "${input}" = "n" -o "${input}" = "N" &&
        { echo "build cancelled."; exit 1; }
done
echo "*** Beginning build ***"

blddir="${branch}-${uver}"
test -d "${blddir}" &&
    {   echo "Work directory, ${blddir}, already exists!"
        while { echo -n "Continue, blowing it away [Y/N]? "; read input; } do
            test "${input}" = "Y" && { echo "Continuing..."; break; }
        done
    }

rm -rf "${blddir}"
mkdir -p "${blddir}"
cd "${blddir}"
echo "** Entering ${blddir} **"
echo "** Checking out ${modules} from ${tagopt} **"
cvs -q co ${tagopt} ${modules} > co.out 2>&1 ||
    { echo "CVS ${modules} checkout failed!"; exit 1; }
echo "** Checking out Tools/UpdateSigner **"
cvs -q co -l Tools >> co.out 2>&1 ||
    { echo "CVS Tools checkout failed!"; exit 1; }
(cd Tools && cvs -q co ${ttagopt} UpdateSigner) >> co.out 2>&1 ||
    { echo "CVS Tools/UpdateSigner checkout failed!"; exit 1; }

if [ "${settag}" = "1" ]; then
    echo "** Setting tag ${tag} **"
    cvs -q tag ${tag} ${modules} Tools &> tag.out ||
        { echo "CVS tag failed!"; exit 1; }
fi

cd Wookiee || { echo "Failed to enter Wookiee!"; exit 1; }

test -x ./BuildRelease || { echo "No BuildRelease script!"; exit 1; }

for mod in ${model}; do
    echo "** Beginning build for model ${mod} **"
    ./BuildRelease -v ${ver} -w ${where} -m ${mod} ||
        { echo "BuildRelease -v ${ver} -w ${where} -m ${mod} failed!"; exit 1; }
done

echo "** Wookiee Build completed successfully! **"

# vi:sw=4 ts=4 expandtab
