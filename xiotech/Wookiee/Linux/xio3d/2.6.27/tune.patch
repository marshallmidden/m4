# $Id: tune.patch 15585 2006-11-30 22:59:47Z RustadM $
# This patch tunes some parameters to reduce memory usage. The amount of
# memory in our systems is large, but mostly dedicated to our application
# so the kernel is misled into oversizing some structures. This reduced
# size should be adequate for anything we are likely to run. If we ever
# need to support thousands of tcp connections or many hundreds of
# processes, these should be revisited. Also note that some tuning is
# done from the kernel command line.

--- a/kernel/pid.c	2005-10-27 19:02:08.000000000 -0500
+++ b/kernel/pid.c	2005-12-08 11:59:04.147962307 -0600
@@ -495,7 +495,7 @@ struct pid *find_ge_pid(int nr, struct 
 
 /*
  * The pid hash table is scaled according to the amount of memory in the
- * machine.  From a minimum of 16 slots up to 4096 slots at one gigabyte or
+ * machine.  From a minimum of 16 slots up to 2048 slots at 512MB or
  * more.
  */
 void __init pidhash_init(void)
@@ -504,7 +504,7 @@ void __init pidhash_init(void)
 	unsigned long megabytes = nr_kernel_pages >> (20 - PAGE_SHIFT);
 
 	pidhash_shift = max(4, fls(megabytes * 4));
-	pidhash_shift = min(12, pidhash_shift);
+	pidhash_shift = min(11, pidhash_shift);
 	pidhash_size = 1 << pidhash_shift;
 
 	printk("PID hash table entries: %d (order: %d, %Zd bytes)\n",
