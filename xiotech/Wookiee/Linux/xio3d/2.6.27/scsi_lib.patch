--- a/drivers/scsi/scsi_lib.c	2006-03-19 23:53:29.000000000 -0600
+++ obj-3d3000/drivers/scsi/scsi_lib.c	2006-06-12 17:52:17.860791985 -0500
@@ -306,6 +306,13 @@
 	struct bio *bio = NULL;
 	int i, err, nr_vecs = 0;
 
+	/* The nr_pages calc above assumes that only the first and last page
+	 * may be partial.  With direct I/O of iovecs, the first and last page
+	 * of each iovec may be partial pages, so make sure we allocate at
+	 * least nsegs pages to handle the worst when nothing coalesces.
+	 */
+	nr_pages = max_t(int, nr_pages, nsegs);
+
 	for_each_sg(sgl, sg, nsegs, i) {
 		page = sg_page(sg);
 		off = sg->offset;
@@ -355,6 +362,18 @@ static int scsi_req_map_sg(struct reques
 		}
 	}
 
+	/* if bio_add_pc_page coalesced page fragments, we may not have hit
+	 * the vec limit, and we may still need to merge the bio into the req.
+	 */
+	if (bio != NULL) {
+		err = scsi_merge_bio(rq, bio);
+		if (err) {
+			bio_endio(bio, 0);
+			goto free_bios;
+		}
+		bio = NULL;
+	}
+
 	rq->buffer = rq->data = NULL;
 	rq->data_len = bufflen;
 	return 0;
