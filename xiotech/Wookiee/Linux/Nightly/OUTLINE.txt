1) Do it at 1am-ish.
2) If weekly, do slightly differently -- see below.
3) Need release ${HEADER}.  (text file?)  ELORA, FOSTERS, ...
4) Need ${BRANCH} tags to do it for.   (blank for main?)
   foreach $BRANCH ( $BRANCHES )

5)   cvs rtag -r ${BRANCH} "${HEADER}_NIGHTLY_BUILD_${YEAR}_${MONTH}_${DAY}_${HOUR}_${MINUTE}" Bigfoot
   main branch below (no -r ${BRANCH}).
     cvs rtag "${HEADER}_NIGHTLY_BUILD_${YEAR}_${MONTH}_${DAY}_${HOUR}_${MINUTE}" Bigfoot
6) Save nightly tag in file -- for deleting if past 30 days old.
7) mkdir someplace
   cd someplace
   cvs export -r "${HEADER}_NIGHTLY_BUILD_${YEAR}_${MONTH}_${DAY}_${HOUR}_${MINUTE}" Bigfoot
   cd Bigfoot
   make rpm
   # If error send output with make output.
   cd Proc/BuildTool
   i960elf	# Get i960 crosstools in path
   ./M4		# BuildBE and BuildFE created.
   # If error, send e-mail message with M4 output.
   cd ../../CCB/BuildTool
   ### NOT DONE YET ### Cross-Build CCB.
   # If error, send e-mail message with C-B-CCB output.
   cd ../..
8) Load and run YetiApps on Wookiee, then
   run regression_single.pl.
   # If error, send e-mail message with regression_single.pl output.
9) Load and run FERun.ima, BERun.ima, CCBRun.ima on Bigfoot,
   then run regression_single.pl.
   # If error, send e-mail message with regression_single.pl output.
10) Use smbclient to copy select files to the K:\release directory.
    While YetiApps directory, Proc/src/obj/*.nm and *.map.
    BuildBE, BuildFE, Build directories *.ima, *.sym , *.map.
11) Results e-mailed.
12) If more branches, goto 4 (end of foreach).

It would be nice to have "cvs commit" logs for each day.
Then that could be put into the directory too.
For weekly, build, all the weeks logs could be packaged together.
ClearQuest tickets resolved/fixed too?

------------------------------------------------------------------------------
Need weekly tag.  Like: YETI_${BRANCH}_${COUNT}_0
Maintance branches weekly tag like: YETI_${BRANCH}_${COUNT}_${MINOR}
Need tag that can go into 4 character VER in firmware header.
Something like First Character of ${BRANCH}, 2 character of ${COUNT}, and 1
character of ${MINOR}.

Weekly make has addition command line arguments of VER=A000 and PERF=PERF
	make VER=S050 PERF=PERF rpm

Weekly branch saves the build tree as a "tar.gz" file, directories
	Bigfoot/{CCB,Linux,Makefile,Proc,Shared}     [Example 25mb file]
and the YetiApps directory as a separate directory.

------------------------------------------------------------------------------
There needs to be a file that contains the current count for each ${COUNT},
and ${MINOR}.  Probably the same one that have the ${BRANCH}es and ${HEADER}s.

This will most likely be run via a perl script.

==============================================================================
What does "GA" mean and consist of?
