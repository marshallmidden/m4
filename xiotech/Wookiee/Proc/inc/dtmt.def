# $Id: dtmt.def 89177 2009-06-15 14:14:22Z m4 $
#*****************************************************************************
#
#  NAME: dtmt.def  (Data-link Manager Target Management Table)
#
#  DESCRIPTION:
#       This module defines the data structure and equates associated
#       with managing a target by the data-link manager.
#
#  Copyright (c) 1999-2009 - XIOtech Corporation.   All rights reserved.
#
#*****************************************************************************

                                @#ifndef _DTMT_H_
                                @#define _DTMT_H_
                                @#include "XIO_Types.h"
                                @struct MLMT;
                                @struct TPMT;
                                @struct ILT;
#
# --- Target type code definitions (dtmt_type)
#
.def dtmt_ty_MAG 0              @#define DTMT_TYPE_XIO          @ XIOtech Controller target
.def dtmt_ty_FT 1               @#define DTMT_TYPE_FT           @ Foreign target
#
# --- Target state code definitions (dtmt_state)
#
.def dtmt_st_op 0               @#define DTMT_STATE_OP          @ Operational
.def dtmt_st_notop 1            @#define DTMT_STATE_NOT_OP      @ Not operational
.def dtmt_st_init 2             @#define DTMT_STATE_INIT        @ Initializing
#
# --- DTMT event handler routine table routine definitions (dtmt_ehand)
#
.def dtmt_eh_tgone 0            @#define DTMT_EH_TARGET_GONE    @ Target disappeared event handler
#
# --- Special INQUIRY Flag #1 bit definitions
#
.def dtmt_target_only_mode 0    @#define TARGET_ONLY_MODE       @ Node in Target Only mode
                                @                               @ Bits 1 - 7 reserved
#=============================================================================
# The typedef of an embedded struct can not be done within the union. Do them here.
                                @typedef struct XIO_LINK_DATA XIO_LINK_DATA;
                                @typedef struct FT_LINK_DATA FT_LINK_DATA;
#=============================================================================
#
# --- Begin structure -------------------------------------------------
#
                                @           @ Basic DTMT data structure
.struct                         @typedef struct DTMT
                                @{
.w dtmt_link                    @    struct DTMT *pNext;        @ Next DTMT in link list
.b dtmt_type                    @    UINT8        type;         @ Target type code
.b dtmt_state                   @    UINT8        state;        @ State of target
.s dtmt_sulindx                 @    UINT16       suListIndex;  @ Storage unit list index
.w dtmt_lldmt                   @    struct ILT  *pILTlldmt;    @ Assoc. link-level driver ILT/VRP
.w dtmt_lldid                   @    UINT32       lldid;        @ Link-level driver session ID
.w dtmt_ehand                   @    void        *pEHandler;    @ Event handler table
.w dtmt_alpa                    @    UINT32       alpha;        @ AL-PA address
.b dtmt_nwwn 8                  @    UINT64       nodeWWN;      @ Node WWN
.b dtmt_pwwn 8                  @    UINT64       portWWN;      @ Port WWN
.w dtmt_tpmthd                  @    struct TPMT *pTPMTHead;    @ Target path management table head
.w dtmt_tpmttl                  @    struct TPMT *pTMPTTail;    @ Target path management table tail
.w dtmt_bnr                     @    UINT32       banner;       @ Banner field
.w dtmt_alias_dtmt              @    struct DTMT *pAlias;       @ Alias node DTMT address
.w dtmt_pri_dtmt                @    struct DTMT *pPrimary;     @ Primary DTMT address
.b dtmt_icl                     @    UINT8        iclFlag;      @ ICL flag --0 or 1
.b dtmt_rsvd1 3                 @    UINT8        rsvd1[3];     @ Reserved 3 bytes

#=============================================================================
.m                              @    union                      @ end of common area, start of union
                                @    {
# --- XIOtech Controller Link target data area data structure ---------------
                                @       struct XIO_LINK_DATA    @ XIOtech Controller Link Target Data
                                @       {
.w dml_mlmt                     @           struct MLMT *pMLMT; @ Assoc. MLMT address
.w dml_mllist                   @           struct DTMT *pNext; @ Link list field for MLMT list
.w dml_sn                       @           UINT32     serialNum; @ XIOtech Controller serial number
.b dml_path                     @           UINT8      path;    @ Path number
.b dml_cl                       @           UINT8      cluster; @ Cluster number
.b dml_vdcnt                    @           UINT8      numVDisks;      @ Number of VDisks assoc. with cntlr
.b dml_flag1                    @           UINT8      flag1;   @ Special INQUIRY flag byte #1
                                @                               @ Bit 7 -1 reserved=
                                @                               @     0 = 1=node in target-only mode
.b dml_pname 8                  @           UINT64     pName;   @ Peer Controller Assigned Node Name
.w dml_ip                       @           IP_ADDRESS ip;      @ Assigned IP address of peer
                                @                               @  XIOtech Controller node
.w dml_alias                    @           UINT32     aliasSerialNum; @ Alias Node Serial Number
.b dml_rtycnt                   @           UINT8      retryCount; @ Polling Retry Count
.b dml_poll_sent                @           UINT8      pollSent; @ A Poll has already been sent flag
.s dml_poll_cnt                 @           UINT16     pollCount; @ Successful Polling Cntr-lost resets
.w dml_bedlmid                  @           UINT32     beDLMid; @ BE DLM ID for use by FE DLM
.b dlm_rsvd1 8                  @           UINT8      rsvd1[8]; @ Reserved 8 bytes
                                @       } xio;
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# --- Foreign Target data area data structure -------------------------------
.r                              @       struct FT_LINK_DATA     @ Foreign Target Link Data
                                @       {
.b dft_luns                     @          UINT8  numLUNs;      @ Number of LUNs
.b dft_snlen                    @          UINT8  serialNumLength; @ Serial Number Length
.b dft_dtype                    @          UINT8  deviceType;   @ Device Type Code
.b dft_rsvd1 1                  @          UINT8  rsvd67;       @ Reserved 1 byte
.b dft_rev 4                    @          UINT32 revision;     @ Product Revision Number
.b dft_venid 8                  @          UINT64 vendorID;     @ Vendor ID (from INQUIRY)
.b dft_prid 16                  @          UINT8  productID[16]; @ Product ID (from INQUIRY)
.b dft_sn 16                    @          UINT8  serialNum[16]; @ Device Serial Number
                                @       } ft;
                                @   } td;
# --- End structure ---------------------------------------------------
.f dtmt_size 0 # Size of DTMTs  @} DTMT;
                                @#endif /* _DTMT_H_ */
#******************************************************************************
#
###
# Modelines:
# Local Variables:
# tab-width: 4
# indent-tabs-mode: nil
# End:
# vi:sw=4 ts=4 expandtab
