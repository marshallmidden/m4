# $Id: WC_WRP.def 89177 2009-06-15 14:14:22Z m4 $ */
#**********************************************************************
#
#  NAME: WC_WRP.def - WRP (Write Cache Request Packet) definitions
#
#  DESCRIPTION:
#       This file defines the constants and data structures for WRP
#       communications from the BE to the FE.
#
#  Copyright (c) 2005-2009 XIOtech Corporation. All rights reserved.
#
#**********************************************************************

                                @#ifndef _WC_WRP_H_
                                @#define _WC_WRP_H_

                                @#include "ecodes.h"
                                @#include "ilt.h"
                                @#include "XIO_Types.h"

#   WRP Function Codes
.def WC_SET_T_DISABLE 0x0680    @#define WC_SET_T_DISABLE       @ Temporary VID Write Cache Disable
.def WC_CLEAR_T_DISABLE 0x0681  @#define WC_CLEAR_T_DISABLE     @ Clear the Temp VID Write Cache Disable

# Macros
                                @#ifdef BACKEND
                                @#define WC_VDiskTempDisable(VID) WC_VDiskDisable((VID), WC_SET_T_DISABLE)
                                @#define WC_VDiskClearDisable(VID) WC_VDiskDisable((VID), WC_CLEAR_T_DISABLE)
                                @#endif


# WRP Write-Cache Request Packet data Structure.
# Must have the same offsets for the Link Layer Communications that MRPs/VRPs/DRPs have.
.struct                         @typedef struct WRP
                                @{
.s wrp_func                     @   UINT16  function;           @ Function - required location for Link Layer
.b wrp_rsvd1                    @   UINT8   rsvd1;              @ Reserved 1 byte
.b wrp_status                   @   UINT8   status;             @ Status -  required location for Link Layer
.s wrp_vid                      @   UINT16  vid;                @ Virtual ID
.b wrp_rsvd2 6                  @   UINT8   rsvd2[6];           @ Reserved 6 bytes
.w wrp_pktAddr                  @   void   *pktAddr;            @ Packet physical address - reqd Link Layer
.b wrp_rsvd3 16                 @   UINT8   rsvd16[16];         @ Reserved 16 bytes - make size of MRP
.f wrpsiz 0 # size of WRP       @} WRP;

# Function prototypes
                                @#ifdef FRONTEND
                                @extern void WC_WRPQueue(void *, ILT *);
                                @extern void WC_WRPExec(void);
                                @extern void WC_TDisExec(void);
                                @extern void CT_LC_WC_WRPQueue(void *, void *);
                                @#else   /* BACKEND */
                                @extern UINT8 WC_VDiskDisable(UINT16, UINT16);
                                @#endif  /* FRONTEND */

                                @#endif /* _WC_WRP_H_*/
#******************************************************************************
#
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
