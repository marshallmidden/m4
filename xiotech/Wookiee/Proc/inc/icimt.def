# $Id: icimt.def 89177 2009-06-15 14:14:22Z m4 $
#******************************************************************************
#
#  NAME: icimt.def (Initiator Channel Interface Management Table)
#
#  DESCRIPTION:
#       The ICIMT structure contains information for each FC Channel. Information
#       is limited to the channel acting in an initiator role (CIMT contains target
#       role channel information). There is one ICIMT per FC Channel. The ICIMT
#       contains links to other structures that are related to the initiator role.
#       This includes the TMT and TLMT structures.
#
#  Copyright (c) 1996 - 2009 Xiotech Corporation.  All rights reserved.
#
#******************************************************************************

                                @#ifndef _ICIMT_H_
                                @#define _ICIMT_H_
                                @#include "XIO_Types.h"
                                @struct TLMT;
                                @struct TMT;
                                @struct ILT;
                                @struct PCB;
#
# --- CIMT States
#
                                @typedef enum cs_state
                                @{
.set Cs_offline,0               @  Cs_offline = 0,              @ offline event
.set Cs_scanning,1              @  Cs_scanning,                 @ scanning for devices
.set Cs_NoTargs,2               @  Cs_NoTargs,                  @ no targets found
.set Cs_online,3                @  Cs_online                    @ online event
                                @} cs_state;
#
# --- lid table size in 32 bit words
#  This looks odd because it is odd. This value is index to the last word of
#  lid (handle) reservation bitmask. Because the first 0x80 lids (handles) are
#  reserved, the size is reduced by 4 words. Additionally, 2300 has problems
#  with lids above 511, so we begin allocating from that point.
#       So, ((512 - 0x80) / 32) - 1 is 11.
.set LIDtblsize,11              @                               @ Index to last word of lid handle.
#
# --- Begin ICIMT structure -------------------------------------------
                                @                   @ Initiator Channel Interface Management Table
.struct                         @typedef struct ICIMT
                                @{
.b ici_chpid                    @   UINT8  chpid;               @ CIMT chip instance
.b ici_mylid                    @   UINT8  mylid;               @ LID of my interface
.b ici_state                    @   UINT8  state;               @ CIMT state code
.b ici_tmrctl                   @   UINT8  tmrctl;              @ timer control flag
.w ici_mypid                    @   UINT32 mypid;               @ PID of my interface
.w ici_lpmapptr                 @   UINT32 lpmapptr;            @ loop map pointer
.w ici_actqhd                   @   struct TLMT *actqhd;        @ active TLMT queue head
.w ici_actqtl                   @   struct TLMT *actqtl;        @ active TLMT queue tail
.w ici_tmtQ                     @   struct TMT *tmtQ;           @ TMT queue (pointer)
.w ici_disQ                     @   struct ILT *disQ;           @ discovery queue (ILT pointer)
.w ici_trbnr                    @   UINT32 trbnr;               @ trace banner
.w ici_curtr                    @   UINT32 curtr;               @ current trace pointer
.w ici_begtr                    @   UINT32 begtr;               @ beginning trace pointer
.w ici_endtr                    @   UINT32 endtr;               @ ending trace pointer
.s ici_tflg                     @   UINT16 tflg;                @ trace flags
.s ici_dftflg                   @   UINT16 dftflg;              @ default trace flags
.w ici_fstart                   @   struct PCB *pTimer;         @ fabric starting alpa/timer task pcb
.w ici_fcur                     @   struct PCB *pDisc;          @ fabric current alpa / disc PCB in new code
.b ici_ftenable                 @   UINT8  ftenable;            @ foreign target enable flag
.b ici_FCTOI                    @   UINT8  FCTOI;               @ fabric ctl t/o inhibit
.b ici_rcnt                     @   UINT8  rcnt;                @ rescan counter
.b ici_nscan                    @   UINT8  nscan;               @ number of tscan tasks active
.f ici_lidtbl 60*4              @   UINT32 lidtbl[60];          @ lid table
.f ici_tmdir MAXLID*4           @   struct TMT *tmdir[MAX_DEV]; @ target management directory
# --- End structure ---------------------------------------------------
.f icimtsize 0                  @} ICIMT;                       @ Size of ICIMT structure.
#
                                @#endif /* _ICIMT_H_ */
#******************************************************************************
#
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
