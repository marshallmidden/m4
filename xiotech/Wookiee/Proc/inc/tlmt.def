# $Id: tlmt.def 159300 2012-06-16 04:47:51Z m4 $
#******************************************************************************
#
#  NAME: tlmt.def (Target/LUN Management Table)
#
#  Copyright (c) 1996 - 2009 XIOtech Corporation.  All rights reserved.
#
#******************************************************************************

                            @#ifndef _TLMT_H_
                            @#define _TLMT_H_

                            @#include "XIO_Types.h"
                            @struct ICIMT;
                            @struct TMT;
                            @struct ISMT;
                            @struct ILT;
#
# --- TTLMT states
#
#.set tlmstate_inactive,0    @                   @ tlmt is inactive
#.set tlmstate_active,5      @                   @ tlmt is active
                            @typedef enum tlmt_state
                            @{
.set tlmstate_inactive,0    @   tlmstate_inactive = 0,     @ tlmt is inactive
.set tlmstate_discovery,1   @   tlmstate_discovery,        @ tlmt is in discovery process
.set tlmstate_active,2      @   tlmstate_active,           @ tlmt is active
.set tlmstate_delete,3      @   tlmstate_delete            @ tlmt to be deleted
                            @} tlmt_state;
#
# --- Begin structure -------------------------------------------------
#
.struct                     @typedef struct TLMT
                            @{
.w tlm_flink                @    struct TLMT *flink;        @ Forward link
.w tlm_blink                @    struct TLMT *blink;        @ backward link
.b tlm_state                @    UINT8        state;        @ TLMT state byte
.b tlm_maxQ                 @    UINT8        maxQ;         @ Maximum queue depth
.s tlm_enblcnt              @    UINT16       enblcnt;      @ task enable count
.w tlm_cimt                 @    struct ICIMT *icimt;       @ pointer to ICIMT
.w tlm_tmt                  @    struct TMT  *tmt;          @ pointer to TMT
.w tlm_Shead                @    struct ISMT *Shead;        @ Active Session Queue ptr
.w tlm_whead                @    struct ILT  *whead;        @ Working tasks head pointer
.w tlm_wtail                @    struct ILT  *wtail;        @ Working tasks tail pointer
.w tlm_ahead                @    struct ILT  *ahead;        @ Abort tasks head pointer
.w tlm_atail                @    struct ILT  *atail;        @ Abort tasks tail pointer
.s tlm_lun                  @    UINT16       lun;          @ lun
.b tlm_rsvd1 2              @    UINT8        rsvd1[2];     @ 2 spare bytes
.s tlm_tmr0                 @    UINT16       tmr0;         @ timer 0
.s tlm_tmr1                 @    UINT16       tmr1;         @ timer 1
.b tlm_sescnt               @    UINT8        sescnt;       @ session count
.b tlm_rsvd2 3              @    UINT8        rsvd2[3];     @ 3 spare bytes
.b tlm_pdt                  @    UINT8        pdt;          @ peripheral device type
.b tlm_snlen                @    UINT8        snlen;        @ serial number length
.b tlm_dvflgs               @    UINT8        dvflgs;       @ device flags
.b tlm_rsvd3 1              @    UINT8        rsvd3;        @ --- spare byte  ---
.b tlm_venid 8              @    UINT8        venid[8];     @ vendor ID
.b tlm_proid 16             @    UINT8        proid[16];    @ product id
.b tlm_version 4            @    UINT8        version[4];   @ product revision number
.b tlm_sn 16                @    UINT8        sn[16];       @ device serial number
.l tlm_blkcnt               @    UINT64       blkcnt;       @ device block count
.w tlm_blksz                @    UINT32       blksz;        @ device block size
#
# --- End structure ---------------------------------------------------
#
.f tlmtsize 0               @} TLMT;
                                @#endif /* _TLMT_H_ */
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
