# $Id: rpn.def 122127 2010-01-06 14:04:36Z m4 $
#**********************************************************************
#
#  NAME: rpn.def (RAID Parity Node)
#
#  DESCRIPTION:
#       To provide a common means of defining the RPN structure which
#       is used exclusively by the RAID level 5 algorithms.  The RPN
#       serves as an anchor point for all I/O operations that are directed
#       to a specific RAID 5 stripe.  I/Os (RRPs) which encompass more
#       than one stripe are split into individual I/O operations (RRB)
#       which do not span stripes.
#
#  Copyright (c) 1996-2009 XIOtech Corporation.  All rights reserved.
#
#**********************************************************************

                                @#ifndef _RPN_H_
                                @#define _RPN_H_
                                @#include "XIO_Types.h"
                                @struct RDD;
                                @struct RRB;
                                @struct PSD;
#
# --- Begin structure -------------------------------------------------
#
                                @                               @ Raid Parity Node
.struct                         @typedef struct RPN
                                @{
.w rp_fthd                      @   struct RPN  *fthd;          @ Forward thread
.w rp_bthd                      @   struct RPN  *bthd;          @ Backward thread
.w rp_afthd                     @   struct RPN  *afthd;         @ Alternate forward thread
.w rp_abthd                     @   struct RPN  *abthd;         @ Alternate backward thread
#
.b rp_lock                      @   UINT8  lock;                @ RPN lock (t/f)
.b rp_act                       @   UINT8  act;                 @ RPN activated (t/f)
.b rp_xpedite                   @   UINT8  xpedite;             @ RPN expedited (t/f)
.b rp_rsvd1                     @   UINT8  rsvd1;
.w rp_rdd                       @   struct RDD  *rdd;           @ Pointer to RDD
.w rp_rrbhead                   @   struct RRB  *rrbhead;       @ RRB queue head
.w rp_rrbtail                   @   struct RRB  *rrbtail;       @ RRB queue tail
#
.w rp_spsd                      @   struct PSD  *spsd;          @ Starting PSD
.w rp_ppsd                      @   struct PSD  *ppsd;          @ Parity PSD
.w rp_wpsd                      @   struct PSD  *wpsd;          @ Wrap PSD
.w rp_rsvd2                     @   UINT32 rsvd2;               @ Reserved 4 bytes
#
.l rp_lsda                      @   UINT64 lsda;                @ Base LSDA
.l rp_spsda                     @   UINT64 spsda;               @ Base PSDA for stripe
#
.l rp_stripe                    @   UINT64 stripe;              @ Stripe number
.l rp_rsvd3                     @   UINT64 rsvd3;               @ Reserved 8 bytes
# --- End structure ---------------------------------------------------
.f rpnsiz 0 # Size of RPN       @} RPN;
                        @#endif /* _RPN_H_ */
#******************************************************************************
#
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
