# $Id: prp.def 143007 2010-06-22 14:48:58Z m4 $
#**********************************************************************
#
#  NAME: prp.def (Physical Request Packet)
#
#  DESCRIPTION:
#       To provide a common means of defining the Physical Request
#       Packet (PRP) definitions.
#
#  Copyright (c) 1996-2010 XIOtech Corporation.  All rights reserved.
#
#**********************************************************************

                                @#ifndef _PRP_H_
                                @#define _PRP_H_
                                @#include "XIO_Types.h"
                                @#include "scsi.h"              /* For SNS structure */
                                @struct DEV;
                                @struct SGL;
#
# General constant
#
.def SENSESIZ 32                @#define SENSE_SIZE             @ Size SCSI request sense ret.
#
#   pr_func definitions for PRP_TEMPLATE and PRP
#
.def prctl 8                    @#define PRP_CTL                @ SCSI I/O w/o data
.def prinput 9                  @#define PRP_INPUT              @ SCSI I/O w/input buffer
.def proutput 10                @#define PRP_OUTPUT             @ SCSI I/O w/output data buffer
#
#   pr_strategy definitions
#
.def prlow 0                    @#define PRP_LOW                @ Low non-optimized priority
.def prnorm 1                   @#define PRP_NORMAL             @ Normal optimization priority
.def prhigh 2                   @#define PRP_HIGH               @ High optimization priority
#
#   pr_flags definitions for PRP_TEMPLATE and PRP
#
.def prSLI 0                    @#define PRP_SLI                @ Suppress Length Indication
.def prSPS 1                    @#define PRP_SPS                @ Suppress Pre-spin Sense data
.def prSNX 2                    @#define PRP_SNX                @ Suppress NoneXistent log
.def prBCC 3                    @#define PRP_BCC                @ Bypass Check Condition recvry
.def prBLP 4                    @#define PRP_BLP                @ Bypass LIP Reset
.def prORT 5                    @#define PRP_ORT                @ ORdered Tag
.def prBNO 6                    @#define PRP_BNO                @ Bypass iNop Device checks
.def prUCL 7                    @#define PRP_UCL                @ Use Channel & LID in PRP
#   Values for above bits in pr_flags definitions
.set prSLIb,(1<<prSLI)      @#define PRP_SLI_BIT (1 << PRP_SLI) @ Suppress Length Indication
.set prSPSb,(1<<prSPS)      @#define PRP_SPS_BIT (1 << PRP_SPS) @ Suppress Pre-spin Sense data
.set prSNXb,(1<<prSNX)      @#define PRP_SNX_BIT (1 << PRP_SNX) @ Suppress NoneXistant log
.set prBCCb,(1<<prBCC)      @#define PRP_BCC_BIT (1 << PRP_BCC) @ Bypass Check Condition recvry
.set prBLPb,(1<<prBLP)      @#define PRP_BLP_BIT (1 << PRP_BLP) @ Bypass LIP reset
.set prORTb,(1<<prORT)      @#define PRP_ORT_BIT (1 << PRP_ORT) @ ORdered Tag bit
.set prBNOb,(1<<prBNO)      @#define PRP_BNO_BIT (1 << PRP_BNO) @ Bypass iNop Device checks
.set prUCLb,(1<<prUCL)      @#define PRP_SRL_BIT (1 << PRP_SRL) @ Use channel & LID in PRP
#
#   pr_logflags definitions (pr_flags ran out of space), used in physical_isp.c
#
.def prSRL 0                    @#define PRP_SRL                @ Suppress Retry Log event
#
# --- Begin structure -------------------------------------------------
#
.struct                         @typedef struct PRP             @ Physical Request Packet
                                @{
.b pr_func                      @   UINT8  func;                @ Function
.b pr_tmocnt                    @   UINT8  timeoutCnt;          @ Timeout Counter
.b pr_strategy                  @   UINT8  strategy;            @ Strategy
.b pr_logflags                  @   UINT8  logflags;            @ Logging flags for physical
.b pr_channel                   @   UINT8  channel;             @ FC channel
.b pr_thunked                   @   UINT8  thunked;             @ For MANY_ISE, cdb has been converted
.s pr_lun                       @   UINT16 lun;                 @ LUN
.w pr_id                        @   UINT32 id;                  @ FC ID
.w pr_dev                       @   struct DEV  *pDev;          @ DEVice pointer
.l pr_sda                       @   UINT64 sda;                 @ SDA
.l pr_eda                       @   UINT64 eda;                 @ EDA
.w pr_sglptr                    @   struct SGL  *pSGL;          @ SGL pointer
.w pr_sglsize                   @   UINT32 sglSize;             @ SGL size
.w pr_timeout                   @   UINT32 timeout;             @ Timeout
.w pr_rqbytes                   @   UINT32 rqBytes;             @ Requested byte count
.b pr_rsbytes                   @   UINT8  reqSenseBytes;       @ Request sense byte count
.b pr_qstatus                   @   UINT8  qLogicStatus;        @ Qlogic status
.b pr_rstatus                   @   UINT8  reqStatus;           @ Request status
.b pr_sstatus                   @   UINT8  scsiStatus;          @ SCSI status
.b pr_rsvd2                     @   UINT8  rsvd2;               @ Reserved 1 byte
.b pr_cbytes                    @   UINT8  cBytes;              @ SCSI command byte count
.b pr_flags                     @   UINT8  flags;               @ request control flags
.b pr_retry                     @   UINT8  retry;               @ request retry counter
.b pr_cmd 16                    @   UINT8  cmd[16];             @ SCSI command
.f pr_sense SENSESIZ            @   UINT8  sense[sizeof(SNS)];  @ Req sense stat
# --- End structure ---------------------------------------------------
.f prpsiz 0 # Size of PRPs      @} PRP;

#
# --- Begin O$genreq template definition ------------------------------
# Templates for SCSI commands being passed through a PRP
#
.struct                         @typedef struct PRP_TEMPLATE    @ Templates for SCSI commands
                                @{
.w tpr_timeout                  @   UINT32 timeout;             @ pr_timeout preset
.w tpr_rqbytes                  @   UINT32 rqBytes;             @ pr_rqbytes preset
.b tpr_func                     @   UINT8  func;                @ pr_func preset
.b tpr_cbytes                   @   UINT8  cBytes;              @ pr_cbytes preset
.b tpr_flags                    @   UINT8  flags;               @ pr_flgs preset
.b tpr_retry                    @   UINT8  retry;               @ pr_retry preset
.b tpr_cmd 16                   @   UINT8  cmd[16];             @ pr_cmd preset
# --- End structure ---------------------------------------------------
                                @} PRP_TEMPLATE;
                        @#endif /* _PRP_H_ */
#******************************************************************************
#
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
