# $Id: tpmt.def 89177 2009-06-15 14:14:22Z m4 $
#**********************************************************************
#
#  NAME: tpmt.def (Target Path Management Table definitions)
#
#  DESCRIPTION:
#       This module defines the equates and data structures used
#       to manage target paths associated with linked devices.
#
#  Copyright (c) 1996-2009 XIOtech Corporation.  All rights reserved.
#
#**********************************************************************

                                @#ifndef _TPMT_H_
                                @#define _TPMT_H_
                                @#include "XIO_Types.h"
                                @struct LLD;
                                @struct DTMT;
#
# --- Path state code (tpm_state) definitions -------------------------
#
.def tpm_st_dealloc 0           @#define TPM_STATE_DEALLOC      @ TPMT has been deallocated
.def tpm_st_notop 1             @#define TPM_STATE_NOTOP        @ TPMT is not operational
.def tpm_st_popen 2             @#define TPM_STATE_POPEN        @ TPMT is pending open
.def tpm_st_op 3                @#define TPM_STATE_OP           @ TPMT is operational
.def tpm_st_pclose 4            @#define TPM_STATE_PCLOSE       @ TPMT is pending close
.def tpm_st_abort 5             @#define TPM_STATE_ABORT        @ TPMT has been aborted
#
# --- Path type code (tpm_type) definitions ----------------------------
#
.def tpm_ty_pri 0               @#define TPM_TYPE_PRI           @ Primary path to use
.def tpm_ty_sec 1               @#define TPM_TYPE_SEC           @ Secondary path to use
#
# --- Begin basic structure --------------------------------------------
#
.struct                         @typedef struct TPMT            @ Target Path Management Table
                                @{
.w tpm_link                     @   struct TPMT *pDTMTNextTPMT; @ Link for DTMT lists of TPMTs
.w tpm_ntpmt                    @   struct TPMT *pLDDNextTPMT;  @ Next TPMT on LDD/TPMT list
.w tpm_ldd                      @   struct LDD  *pLDD;          @ Associated LDD
.w tpm_lldid                    @   UINT32 lldid;               @ Linklevel driver session ID
.w tpm_opcnt                    @   UINT32 opCnt;               @ I/O ops to linklevel driver
.w tpm_dtmt                     @   struct DTMT *pDTMT;         @ Associated DTMT
.b tpm_state                    @   UINT8  state;               @ Path state code
.b tpm_type                     @   UINT8  type;                @ Path type code
.b tpmt_rsvd1 2                 @   UINT8  rsvd1[2];            @ Reserved 2 bytes
.w tpm_ecnt                     @   UINT32 errorCount;          @ Error count
.w tpm_bnr                      @   UINT32 banner;              @ TPMT banner
# --- End structure ---------------------------------------------------
.f tpmtsiz 0 # Size of TPMTs    @} TPMT;
                                @#endif /* _TPMT_H_ */
#******************************************************************************
#
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
