# $Id: p6.def 143007 2010-06-22 14:48:58Z m4 $
#**********************************************************************
#
#  NAME: p6.def (Copy Operation P6 Definitions)
#
#  DESCRIPTION:
#       This file defines the data structures and definitions to support
#       the copy operation P6 area and records.
#
#  Copyright (c) 2004-2009 XIOtech Corporation. All rights reserved.
#
#**********************************************************************

                                @#ifndef _P6_H_
                                @#define _P6_H_

# Record type field definitions
                                @#define NP6_CS      0xc0       @ P6 copy state record
# P6 failure reason codes
                                @#define P6RC_NOP6       0      @ no P6 area defined
                                @#define P6RC_P2ADRERR   1      @ P6 adr in p2 invalid
                                @#define P6RC_P6HDRCRC   2      @ P6 hdr crc invalid
                                @#define P6RC_P2CSUM     3      @ p2 csum incorrect in P6 hdr
                                @#define P6RC_TSRERR     4      @ P6 TSR error
                                @#define P6RC_P6DATACRC  5      @ P6 data area crc invalid
                                @#define P6RC_PRNOREC    6      @ P6 has no records

# Copy Operation P6 Area Header Structure
.struct                         @typedef struct P6AR            @ Base structure Part 6
                                @{
.w p6hd_bnr                     @   UINT32  bnr;                @ banner "P6ar"
.s p6hd_len                     @   UINT16  len;                @ length of header
.b p6hd_ver                     @   UINT8   vers;               @ Version
.b p6hd_rev                     @   UINT8   rev;                @ Revision
.s p6hd_stnum                   @   UINT16  stnum;              @ Number of state records
.s p6hd_stlen                   @   UINT16  stlen;              @ Length of state records
.w p6hd_staddr                  @   struct P6ST* staddr;        @ Address of 1st state record (obsolete)
.b p6hd_rsvd1 12                @   UINT8   rsvd1[12];          @ Reserved 12 bytes
.w p6hd_crc                     @   UINT32  crc;                @ NV part 6 header CRC
.f p6hdsize 0                   @} P6AR;                        @ Size of P6 area header structure.

# Copy Operation P6 Configuration (State) Record Structure
.struct                         @typedef struct P6ST            @ Base structure Part 6
                                @{
.w p6st_bnr                     @   UINT32  bnr;                @ Header Banner "P6st"
.w p6st_rid                     @   UINT32  rid;                @ copy registration ID
.w p6st_cmsn                    @   UINT32  cmsn;               @ CM serial number
.w p6st_strcmirror              @   struct P6ST* strcmirror;    @ state record mirror
.b p6st_rsvd1 16                @   UINT8   rsvd1[16];          @ reserved 16 bytes
.w p6st_rm 8                    @   UINT8   rm[32];             @ Main Region bit map
.w p6st_transrm 8               @   UINT8   trans_rm[32];       @ Transfer Ownership Region bit map
.s p6st_cfgrec_nbr              @   UINT16  cfgrec_nbr;         @ Configuration Record number
.b p6st_rsvd2 10                @   UINT8   rsvd2[10];          @ reserved 10 bytes
.w p6st_crc                     @   UINT32  crc;                @ p6st record CRC
.f p6stsize 0                   @} P6ST;                        @ Size of P6 state record structure

# Public variables
                                @extern UINT32 p6NvrecBase;

# Public function prototypes
                                @extern NVR* P6_SaveCpyCfg(NVR *);
                                @extern NVR* P6_RstCpyCfg(NVR *);
                                @extern void P6_Init(void);
                                @extern P6ST* P6_AllocStRec(UINT32, UINT32, UINT32, COR *);
                                @extern void P6_SetMainRM(UINT32, UINT32, UINT32, COR *);
                                @extern void P6_SetTransRM(UINT32, UINT32, UINT32, COR *);
                                @extern void P6_ClrMainRM(UINT32, UINT32, UINT32, COR *);
                                @extern void P6_ClrTransRM(UINT32, UINT32, UINT32, COR *);
                                @extern UINT32 P6_TestMainRM(UINT32, UINT32, UINT32, COR *);
                                @extern UINT32 P6_TestTransRM(UINT32, UINT32, UINT32, COR *);
                                @extern void P6_SetAllMainRM(UINT32, UINT32, UINT32, COR *);
                                @extern void P6_SetAllTransRM(UINT32, UINT32, UINT32, COR *);
                                @extern void P6_ClrAllMainRM(UINT32, UINT32, UINT32, COR *);
                                @extern void P6_ClrAllTransRM(UINT32, UINT32, UINT32, COR *);
                                @extern void P6_CopyTransRM(UINT8 *, UINT32, UINT32, COR *);
                                @extern void P6_SyncMainRM(COR *);
                                @extern void P6_MergeRM(UINT32, UINT32, UINT32, COR *);
                                @extern void P6_Process_VDD_Loss(VDD *);

                                @#ifdef LINUX_VER_NVP6_MM
                                @extern void p6_Set_CopyWorkInProcess_Bit(void);
                                @extern void p6_Clear_CopyWorkInProcess_Bit(void);
                                @#endif /* LINUX_VER_NVP6_MM */

                                @#endif /* _P6_H_ */
#******************************************************************************
#
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
