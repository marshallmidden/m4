# $Id: dev.def 157458 2011-08-03 14:09:50Z m4 $
#**********************************************************************
#
#  NAME: dev.def (DEVice)
#
#  DESCRIPTION:
#       Provides a common structure definition for an attached physical device.
#
#  Copyright (c) 1996-2009 Xiotech Corporation.  All rights reserved.
#
#**********************************************************************

                        @#ifndef _DEV_H_
                        @#define _DEV_H_

                        @#include "XIO_Types.h"
                        @#include "globalOptions.h"
                        @#include "system.h"
                        @#include "ilt.h"
                        @struct PDD;
#
# --- Constants -------------------------------------------------------
#
@#define MINTAGMSK  ~(~0<<MIN_TAG)          @ Minimum tagged cmd mask
@#define MAXTAGMSK ~(~0LL << MAX_TAG)         @ Maximum tagged cmd mask
@#define MAXTAGSATAMSK ~(~0<<MAX_TAG_SATA)  @ Max tagged cmd mask - SATA
#
.set HDATOKSIZ,iltsiz/ILTNEST   @                               @ HDA token size
#
#   dv_flag definitions
#
.def dvoffline 0                @#define DV_OFFLINE             @ 0x01 Device Offline
.def dvqueuefull 1              @#define DV_QUEUEFULL           @ 0x02 Queue Full status from drive
.def dvdegradeperf 2            @#define DV_DEGRADEPERF         @ 0x04 Degrade performance for drive
.def dvqltimeoutemulate 3       @#define DV_QLTIMEOUTEMULATE    @ 0x08 Emulate Qlogic timeout for drive
#
#  path state definitions
#
.def DV_PATH_GOOD  0            @#define DV_PATH_GOOD
.def DV_PATH_15    1            @#define DV_PATH_15
.def DV_PATH_60    2            @#define DV_PATH_60
.def DV_PATH_300   3            @#define DV_PATH_300
.def DV_PATH_600   4            @#define DV_PATH_600
.def DV_PATH_3600  5            @#define DV_PATH_3600
#
# --- Begin structure -------------------------------------------------
#
.struct                         @typedef struct DEV
                                @{
.w dv_iltq_fhead                @   struct ILT *iltQFHead;      @ ILT q fwd head
.w dv_iltq_tail                 @   struct ILT *iltQTail;       @ ILT q tail
.w dv_qcnt                      @   UINT32      qCnt;           @ ILT queue count
.b dv_flags                     @   UINT8       flags;          @ Flags
.b dv_blk                       @   UINT8       blk;            @ Block device (true/false)
.b dv_bwdseek                   @   UINT8       bwdSeek;        @ Backward seek (true/false)
.b dv_taglock                   @   UINT8       tagLock;        @ Tagged cmd lock (t/f)
.w dv_ndev                      @   struct DEV *nDev;           @ Link to next DEV
.w dv_pdev                      @   struct DEV *pdev;           @ Link to previous DEV
.b dv_chn                       @   UINT8       port;           @ Port Number
.b dv_setupretryactive          @   UINT8       setupretryactive; @ Reserved space
.s dv_lun                       @   UINT16      lun;            @ LUN
.w dv_id                        @   UINT32      lid;            @ Device ID (LID)
.w dv_sprc                      @   UINT32      sprc;           @ Sample period request cnt
.w dv_spsc                      @   UINT32      spsc;           @ Sample period sector cnt
.w dv_pdd                       @   struct PDD *pdd;            @ PDD pointer
.s dv_orc                       @   UINT16      orc;            @ Outstanding request count
.b dv_unavail                   @   UINT8       unavail;        @ Port unavailable bits
.b dv_physerr                   @   UINT8       physErr;        @ Physical Device Error
.l dv_tmap_asgn                 @   UINT64      tMapAsgn;       @ Tag cmd map asg
                                @                               @   0 bits ind tags currently
                                @                               @   available for assignment
.l dv_tmap_mask                 @   UINT64      tMapMask;       @ Tag cmd map mask
                                @                               @   1 bits indicate tags that are
                                @                               @   part of the current working set
                                @                               @   each of which may or may not
                                @                               @   currently be in use
.b dv_simplecnt                 @   UINT8       simpleCnt;      @ Remaining simple tag cnt
.b dv_pri                       @   UINT8       pri;            @ Request init priority
.s dv_wait                      @   UINT16      wait;           @ Request wait
.w dv_reset                     @   UINT32      reset;          @ Time of last drive reset
.l dv_wwn                       @   UINT64      nodeName;       @ Device node WWN
.w dv_failq_hd                  @   struct ILT *failQHead;      @ Failed queue head
.w dv_failq_tl                  @   struct ILT *failQTail;      @ Failed queue tail
.f dv_tag_ilt MAXTAG*4          @   struct ILT *tagIlt[MAX_TAG];@ Tagged cmd ILT entries
.f dv_hdatoken HDATOKSIZ        @   struct ILT hdaToken;         @ HDA ILT token
.w dv_TimetoFail                @   UINT32 TimetoFail;          @ Reserved 4 bytes
.f dv_dvPort MAXCHN             @   UINT8  dvPort[MAX_PORTS];   @ Device port (0=a/1=b)
.f dv_pLid MAXCHN*4             @   UINT32 pLid[MAX_PORTS];     @ Device primary LIDs/chip
.f dv_sLid MAXCHN*4             @   UINT32 sLid[MAX_PORTS];     @ Device secondary LIDs/chip
.l dv_portId 2                  @   UINT64 portId[2];           @ Port id for a/b port
.f dv_sgindex MAXCHN*4          @   UINT32 sgindex[MAX_PORTS];  @ sg handle table index
.b dv_lastpri                   @   UINT8  lastPri;             @ Priority of last req
.b dv_mult6                     @   UINT8  mult;                @ multplier used when MANY_ISE is enabled.
.s dv_recoveryflags             @   UINT16 recoveryflags;       @ Flags for set4retry
.w dv_locnt                     @   UINT32 loCnt;               @ Number of low pri's in q
.w dv_medcnt                    @   UINT32 medCnt;              @ Number of med pri's in q
.w dv_hicnt                     @   UINT32 hiCnt;               @ Number of Hi pri's in q
# --- End structure ---------------------------------------------------
.f devsiz 0                     @} DEV;                         @ Size of DEV structure
                        @#endif /* _DEV_H_ */
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
