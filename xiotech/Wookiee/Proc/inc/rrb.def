# $Id: rrb.def 143007 2010-06-22 14:48:58Z m4 $
#**********************************************************************
#
#  NAME: rrb.def (RAID Request Block)
#
#  DESCRIPTION:
#       To provide a common means of defining the RRB structure which
#       is used exclusively by the RAID level 5 algorithms.
#
#  Copyright (c) 1996-2009 XIOtech Corporation.  All rights reserved.
#
#**********************************************************************

                                @#ifndef _RRB_H_
                                @#define _RRB_H_
                                @struct RPN;
                                @struct SGL;
                                @struct RDD;
                                @struct ILT;
#
#   rb_type definitions
#
.def rbread 0                   @#define RB_READ                @ Read request
.def rbwrite 1                  @#define RB_WRITE               @ Write request
.def rbwritev 2                 @#define RB_WRITEV              @ Write/verify request
.def rbrebuild 3                @#define RB_REBUILD             @ Rebuild stripe
.def rbverifyc 4                @#define RB_VERIFYC             @ Verify checkword
.def rbverify 5                 @#define RB_VERIFY              @ Verify data
.def rbparitychk 6              @#define RB_PARITYCHK           @ RAID 5 parity check
.def rbconsistentchk 7          @#define RB_CONSISTENTCHK       @ RAID 10 consistency check
.def rbrebuildchk 8             @#define RB_REBUILDCHK          @ Rebuild Check request
#
#   rb_stat bit definitions
#
.def rbact 0                    @#define RB_ACT                 @ When set indicates an active request
.def rbrecov 1                  @#define RB_RECOV               @ When set indicates that error
                                @                               @   recovery has been invoked
.def rbbparent 2                @#define RB_PARENT              @ When set indicates that this
                                @                               @   RRB has a parent
#
# --- Begin structure -------------------------------------------------
#
                                @                               @ RAID Request Block
.struct                         @typedef struct RRB
                                @{
.w rb_fthd                      @   struct RRB  *fthd;          @ Forward thread
.w rb_bthd                      @   struct RRB  *bthd;          @ Backward thread
.b rb_type                      @   UINT8  type;                @ Request type
.b rb_stat                      @   UINT8  stat;                @ Status (see above)
.b rb_rstat                     @   UINT8  rstat;               @ Req status (ecodes.inc)
.b rb_orc                       @   UINT8  orc;                 @ Outstanding request count
.w rb_rpn                       @   struct RPN  *rpn;           @ RPN pointer
#
.l rb_psda                      @   UINT64 psda;                @ Parity SDA
.l rb_peda                      @   UINT64 peda;                @ Parity EDA
#
.l rb_lsda                      @   UINT64 lsda;                @ Logical SDA
.l rb_leda                      @   UINT64 leda;                @ Logical EDA
#
.w rb_sgl                       @   struct SGL  *sgl;           @ SGL pointer
.w rb_sglsize                   @   UINT32 sglsize;             @ SGL size
.w rb_sn                        @   UINT32 sn;                  @ SN -- really not used.
.w rb_jointhd                   @   struct RRB  *jointhd;       @ RRB join thread
#
.w rb_rdd                       @   struct RDD  *rdd;           @ RDD pointer
.w rb_ilt                       @   struct ILT  *ilt;           @ Primary ILT pointer
.w rb_sgl0                      @   struct SGL  *sglarray[10];  @ DST SGL
.w rb_sgl1                      @/* struct SGL  *sgl1; */       @ SRC1 SGL
#
.w rb_sgl2                      @/* struct SGL  *sgl2; */       @ SRC2 SGL
.w rb_sgl3                      @/* struct SGL  *sgl3; */       @ SRC3 SGL
.w rb_sgl4                      @/* struct SGL  *sgl4; */       @ SRC4 SGL
.w rb_sgl5                      @/* struct SGL  *sgl5; */       @ SRC5 SGL
#
.w rb_sgl6                      @/* struct SGL  *sgl6; */       @ SRC6 SGL
.w rb_sgl7                      @/* struct SGL  *sgl7; */       @ SRC7 SGL
.w rb_sgl8                      @/* struct SGL  *sgl8; */       @ SRC8 SGL
.w rb_sgl9                      @/* struct SGL  *sgl9; */       @ SRC9 SGL (null)
#
.w rb_prrb                      @   struct RRB  *prrb;          @ Parent RRB or outstanding RRB count
# rb_rorc <b> overlaps rb_pwilt <w>.
                                @   union                       @ Start of union
                                @   {
.f rb_rorc 0                    @     UINT8  rorc;              @ Recovery outstanding request count <b>
.w rb_pwilt                     @     struct ILT  *pwilt;       @ Parity write ILT
                                @   } uu;
#
.w rb_wsq                       @   ILT   *wsq;                 @ Write ILT submit queue
.w rb_rsq                       @   ILT   *rsq;                 @ Read ILT submission and completion queue
#
.w rb_fmsgl                     @   struct SGL  *fmsgl;         @ Fore merged SGL
.w rb_amsgl                     @   struct SGL  *amsgl;         @ Aft merged SGL
.w rb_frsgl                     @   struct SGL  *frsgl;         @ Fore read SGL
.w rb_arsgl                     @   struct SGL  *arsgl;         @ Aft read SGL
#
.w rb_xilt                      @   struct ILT  *xilt;          @ Captive XOR ILT
.w rb_pcsgl                     @   struct SGL  *pcsgl;         @ Parity check SGL
.w rb_flags                     @   UINT32 flags;               @ Flags.
.w rb_rsvd1                     @   UINT8  rsvd1[4];            @ Reserved 4 bytes
# --- End structure ---------------------------------------------------
.f rrbsiz 0 # Size of RRBs      @} RRB;
                                @#endif /* _RRB_H_ */
#******************************************************************************
#
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
