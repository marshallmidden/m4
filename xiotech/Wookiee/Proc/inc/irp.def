# $Id: irp.def 149097 2010-10-14 17:20:42Z raghub $
#******************************************************************************
#
#  NAME: irp.def (Initiator Request Packet)
#
#  Copyright (c) 1996 - 2008 XIOtech Corporation.  All rights reserved.
#
#******************************************************************************

                                @#ifndef _IRP_H_
                                @#define _IRP_H_
                                @#include "XIO_Types.h"
                                @#include "sgl.h"
                                @struct TMT;
#
# --- Request Functions Code Definitions
#
.def rfc_open 0                 @#define RFC_OPEN               @ Request Open function
.def rfc_close 1                @#define RFC_CLOSE              @ Request Close function
.def rfc_RSP 2                  @#define RFC_REQ_SESSION_PARMS  @ Request Session Parameters
.def rfc_SCSI_cmd 3             @#define RFC_SCSI_CMD           @ Send SCSI command
.def rfc_TMF 4                  @#define RFC_TASK_MGMT_FUNC     @ Task Management Function
.def rfc_discover 5             @#define RFC_DISCOVER_TARGET    @ rediscover target

.def MAXRFC 5                   @#define RFC_MAX                @ maximum RFC
#
# --- Completion Status Definitions
#
.def cmplt_success 0            @#define CMPLT_SUCCESS          @ Successful
.def cmplt_CSE 0x10             @#define CMPLT_CHK_STATUS_ERROR @ Check Status Error
.def cmplt_non_CSE 0x11         @#define CMPLT_NON_CHK_STATUS_ERROR @ Non-Check Status Error
.def cmplt_PE 0x12              @#define CMPLT_PROCESS_ERROR    @ Process Error
.def cmplt_IOE 0x13             @#define CMPLT_IO_ERROR         @ I/O error
.def cmplt_ME 0x14              @#define CMPLT_MISC_ERROR       @ Miscellaneous Error
.def cmplt_DTU 0x15             @#define CMPLT_DATA_XFER_UNDERRUN @ Task data transfer underrun
.def cmplt_DTO 0x16             @#define CMPLT_DATA_XFER_OVERRUN @ task data transfer overrun
.def cmplt_LOUT 0x17            @#define CMPLT_LOUT             @ Path logout error - iSCSI
#
# --- Session Type Codes Definitions
#
.def stc_WWID 00                @#define STC_WW_ID              @ World Wide ID
.def stc_initID 01              @#define STC_INIT_ID            @ Initiator ID
.def stc_WWIDinitID 02          @#define STC_WW_ID_INIT_ID      @ World wide ID + Initiator ID
.def stc_devID 03               @#define STC_DEV_ID             @ device ID (serial number)
.def stc_tmt 04                 @#define STC_TMT                @ open with tmt address
.def stc_MAX 04                 @#define STC_MAX                @ maximum STC
#
# --- Task Management Function Codes
#
.def tmfc_abttask 1             @#define TMFC_ABORT_TASK        @ Abort Task
.def tmfc_abttask_set 2         @#define TMFC_ABORT_TASK_SET    @ Abort Task Set
.def tmfc_clrACA 3              @#define TMFC_CLEAR_ACA         @ Clear ACA
.def tmfc_clrtask_set 4         @#define TMFC_CLEAR_TASK_SET    @ Clear Task Set
.def tmfc_LU_reset 5            @#define TMFC_LU_RESET          @ Logical Unit Reset
.def tmfc_targ_reset 6          @#define TMFC_TARGET_RESET      @ Target Reset
.def tmfc_term_task 7           @#define TMFC_TERMINATE_TASK    @ Terminate Task

.def MAXTMFC 7                  @#define TMFC_MAX               @ maximum TMFC
#
# --- Process Error Code Definitions
#
.def pe_invRFC 1                @#define PE_INVALID_REQ_FUNC    @ Invalid Request Function code
.def pe_invproID 2              @#define PE_INVALID_PROV_ID     @ Invalid Provider ID
.def pe_invreqID 3              @#define PE_INVALID_REQ_ID      @ Invalid Requestor ID
.def pe_IFnotsup 4              @#define PE_IF_NOT_SUPPORTED    @ Interface Not Supported
.def pe_IFOOS 5                 @#define PE_IF_OUT_OF_SERVICE   @ Interface Out of Service
.def pe_invSTC 6                @#define PE_INVALID_SESSION_TYPE @ invalid Session TYpe Code
.def pe_invPRSTC 7              @#define PE_INVALID_PERS_RECV_TYPE @ Inv Persistent Rec Ses Type Code
.def pe_invERM 8                @#define PE_INVALID_RECV_MODE   @ Invalid Error Recovery Mode
.def pe_invTTC 9                @#define PE_INVALID_TASK_TYPE   @ Invalid Task Type Code
.def pe_invDTA 10               @#define PE_INVALID_DATA_XFER_ATTR @ Invalid Data Transfer Attr
.def pe_noSNSarea 11            @#define PE_NO_SENSE_AREA       @ No Sense Data Area specified
.def pe_noSNSsize 12            @#define PE_NO_SENSE_SIZE       @ Sense Data Area Length Zero
.def pe_noSGL 13                @#define PE_NO_SGL_PTR          @ No SGL Pointer Defined
.def pe_nopath 14               @#define PE_NO_PATH             @ No Paths available
.def pe_notarg 15               @#define PE_NO_TARGET           @ Target Not Found
.def pe_targnotopn 16           @#define PE_TARGET_NOT_OPEN     @ Target Not Open
.def pe_invtaskattr 17          @#define PE_INVALID_TASK_ATTR   @ Invalid Task Attribute
.def pe_invTMFC 18              @#define PE_INVALID_TASK_MGMT_FUNC @ Invalid task managenent func code
.def pe_invtagseq 19            @#define PE_INVALID_TAG_SEQ     @ Invalid tag sequence
.def pe_sesact 20               @#define PE_SESION_ACTIVE       @ Session is active for this device
                                @                               @ and the device is not sharable
.def pe_nolid 21                @#define PE_NO_LID_AVAILABLE    @ No more LIDs are available
.def pe_logonerr 22             @#define PE_LOG_ON_ERROR        @ Could not logon to port
.def pe_devnotrdy 23            @#define PE_DEVICE_NOT_READY    @ Device (LUN) not ready
#
# --- non check status codes
#
.def ncs_busy 0x08              @#define NCS_BUSY               @ Busy
.def ncs_resconf 0x18           @#define NCS_RES_CONFLICT       @ Reservation conflict
.def ncs_Qfull 0x1c             @#define NCS_Q_FULL             @ Queue full
.def ncs_cmdterm 0x22           @#define NCS_CMD_TERMINATED     @ Cmd terminated (obsolete)
.def ncs_acaact 0x30            @#define NCS_ACA_ACTIVE         @ ACA active
#
# --- I/O Error Code Definitions
#
.def ioe_DMAerr 1               @#define IOE_DMA_ERROR          @ DMA Error Occurred
.def ioe_timeout 2              @#define IOE_TIME_OUT           @ Timeout Occurred
.def ioe_cmdabrtd 3             @#define IOE_CMD_ABORTED        @ Command Aborted
.def ioe_lprst 4                @#define IOE_LOOP_RESET         @ Loop Reset Occurred
.def ioe_Punvl 5                @#define IOE_PORT_UNAVAILABLE   @ Port unavailable or logged out
.def ioe_TODisc 6               @#define IOE_DISC_TIMEOUT       @ Timeout due to Discovery occurred
#
# --- Task Type codes
#
.def ttc_untaged 0              @#define TTC_UNTAGED            @ Untaged task
.def ttc_hoq 2                  @#define TTC_HEAD_OF_QUEUE      @ Head of queue task
.def ttc_ordered 4              @#define TTC_ORDERED            @ Ordered task
.def ttc_simple 8               @#define TTC_SIMPLE             @ Simple task
#
# --- Task Flags
#
.def tpf_SLIE 7                 @#define TPF_SUPRESS_LEN_ERROR  @ Suppress Length Indication Error
#
# --- Masks
#
.def TaskAttrMask 0x7ffffcf8    @#define TASK_ATTR_MASK         @ Task Attribute Mask
#=============================================================================
# The following is done this way, because of the necessity of defining
# a union struction before in "c", and it is done in-line for i960 as.
                                @typedef struct SQ1             @ Session Qualifier 1
                                @{
                                @    UINT64  wwn;               @ World Wide ID
                                @    UINT32  initID;            @ Initiator ID
                                @    UINT8   rsvd12[2];         @ Reserved
                                @    UINT16  lun;               @ LUN
                                @} SQ1;
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
                                @typedef struct SQ2             @ Session Qualifier 2
                                @{
                                @    UINT8   sn[12];            @ Device S/N
                                @    UINT8   rsvd12[4];         @ Reserved
                                @} SQ2;
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
                                @typedef struct SQ3             @ Session Qualifier 3
                                @{
                                @    struct TMT *pTMT;          @ TMT address
                                @    UINT8   rsvd4[10];         @ Reserved
                                @    UINT16  lun;               @ LUN
                                @} SQ3;
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
                                @typedef struct SP              @ Session Parameters structure
                                @{
                                @    UINT8   sessionType;       @ Session Type Code
                                @    UINT8   ifID;              @ Interface ID
                                @    UINT8   maxQ;              @ Maximum Queue Depth
                                @    UINT8   sessionQualLen;    @ Session Qualifier length
                                @    UINT8   retryCnt;          @ Operation retry count
                                @    UINT8   rsvd5;             @ Reserved
                                @    UINT8   defaultTimeout;    @ Default Timeout Value
                                @    union                      @ Session qualifier
                                @    {
                                @        SQ1 q1;
                                @        SQ2 q2;
                                @        SQ3 q3;
                                @    } sq;
                                @    UINT32  attr;
                                @} SP;
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
                                @           @ Request Session Parameters Request Parameter Area
                                @typedef struct RS
                                @{
                                @    UINT8   state;             @ Session State
                                @    UINT8   flag;              @ Session Flag
                                @    UINT8   snLen;             @ Serial Number Length
                                @    UINT8   rsvd4;             @ Reserved
                                @    UINT32  initID;            @ Initiator ID
                                @    UINT64  wwn;               @ World Wide Name ID
                                @    UINT8   sn[16];            @ device Serial Number
                                @} RS;
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
                                @typedef struct SC              @ Send SCSI Command Parameters
                                @{
                                @    UINT8    cbd[16];          @ CDB (left justified)
                                @    UINT32   pSense;           @ Pointer to Sense Area
                                @    UINT8    snsSize;          @ Size of Sense Area
                                @    UINT8    snsLen;           @ Length of Sense Data
                                @    UINT16   cmdTimeout;       @ Command Timeout (secs.)
                                @    UINT8    cmdRetry;         @ Command retry value
                                @    UINT8    rsvd23[3];        @ Reserved
                                @    UINT32   expByteCnt;       @ Expected Byte Count
                                @    UINT32   actByteCnt;       @ Actual Byte Count
                                @    SGL     *pSGL;             @ SGL pointer
                                @    UINT32   attr;             @ Task Attributes
                                @    SGL      sglHdr;           @ SGL header
                                @    SGL_DESC sglDesc[3];       @ SGL descriptors
                                @} SC;
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
                                @           @ Task Management Function Request Parameter Area
                                @typedef struct TM
                                @{
                                @    UINT8   funcCode;          @ Task Management Function Code
                                @} TM;
#=============================================================================
#
# --- Begin structure -------------------------------------------------
#
                                @           @ Initiator Request Packet structure
.struct                         @typedef struct IRP
                                @{
.w irp_link                     @    UINT32 link;               @ link
#
# --- Initiator Request Table (Common Area)
#
.b irp_RFC                      @    UINT8  reqCode;            @ Request Function Code
.b irp_cmplt                    @    UINT8  status;             @ Completion Status
.s irp_tagID                    @    UINT16 tagID;              @ Tag ID
.w irp_extcmp                   @    UINT32 extStatus;          @ Extended Status info
.w irp_str                      @    UINT32 sessionTerm;        @ Session termination rtn
.w irp_Req_ID                   @    UINT32 reqSessionID;       @ Requestor Session ID
.w irp_Pro_ID                   @    UINT32 provSessionID;      @ Provider Session ID
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
.m                              @    union                      @ end of common area, start of union
                                @    {
#
# --- Open Session Parameters
#
                                @        SP  irp_sp;            @ Session Parameters
.b irp_STC                      @                               @ Session Type Code
.b irp_IFID                     @                               @ Interface ID
.b irp_maxQ                     @                               @ Maximum Queue Depth
.b irp_Sqlfrlen                 @                               @ Session Qualifier length
.b irp_O_rtycnt                 @                               @ operation retry count
.b irp_rsvd1                    @                               @ 1 spare byte
.s irp_defTO                    @                               @ Default Timeout Value
.f irp_Sqlfr 0                  @                               @ Session Qualifier
                                @                               @ bytes
                                @                               @  00-07  World Wide ID
                                @                               @  08-11  Initiator ID
                                @                               @  12-13  spare
                                @                               @  14-15  LUN
                                @                               @     or
                                @                               @  00-11  device S/N
                                @                               @  12-15  spare
                                @                               @     or
                                @                               @  00-03  TMT address
                                @                               @  14-15  LUN
.f irp_Sqlfr_TMT 0              @                               @ tmt address
.f irp_Sqlfr_SN 0               @                               @ device serial number
# { Internal union
.l irp_Sqlfr_WWID               @                               @ world wide ID
.f irp_Sqlfr_InitID 6           @                               @ initiator ID
.s irp_Sqlfr_LUN                @                               @ LUN
.w irp_Sattr                    @                               @ Session Attributes
.f irp_OPNend 0                 @                               @ end of open area
# }
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
#
# --- Close Session Parameters
#
.r                              @                               @ return to union area
.f irp_CLSend 0                 @                               @ end of close area (no union data)
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
#
# --- Task Management Function Request Parameter Area
#
.r                              @        TM  tm;                @ Task Management Function Code
.f irp_TMFC 0                   @                               @ Task Man Function Code
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
#
# --- Request Session Parameters Request Parameter Area
#
.r                              @        RS  rs;                @ Request Session Parameters
.b irp_Sstate                   @                               @ Session State
.b irp_Sflgs                    @                               @ Session Flag
.b irp_SNlen                    @                               @ Serial Number Length
.b irp_rsvd2 1                  @                               @ unused 1 byte
.w irp_initID                   @                               @ Initiator ID
.l irp_WWID                     @                               @ World Wide Name ID
.q irp_SN                       @                               @ device Serial Number
.f irp_RSPend 0                 @                               @ end of RSP area
#
# --- Send SCSI COmmand Parameters
#
.r                              @        SC  sc;                @ Send SCSI Command Parameters
.q irp_CDB                      @                               @ CDB (left justified)
.w irp_SNSptr                   @                               @ Pointer to Sense Area
.b irp_SNSsize                  @                               @ Size of Sense Area
.b irp_SNSlen                   @                               @ Length of Sense Data
.s irp_cmdTO                    @                               @ Command Timeout (secs.)
                                @                               @    0 = use dflt T/O value
.b irp_rtycnt                   @                               @ command retry value
.b irp_rsvd3 3                  @                               @ 3 spare bytes
.w irp_expcnt                   @                               @ Expected Byte Count
.w irp_actcnt                   @                               @ Actual Byte Count
.w irp_SGLptr                   @                               @ SGL pointer
.f irp_Tattr 0                  @                               @ Task Attributes
                                @                               @ bits
                                @                               @    31 = clear error flag
                                @                               @ 30-16 = unused
                                @                               @ 15-10 = unused
                                @                               @ 09-08 = Data transfer attr.
                                @                               @         00 = no data transfer
                                @                               @         01 = read data
                                @                               @         10 = write data
                                @                               @         11 = (reserved)
                                @                               @    07 = Priority
                                @                               @ 06-04 = unused
                                @                               @ 03-01 = Task Type Code (TTC)
                                @                               @         000 = undefined ???
                                @                               @         001 = Head of Queue
                                @                               @         010 = Ordered
                                @                               @         011 = (invalid)
                                @                               @         100 = Simple
                                @                               @         101 = (invalid)
                                @                               @         110 = (invalid)
                                @                               @         111 = (invalid)
                                @                               @    00 = reserved
.b irp_Tattr_flags              @                               @ 31-24 # flags
                                @                               @ bits:
                                @                               @    31 = Suppress Length Indication
                                @                               @           Error (SLIE)
.b irp_Tattr_spare              @                               @ 23-16 # spare
.b irp_Tattr_DTA                @                               @ 15- 8 # Data Transfer attr
.b irp_Tattr_TTC                @                               @  7- 0 # Task Type Codes
.f irp_SGLhdr 0                 @                               @ start of temp SGL header
                                @                               @ NOTE: This area only contains
                                @                               @       3 descriptor records.
.f irp_CMDend sghdrsiz+(3*sgdescsiz) @                          @ end of Snd SCSI command area
                                @                               @ Longest area is above.
                                @    } u;
# --- End structure ---------------------------------------------------
.f irtsize 0 # Size of IRT      @
.f irp_size 0 # Size of IRPs    @} IRP;
                                @#endif /* _IRP_H_ */
#******************************************************************************
#
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
