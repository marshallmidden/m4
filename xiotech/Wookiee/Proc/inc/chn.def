# $Id: chn.def 161041 2013-05-08 15:16:49Z marshall_midden $
#******************************************************************************
#
#  NAME: chn.inc
#
#  DESCRIPTION:
#       To provide basic hardware-independent definitions for the
#       back-end (physical device side) channel chip(s).
#
#  Copyright (c) 2001-2009 XIOtech Corporation.  All rights reserved.
#
#******************************************************************************

                                @#ifndef _CHN_H_
                                @#define _CHN_H_
                                @#include "XIO_Types.h"
                                @struct PCB;
                                @struct DEV;

.ifdef PORT_NUMBER              @#ifdef PORT_NUMBER             @
.set MAXCHN,PORT_NUMBER         @#define MAXCHN PORT_NUMBER     @ Maximum channel devices supported
.else  /* PORT_NUMBER */        @#else /* PORT_NUMBER */        @
.set MAXCHN,4                   @#define MAXCHN 4               @ Maximum channel devices supported
.endif /* PORT_NUMBER */        @#endif /* PORT_NUMBER */       @
#
#   ch_state definitions
.def chloopup     0             @#define CH_LOOP_UP             @ Loop Up
.def chloopupreq  1             @#define CH_LOOP_UP_REQ         @ Loop Up Request
.def chloopdnreq  2             @#define CH_LOOP_DN_REQ         @ Loop Down Request
.def chpurgereq   3             @#define CH_PURGE_REQ           @ Device Purge Request
.def chlundiscreq 4             @#define CH_LUN_DISC_REQ        @ LUN Discovery Request
.def chrscnreq    5             @#define CH_RSCN_REQ            @ RSCN request

# Channel data structure
.struct                         @typedef struct CHN             @ Channel structure
                                @{
.b ch_channel                   @   UINT8   channel;            @ Channel number (0-3)
.b ch_rsvd1 1                   @   UINT8   rsvd1;              @ Reserved 1 byte
.s ch_oschannel                 @   UINT16  oschannel;          @ Number given to the HBA by linux
.w ch_init_pcb                  @   struct PCB *initPCB;        @ Initiator PCB
.w ch_id                        @   UINT32  id;                 @ Channel Init ID (LID)
.b ch_sync                      @   UINT8   sync;               @ Exec/Init sync true/false
.b ch_rsvd2 1                   @   UINT8   rsvd2;              @ Reserved 1 byte
.s ch_state                     @   UINT16  state;              @ Channel state
.w ch_startdev                  @   struct DEV *startDev;       @ Starting DEV
.w ch_devlst                    @   struct DEV *devList;        @ Pointer to device valid list
.s ch_wait                      @   UINT16  wait;               @ Loop up wait
.b ch_rsvd3 1                   @   UINT8   rsvd3;              @ Reserved 1 byte
.b ch_degraded                  @   UINT8   degraded;           @ Degraded flag
.w ch_devcnt                    @   UINT32  devCnt;             @ Number of devices
# --- end structure
.f chnsiz 0 # Size of CHN       @} CHN;
                        @#endif /* _CHN_H_ */
#******************************************************************************
#
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
