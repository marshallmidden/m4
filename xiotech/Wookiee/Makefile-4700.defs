# Start of Makefile-4700.defs
#-----------------------------------------------------------------------------
# This file specifies the lengths of the different shared memory sections, and
# a starting place in memory.  It determines the starting places for all the
# other memory sections.

# It also specifies the number of FE/BE Qlogic ports (near end of file).
#-----------------------------------------------------------------------------
# Command to add two hex numbers.  A third argument is what to round to.
MAKE_HC_COMMAND := ${shell if [ -x Linux/makeutil/hc ]; then \
	    echo "./Linux/makeutil/hc" ; \
	else if [ -x ../../Linux/makeutil/hc ]; then \
	        echo "../../Linux/makeutil/hc" ; \
	    else \
	        echo "hc" ; \
	    fi ; \
	fi}
#-----------------------------------------------------------------------------
# /boot/grub/menu.lst
# title 3D (hd0) 220,380,100
#    kernel (hd0,1)/boot/vmlinuz-3d root=/dev/md1
#    console=ttyS1,115200n8 console=tty0 hugepages=215 xio3dshm=300m,400m,160m
# ccb 160m, be 300m, fe 400m
MAKE_DEFS_BE_size :=	0x12C00000
MAKE_DEFS_FE_size :=	0x19000000
MAKE_DEFS_CCB_size :=	0x0A000000
#-----------------------------------------------------------------------------
# Size of other memory sections.
# 4mb  Shared/Inc/LKM_layout.h
MAKE_DEFS_NVR_size :=	0x00400000

# 4096 Linux/xio3d/xio3d.h XIO3D_INFO_SIZE
MAKE_DEFS_INFO_size :=	0x00001000

# See note about MAKE_DEFS_MMIO (way) below.
MAKE_DEFS_MMIO_size :=	0x10000000

# GDB macro "map" assumes both are the same size.
# BE only memory, 256 mb. (Really Private, non-shared, non-overlapping.)
MAKE_DEFS_BE_ONLY_size := 0x10000000
# FE only memory, 256 mb. (Really Private, non-shared, non-overlapping.)
MAKE_DEFS_FE_ONLY_size := 0x10000000
# CCB only memory, 64 mb. (Really Private, non-shared, non-overlapping.)
MAKE_DEFS_CCB_ONLY_size := 0x04000000
# CCB data memory, 64 mb. (Really Private, non-shared, non-overlapping, the data section.)
MAKE_DEFS_CCB_DATA_size := 0x04000000

# Offset from base into shared memory for use/loading.
# This constant is also defined in CCB/Inc/xk_init.h.  
# If it changes here, you must change it there as well. 
MAKE_DEFS_offset :=	0x00003000
#=============================================================================
ifneq (${RUNON64},RUNON64)
# Where to start the memory addresses.
# Following is for 32 bit system.
MAKE_DEFS_address_start := 0x48000000
else
# Following is for 64 bit system, compiled as 32 bit binary -- shared libs move.
MAKE_DEFS_address_start := 0x60000000
endif
#=============================================================================
# Nothing below here is intended to be changed for moving memory locations.
# These are just additions from 0x48000000 by the appropriate length.
MAKE_DEFS_FE_start := ${MAKE_DEFS_address_start}
MAKE_DEFS_FE_LOAD := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_FE_start} ${MAKE_DEFS_offset}}
MAKE_DEFS_FE_LIM := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_FE_start} ${MAKE_DEFS_FE_size}}
MAKE_DEFS_CCB_start := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_FE_start} ${MAKE_DEFS_FE_size}}
MAKE_DEFS_CCB_LOAD := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_CCB_start} ${MAKE_DEFS_offset}}
MAKE_DEFS_BE_start := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_CCB_start} ${MAKE_DEFS_CCB_size}}
MAKE_DEFS_BE_LOAD := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_BE_start} ${MAKE_DEFS_offset}}
MAKE_DEFS_BE_LIM := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_BE_start} ${MAKE_DEFS_BE_size}}
MAKE_DEFS_NVR_start := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_BE_start} ${MAKE_DEFS_BE_size}}
MAKE_DEFS_INFO_start := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_NVR_start} ${MAKE_DEFS_NVR_size}}
MAKE_DEFS_MMIO_start := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_INFO_start} ${MAKE_DEFS_INFO_size} ${MAKE_DEFS_MMIO_size}}
MAKE_DEFS_BE_ONLY_MEMORY := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_MMIO_start} ${MAKE_DEFS_MMIO_size}}
MAKE_DEFS_FE_ONLY_MEMORY := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_BE_ONLY_MEMORY} ${MAKE_DEFS_BE_ONLY_size}}
MAKE_DEFS_CCB_ONLY_MEMORY := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_FE_ONLY_MEMORY} ${MAKE_DEFS_FE_ONLY_size}}
MAKE_DEFS_CCB_DATA_MEMORY := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_CCB_ONLY_MEMORY} ${MAKE_DEFS_CCB_ONLY_size}}
MAKE_DEFS_address_next := ${shell ${MAKE_HC_COMMAND} ${MAKE_DEFS_CCB_DATA_MEMORY} ${MAKE_DEFS_CCB_DATA_size}}
MAKE_DEFS_BE_ADDR_OFF := ${shell echo $$((${MAKE_DEFS_BE_LIM}-${MAKE_DEFS_FE_LIM}))}
#=============================================================================
# Create Definitions.  (add -D later -- might want in for CT_ANALYZE)
MAKE_DEFS_FE_LTH := SIZE_FE_LTH=${MAKE_DEFS_FE_size}
MAKE_DEFS_BE_LTH := SIZE_BE_LTH=${MAKE_DEFS_BE_size}
MAKE_DEFS_CCB_LTH := SIZE_CCB_LTH=${MAKE_DEFS_CCB_size}
MAKE_DEFS_NVR_LTH := NVRAM_BASESIZE=${MAKE_DEFS_NVR_size}
#-----------------------------------------------------------------------------
MAKE_DEFS_FE_SHARE_LIM := FE_SHARE_LIM=${MAKE_DEFS_FE_LIM}
MAKE_DEFS_BE_SHARE_LIM := BE_SHARE_LIM=${MAKE_DEFS_BE_LIM}
MAKE_DEFS_BE_ADDR_OFFSET := BE_ADDR_OFFSET=${MAKE_DEFS_BE_ADDR_OFF}
MAKE_DEFS_FE := FRONT_END_PCI_START=${MAKE_DEFS_FE_start}
MAKE_DEFS_CCB := CCB_PCI_START=${MAKE_DEFS_CCB_start}
MAKE_DEFS_BE := BACK_END_PCI_START=${MAKE_DEFS_BE_start}
MAKE_DEFS_NVR := NVRAM_BASE=${MAKE_DEFS_NVR_start}
MAKE_DEFS_INFO := INFOREGION_BASE_ADDR=${MAKE_DEFS_INFO_start}
#-----------------------------------------------------------------------------
MAKE_DEFS_MMIO := PCI_MMIO_BASE=${MAKE_DEFS_MMIO_start}
#  (0-15) << 24  Space can be gotten from here.
#  See LI_AccessDevice() -- Wookiee/Proc/src/li_pci.c
#     daddr := (void *)(PCI_MMIO_BASE | (id << 24) | (space << 20));
MAKE_DEFS_ONLY_be := MAKE_DEFS_BE_ONLY_MEMORY=${MAKE_DEFS_BE_ONLY_MEMORY}
MAKE_DEFS_ONLY_be_size := MAKE_DEFS_BE_ONLY_SIZE=${MAKE_DEFS_BE_ONLY_size}
MAKE_DEFS_ONLY_fe := MAKE_DEFS_FE_ONLY_MEMORY=${MAKE_DEFS_FE_ONLY_MEMORY}
MAKE_DEFS_ONLY_fe_size := MAKE_DEFS_FE_ONLY_SIZE=${MAKE_DEFS_FE_ONLY_size}
MAKE_DEFS_ONLY_ccb_private := MAKE_DEFS_CCB_ONLY_MEMORY=${MAKE_DEFS_CCB_ONLY_MEMORY}
MAKE_DEFS_ONLY_ccb_private_size := MAKE_DEFS_CCB_ONLY_SIZE=${MAKE_DEFS_CCB_ONLY_size}
MAKE_DEFS_ONLY_ccb_private_data := MAKE_DEFS_CCB_DATA_MEMORY=${MAKE_DEFS_CCB_DATA_MEMORY}
MAKE_DEFS_ONLY_ccb_private_data_size := MAKE_DEFS_CCB_DATA_SIZE=${MAKE_DEFS_CCB_DATA_size}
#-----------------------------------------------------------------------------
# The following is for gcc to use to define all the above variables.
MAKE_DEFS_CC := -D${MAKE_DEFS_FE_LTH}
MAKE_DEFS_CC += -D${MAKE_DEFS_BE_LTH}
MAKE_DEFS_CC += -D${MAKE_DEFS_CCB_LTH}
MAKE_DEFS_CC += -D${MAKE_DEFS_FE}
MAKE_DEFS_CC += -D${MAKE_DEFS_CCB}
MAKE_DEFS_CC += -D${MAKE_DEFS_BE}
MAKE_DEFS_CC += -D${MAKE_DEFS_NVR}
MAKE_DEFS_CC += -D${MAKE_DEFS_NVR_LTH}
MAKE_DEFS_CC += -D${MAKE_DEFS_INFO}
MAKE_DEFS_CC += -D${MAKE_DEFS_MMIO}
MAKE_DEFS_CC += -D${MAKE_DEFS_FE_SHARE_LIM}
MAKE_DEFS_CC += -D${MAKE_DEFS_BE_SHARE_LIM}
MAKE_DEFS_CC += -D${MAKE_DEFS_BE_ADDR_OFFSET}
MAKE_DEFS_CC += -D${MAKE_DEFS_ONLY_be}
MAKE_DEFS_CC += -D${MAKE_DEFS_ONLY_be_size}
MAKE_DEFS_CC += -D${MAKE_DEFS_ONLY_fe}
MAKE_DEFS_CC += -D${MAKE_DEFS_ONLY_fe_size}
MAKE_DEFS_CC += -D${MAKE_DEFS_ONLY_ccb_private}
MAKE_DEFS_CC += -D${MAKE_DEFS_ONLY_ccb_private_size}
MAKE_DEFS_CC += -D${MAKE_DEFS_ONLY_ccb_private_data}
MAKE_DEFS_CC += -D${MAKE_DEFS_ONLY_ccb_private_data_size}
#-----------------------------------------------------------------------------
# The number of FE or BE ports (both must be the same, 4 means 4 FE and 4 BE).
MAKE_DEFS_PORT_NUMBER := 4
# MAKE_DEFS_PORT_NUMBER := 8
MAKE_DEFS_PORTS := PORT_NUMBER=${MAKE_DEFS_PORT_NUMBER}
MAKE_DEFS_CC += -D${MAKE_DEFS_PORTS}
MAKE_DEFS_CC += -DENABLE_NG_HWMON
#-----------------------------------------------------------------------------
# Choose model
MODELNUM := 4700
MAKE_DEFS_CC += -DMODEL_${MODELNUM}
#-----------------------------------------------------------------------------
# Define below gnu make variables to disable micromemory card.
# MAKE_DEFS_NO_MM_CARD := NO_MM_CARD=NO_MM_CARD
# MAKE_DEFS_CC += -D${MAKE_DEFS_NO_MM_CARD}
#-----------------------------------------------------------------------------
# The following turns off cpu affinity -- bad if fatal loops happen.
# Fixes (?) a problem with startup "rarely" getting into a fatal loop.
export NOAFFINITY=NOAFFINITY
#-----------------------------------------------------------------------------
# The following turns off real-time scheduling -- bad if fatal loops happen.
# Fixes (?) a problem with startup "rarely" getting into a fatal loop.
export NOPRIORITY=NOPRIORITY
#-----------------------------------------------------------------------------
# End of file Makefile-4700.defs
