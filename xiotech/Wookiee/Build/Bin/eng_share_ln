#!/bin/bash -e
###############################################################################
#                          CONFIDENTIAL AND PROPRIETARY
#           Copyright (C) 2007 Xiotech Corporation, All Rights Reserved
###############################################################################
#
# $Id: eng_share_ln 131774 2010-03-12 23:50:18Z mdr $
#
# \file     eng_share_ln
# \author   Ryan Melville
#
# Create a symbolic link pair in the engineering file share suitable for
# consumption by Linx, Windows and Cygwin clients.
#
# This is achieved by creating the link via Linux and Cygwin.  The former
# creates a link suitable for Linux; the latter creates a link suitable
# for Windows and Cygwin.
#
# The "link via Linux" is created by remoting into a known Linux host.
# The "link via Cygwin" is created by remoting into a known Cygwin host.
# This script can be executed from Linux or Cygwin.
#
###############################################################################

# Common tools

SCRIPT_DIR=$(dirname $0)
SCRIPT_NAME=$(basename $0)

# Default variables

USERNAME=`whoami`

BUILD_CYGWIN_MACHINE="epslengd08.xiocorp.dom"
BUILD_LINUX_MACHINE="epslengd03.xiocorp.dom" 

CYGWIN_ACCESS="${USERNAME}@${BUILD_CYGWIN_MACHINE}"
LINUX_ACCESS="${USERNAME}@${BUILD_LINUX_MACHINE}"

# Process options

while getopts "" opt; do
    case ${opt} in
    esac
done
shift $((${OPTIND} - 1))


##
# Function to display usage instructions

Usage()
{
    echo "Create a symbolic link pair in the engineering file share."
    echo "Usage: $(basename $0) LINK_TARGET LINK_NAME"
    exit 1
}


# Check parameters
#
# $1    Link target.
# $2    Link name.

if (( $# != 2 )); then
    Usage
fi

LINK_TARGET=$1
LINK_NAME=$2

if [[ "${LINK_NAME#/Eng}" == "${LINK_NAME}" ]]; then
    echo "LINK_NAME must be absolute within the engineering files share (i.e., start with /Eng)."
    echo ""
    Usage
fi

# Create Cygwin link

echo "Creating Cygwin link from ${LINK_NAME} to ${LINK_TARGET}..."
ssh "${CYGWIN_ACCESS}" rm -f "${LINK_NAME}" ||
	echo "Removal of Cygwin link ${LINK_NAME} failed"
ssh "${CYGWIN_ACCESS}" ln -fsn "${LINK_TARGET}" "${LINK_NAME}" ||
	echo "Creating Cygwin link ${LINK_NAME} failed"

# Create Linux link

echo "Creating Linux link from ${LINK_NAME} to ${LINK_TARGET}..."
ssh "${LINUX_ACCESS}" rm -f "${LINK_NAME}" ||
	echo "Removal of Linux link ${LINK_NAME} failed"
ssh ${LINUX_ACCESS} ln -f -s -n "${LINK_TARGET}" "${LINK_NAME}" ||
	echo "Creating Linux link ${LINK_NAME} failed"

# Done

echo "Done."

exit

