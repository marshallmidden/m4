# $Id: OS_II.def 147351 2010-09-09 13:43:29Z m4 $
#**********************************************************************
#
#  NAME: OS_II.def (Internal Information)
#
#  DESCRIPTION:
#
#   To provide a common means of providing a consistent definition
#   of "kernel.as" internal information.
#
#  Copyright (c) 1996 - 2009 XIOtech Corporation. All rights reserved.
#
#**********************************************************************

                                @#ifndef _OS_II_H_
                                @#define _OS_II_H_
                                @#include "XIO_Types.h"
                                @#ifdef __cplusplus
                                @#pragma pack(push,1)
                                @#endif
#
#   ii_status (status) Front End Bit Definitions
#   Some values are duplicated with Back End Bit Definitions.
#
.def iiuninit 0                 @#define II_UNINIT              @ 0x0001 - System uninitialized
.def iipinit 1                  @#define II_PINIT               @ 0x0002 - System in process of init.
.def iimpfound 2                @#define II_MPFOUND             @ 0x0004 - Write Cache Mirror Partner Found
# 3 unused in FE                                                  0x0008 - 3 unused in FE
.def iisn 4                     @#define II_SN                  @ 0x0010 - Serial number defined
.def iiserver 5                 @#define II_SERVER              @ 0x0020 - Servers defined
.def iivdd 6                    @#define II_VDD                 @ 0x0040 - Virtual devices defined
.def iilinkCCB 7                @#define II_LINKCCB             @ 0x0080 - Link to CCB complete
.def iilinkproc 8               @#define II_LINKPROC            @ 0x0100 - Link to other processor complete
.def iicinit 9                  @#define II_CINIT               @ 0x0200 - Cache is initialized
.def iivdmt 10                  @#define II_VDMT                @ 0x0400 - VDMTs are built
.def iiccbreq 11                @#define II_CCBREQ              @ 0x0800 - CCB is required
                                @#define II_ISCSI      12       @ 0x1000 - ISCSI system ready to run
# 13 unused in FE                                                 0x2000 - 13 unused in FE
# 14 unused in FE                                                 0x4000 - 14 unused in FE
.def iisesbkrun 15              @#define II_SESBKRUN            @ 0x8000 - SES_BackgroundProcess allowed to run

#
#   Values for Front End Bit Definitions.
#
                                @#define II_STATUS_UNINIT     0x0001
                                @#define II_STATUS_PINIT      0x0002
                                @#define II_STATUS_MPFOUND    0x0004
# 3 unused                                                    0x0008 unused.
                                @#define II_STATUS_SN         0x0010
                                @#define II_STATUS_SERVER     0x0020
                                @#define II_STATUS_VDD        0x0040
                                @#define II_STATUS_LINKCCB    0x0080
                                @#define II_STATUS_LINKPROC   0x0100
                                @#define II_STATUS_CINIT      0x0200
                                @#define II_STATUS_VDMT       0x0400
                                @#define II_STATUS_CCBREQ     0x0800
                                @#define II_STATUS_ISCSI      0x1000
# 13 unused                                                   0x2000 unused.
# 14 unused                                                   0x4000 unused.
                                @#define II_STATUS_SES_BK_RUN 0x8000

#
#   Back End Bit Definitions
#   Some values are duplicated with Front End Bit Definitions.
#
# 0 in FE Bit Definitions                                         0x0001 - System uninitialized
# 1 in FE Bit Definitions                                         0x0002 - System in process of init.
.def iifulldef 2                @#define II_FULLDEF             @ 0x0004 - Full define allowed to run
.def iiphy 3                    @#define II_PHY                 @ 0x0008 - Physical Ready
.def iitpdd 4                   @#define II_TPDD                @ 0x0010 - Temp PDD list available for fsys
.def iinvramrdy 5               @#define II_NVRAMRDY            @ 0x0020 - Online allowed to read config NVRAM
.def iiccbipaddr 6              @#define II_CCBIPADDR           @ 0x0040 - IP address received for CCB
# 7 unused in BE                                                  0x0080 - 7 unused in BE
# 8 unused in BE                                                  0x0100 - 8 unused in BE
.def iimaster 9                 @#define II_MASTER              @ 0x0200 - Master controller in VCG
.def iislave 10                 @#define II_SLAVE               @ 0x0400 - Slave controller in VCG
# 11 in FE Bit Definitions                                        0x0800 - CCB is required
.def iip2init 12                @#define II_P2INIT              @ 0x1000 - P2 Initialization complete
.def iidevconfig 13             @#define II_DEV_CONFIG          @ 0x2000 - Device config received
.def iireplacement 14           @#define II_REPLACEMENT         @ 0x4000 - Replacement controller
# 15 in FE Bit Defintions                                         0x8000 - SES_BackgroundProcess can run

#
#   Values for Back End Bit Definitions.
#
# 0 in FE Bit Definitions                                      0x0001
# 1 in FE Bit Definitions                                      0x0002
                                @#define II_STATUS_FULLDEF     0x0004
                                @#define II_STATUS_PHY         0x0008
                                @#define II_STATUS_TPDD        0x0010
                                @#define II_STATUS_NVRAMRDY    0x0020
                                @#define II_STATUS_CCBIPADDR   0x0040
# 7 unused in BE                                               0x0080
# 8 unused in BE                                               0x0100
                                @#define II_STATUS_MASTER      0x0200
                                @#define II_STATUS_SLAVE       0x0400
# 11 in FE Bit Definitions                                     0x0800
                                @#define II_STATUS_P2INIT      0x1000
                                @#define II_STATUS_DEV_CONFIG  0x2000
                                @#define II_STATUS_REPLACEMENT 0x4000
# 15 in FE Bit Defintions                                      0x8000

#
# --- Internal Information structure -----------------------------------
# NOTE: this is used in CCBCL, etc. Do not change it without considerable thought.
#
.struct                         @typedef struct II              @ Internal Information Structure
                                @{
.b ii_header 26                 @   UINT16  vers;               @ Firmware version
                                @   UINT16  rev;                @ Firmware revision
                                @   UINT8   user[4];            @ Person who built code
                                @   UINT8   bdate[8];           @ Build date mm/dd/yy
                                @   UINT8   btime[8];           @ Build time hh:mm:ss
                                @   UINT16  bldCnt;             @ Incrementing build count
.s ii_status                    @   UINT16  status;             @ Firmware status
.b ii_chgcnt                    @   UINT8   chgCnt;             @ Change counter
.b ii_scrub                     @   UINT8   scrub;              @ Scrubbing enabled (T/F)
.b ii_gpri                      @   UINT8   globalPri;          @ Global priority (0-7)
.b ii_utzn                      @   UINT8   procUtzn;           @ % processor utilization
.w ii_time                      @   UINT32  time;               @ 1/4 sec timer
# UNUSED -- The following four words of struct fms are no longer used.
.w ii_ircur                     @   UINT32  irCur;              @ Available internal RAM
.w ii_irmax                     @   UINT32  irMax;              @ Maximum internal RAM
.w ii_irmin                     @   UINT32  irMin;              @ Minimum internal RAM
.w ii_irwait                    @   UINT32  irWait;             @ Waits internal RAM
# UNUSED -- The following four words of struct fms are no longer used.
.w ii_sdcur                     @   UINT32  sdCur;              @ Available cacheable SDRAM
.w ii_sdmax                     @   UINT32  sdMax;              @ Maximum cacheable SDRAM
.w ii_sdmin                     @   UINT32  sdMin;              @ Minimum cacheable SDRAM
.w ii_sdwait                    @   UINT32  sdWait;             @ Waits cacheable SDRAM
# The following four words are struct fms for K_ncdram -- see kernel.as for setting into K_ncdram.
.w ii_nccur                     @   UINT32  ncCur;              @ Available noncache SDRAM
.w ii_ncmax                     @   UINT32  ncMax;              @ Maximum noncache SDRAM
.w ii_ncmin                     @   UINT32  ncMin;              @ Minimum noncache SDRAM
.w ii_ncwait                    @   UINT32  ncWait;             @ Waits noncache SDRAM
# UNUSED -- Following four words of struct fms are no longer used.
.w ii_rscur                     @   UINT32  rsCur;              @ Available remote SRAM
.w ii_rsmax                     @   UINT32  rsMax;              @ Maximum remote SRAM
.w ii_rsmin                     @   UINT32  rsMin;              @ Minimum remote SRAM
.w ii_rswait                    @   UINT32  rsWait;             @ Waits remote SRAM
# Following are counters of maximum allocations of various types.
.w ii_pcbcur                    @   UINT32  pcbCur;             @ Number of active PCBs
.w ii_pcbmax                    @   UINT32  pcbMax;             @ Max number of PCBs
.w ii_iltcur                    @   UINT32  iltCur;             @ Current number of ILTs
.w ii_iltmax                    @   UINT32  iltMax;             @ Max number of ILTs
.w ii_prpcur                    @   UINT32  prpCur;             @ Current number of PRPs (BE)
.w ii_prpmax                    @   UINT32  prpMax;             @ Maximum number of PRPs (BE)
.w ii_rrpcur                    @   UINT32  rrpCur;             @ Current number of RRPs (BE)
.w ii_rrpmax                    @   UINT32  rrpMax;             @ Maximum number of RRPs (BE)
.w ii_scbcur                    @   UINT32  scbCur;             @ Current number of SCBs (BE)
.w ii_scbmax                    @   UINT32  scbMax;             @ Maximum number of SCBs (BE)
.w ii_rpncur                    @   UINT32  rpnCur;             @ Current number of RPNs (BE)
.w ii_rpnmax                    @   UINT32  rpnMax;             @ Maximum number of RPNs (BE)
.w ii_rrbcur                    @   UINT32  rrbCur;             @ Current number of RRBs (BE)
.w ii_rrbmax                    @   UINT32  rrbMax;             @ Maximum number of RRBs (BE)
.b ii_rsvd1 4                   @   UINT8   rsvd140[4];         @ RESERVED 4 bytes
.w ii_nvacur                    @   UINT32  nvaCur;             @ Current number of NVAs (BE)
.w ii_nvamax                    @   UINT32  nvaMax;             @ Maximum number of NVAs (BE)
.w ii_nvamin                    @   UINT32  nvaMin;             @ Minimum number of NVAs (BE)
.w ii_nvawait                   @   UINT32  nvaWait;            @ Number of wait NVAs    (BE)
.f iisiz 0                      @} II;
                                @#ifdef __cplusplus
                                @#pragma pack(pop)
                                @#endif
                                @#endif /* _OS_II_H_ */
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
