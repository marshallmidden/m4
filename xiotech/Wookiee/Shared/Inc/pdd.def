# $Id: pdd.def 159431 2012-07-12 19:20:16Z marshall_midden $
#****************************************************************************
#
#   @file       pdd.def
#
#   @brief      Physical device descriptors
#
#   To provide a common means of defining the Physical Device Description
#   (PDD) structure.  These are also used for the SES enclosure descriptions
#   and the miscellaneous device descriptions.
#
#   Copyright (c) 1996-2010 Xiotech Corporation.  All rights reserved.
#
#****************************************************************************

#**
#*  @defgroup _PDD_H_ Physical Device Descriptors
#*  @{

        @#ifndef _PDD_H_
        @#define _PDD_H_

        @#include "ISP_Defs.h"
        @#include "XIO_Const.h"
        @#include "XIO_Types.h"
        @#include "globalOptions.h"

        @#ifdef __cplusplus
        @#pragma pack(push,1)
        @#endif

#*****************************************************************************
#* Public defines - constants
#*****************************************************************************
#*  @name Class Field Definitions
#*  @{

.def pdunlab 0      @#define PD_UNLAB       @ Unlabelled device
.def pddatalab 1    @#define PD_DATALAB     @ Labelled data device
.def pdhotlab 2     @#define PD_HOTLAB      @ Labelled hotspare device
.def pdndatalab 3   @#define PD_NDATALAB    @ Labelled unsafe data device
.def pdmld 4        @#define PD_MLD         @ MAGNITUDE linked device
.def pdftd 5        @#define PD_FTD         @ Foreign Target linked device
#*@}

#*  @name Device Type Field Definitions
#*  @{

.def pddtunknown 0x00   @#define PD_DT_UNKNOWN  @ Unknown device type
.def pddtfcdisk 0x01    @#define PD_DT_FC_DISK  @ Fibre disk drive device type
.def pddtsata 0x02      @#define PD_DT_SATA     @ SATA disk drive device type
.def pddtssd 0x03       @#define PD_DT_SSD      @ Solid state disk drive device type
.def pddteconent 0x04   @#define PD_DT_ECON_ENT @ Ecomony enterprise drive type
.def pddtsas 0x05       @#define PD_DT_SAS      @ SAS DISK drive device type
.ifndef MODEL_3000      @#ifndef MODEL_3000
.ifndef MODEL_7400      @#ifndef MODEL_7400
.def pddtisehighperf 0x06  @#define PD_DT_ISE_HIGH_PERF@ High Performance DISK drive device type of ISE
.def pddtiseperf 0x07      @#define PD_DT_ISE_PERF     @ Performance DISK drive device type of ISE
.def pddtisebalance 0x08   @#define PD_DT_ISE_BALANCE  @ Balance DISK drive device type of ISE
.def pddtisecapacity 0x09  @#define PD_DT_ISE_CAPACITY @ Capacity DISK drive device type of ISE
.def pddtmaxdisk 0x09   @#define PD_DT_MAX_DISK @ Anything less or equal is a disk
.endif  # MODEL_7400    @#endif /* MODEL_7400 */
.endif  # MODEL_3000    @#endif /* MODEL_3000 */
.ifndef  MODEL_7000     @#if !defined(MODEL_7000) && !defined(XIO_RELEASE_BUILD)
.ifndef  MODEL_4700     @#ifndef MODEL_4700
.def pddtmaxdisk 0x05   @#define PD_DT_MAX_DISK @ Anything less or equal is a disk
.endif # MODEL_4700     @#endif /* MODEL_4700 */
.endif # MODEL_7000     @#endif /* MODEL_7000 */
.def pddtkludgeecon 7   @#define PD_DT_KLUDGE_ECON  @ Make firmware do detune (bit 7)

.def pddtsesbase 0x0D   @#define PD_DT_SES      @ SCSI Enclosure Service device base
.def pddtbayunknown 0x0D    @#define PD_DT_BAY_UNKNOWN  @ Unknown bay type
.def pddtfcses 0x0E     @#define PD_DT_FC_SES   @ FC bay type
.def pddtsatases 0x0F   @#define PD_DT_SATA_SES @ SATA bay type
.def pddtfcsbod 0x10    @#define PD_DT_SBOD_SES @ SBOD bay type
.def pddtsasexp 0x11    @#define PD_DT_SAS_SES  @ SAS  bay type
.def pddtisebay 0x12    @#define PD_DT_ISE_SES  @ ISE  bay type
.def pddtmaxses 0x12    @#define PD_DT_MAX_SES  @ SCSI Enclosure Service device max
#*@}*/

#*  @name Miscellaneous Status Field Bit Definitions
#*  @{

.def pdmbschedrebuild 0 @#define PD_MB_SCHEDREBUILD @ 0x01 This device is scheduled for rebld
                                    #**< Don't care this bit when rebuilding bit is set
.def pdmbrebuilding 1   @#define PD_MB_REBUILDING   @ 0x02 This device is rebuilding
.def pdmbdefragging 2   @#define PD_MB_DEFRAGGING   @ 0x04 This device is being defragged
.def pdmbserialchange 3 @#define PD_MB_SERIALCHANGE @ 0x08 System serial number does not match
.def pdmbspindown 4     @#define PD_MB_SPINDOWN     @ 0x10 This device is spinning down
.def pdmbfserror 5      @#define PD_MB_FSERROR      @ 0x20 File system suspect within VCG
.def pdmbmissing 6      @#define PD_MB_MISSING      @ 0x40 Drive is missing
.def pdmbreplace 7      @#define PD_MB_REPLACE      @ 0x80 Drive must be replaced, SCSI check

        @#define PD_M_SCHEDREBUILD   (1 << PD_MB_SCHEDREBUILD)      @ 0x01
        @#define PD_M_REBUILDING     (1 << PD_MB_REBUILDING)        @ 0x02
        @#define PD_M_DEFRAGGING     (1 << PD_MB_DEFRAGGING)        @ 0x04
        @#define PD_M_SERIALCHANGE   (1 << PD_MB_SERIALCHANGE)      @ 0x08
        @#define PD_M_SPINDOWN       (1 << PD_MB_SPINDOWN)          @ 0x10
        @#define PD_M_FSERROR        (1 << PD_MB_FSERROR)           @ 0x20
        @#define PD_M_MISSING        (1 << PD_MB_MISSING)           @ 0x40
        @#define PD_M_REPLACE        (1 << PD_MB_REPLACE)           @ 0x80
#*@}*/


#*  @name Power On Self Test Field Definitions
#*  @{

.def pdnonx 0x00        @#define PD_NONX        @ Non-existent device
                        @#define PD_NONX_REBUILDING  0x06   @ Non-existent device rebuilding
.def pdop 0x10          @#define PD_OP          @ Operative device
.def pdfinq 0x20        @#define PD_FINQ        @ Failed Inquiry
.def pdftur 0x21        @#define PD_FTUR        @ Failed Test Unit Ready
.def pdfstart 0x22      @#define PD_FSTART      @ Failed Start Unit
.def pdfsninq 0x23      @#define PD_FSNINQ      @ Failed Serial No. Inquiry
.def pdfrcap 0x24       @#define PD_FRCAP       @ Failed Read Capacity
.def pdfsdiag 0x25      @#define PD_FSDIAG      @ Failed Send Diagnostic
.def pdfver 0x26        @#define PD_FVER        @ Failed Verify
.def pdfdir 0x27        @#define PD_FDIR        @ Failed directory check
.def pdfwbuff 0x28      @#define PD_FWBUFF      @ Failed Write Buffer
.def pdfrbuff 0x29      @#define PD_FRBUFF      @ Failed Read Buffer
.def pdfdpat 0x2A       @#define PD_FDPAT       @ Failed buffer data pattern
.def pdfrdlab 0x2B      @#define PD_FRDLAB      @ Failed read of label
.def pdfdevlab 0x2C     @#define PD_FDEVLAB     @ Failed device label found
.def pdiseluninop 0x2D  @#define PD_ISELUN_INOP @ ISE lun is inop.
.def pdaprespin 0xFD    @#define PD_APRESPIN    @ Pre spinup activity in process
.def pdaspin 0xFE       @#define PD_ASPIN       @ Spinup activity in process
.def pdapstspin 0xFF    @#define PD_APSTSPIN    @ Post spinup activity in process
#*@}*/


#*  @name Device Status Definitions
#*  @{
                                    #**< pdnonx is used for this field also */
                                    #**< pdop is used for this field also   */
.def pdinop 0x01        @#define PD_INOP        @ Inoperative device, device responds
                                    #**< to a select and appears to be not  */
                                    #**< working properly                   */
#*@}*/

#* Bits related to the 'flags' field

.def pduserspundown 0   @#define PD_USER_SPUNDOWN   @ 0x01
.def pduserspundownstate 0x30   @#define PD_USER_SPUNDOWN_STATE @ Post status of the device when user spins down
.def pduserinserted 1   @#define PD_USER_INSERTED   @ 0x02 User inserted a disk in place of a failed one
.def pduserreattached 2 @#define PD_USER_REATTACHED @ 0x04 User reattached a disk in the same slot
.def pdafailbackinprogress 3    @#define PD_AFAILBACK_IN_PROGRESS   @ 0x08 An autofailback task is already in progress
.def pduserfailed 4     @#define PD_USER_FAILED     @ 0x10 Pdisk failed by user
.def pdbusy       5     @#define PD_BUSY            @ 0x20 pdisk/volume is in busy state.
.def pdbebusy     6     @#define PD_BEBUSY          @ 0x40 pdisk/volume is in busy state.

#* Bits related to the 'geoFlags' field

.def pddriveinserted 0  @#define PD_DRIVE_INSERTED  @ Flag when a drive is inserted
.def pdcrosslocationinsertion 1 @#define PD_CROSS_LOCATION_INSERTION
.def pddrivereattached 2    @#define PD_DRIVE_REATTACHED    @ Flag when a drive is reattached
                                   #**<Cross geo location insertion         */
.def pdsetlocationcode 3    @#define PD_SET_LOCATION_CODE

#*  @name Failed LED Field Definitions
#*  @{

.def pdliteoff 0        @#define PD_LED_OFF         @ LED turned off
.def pdliteid 1         @#define PD_LED_ID          @ LED turned to ID drive
.def pdlitefail 2       @#define PD_LED_FAIL        @ LED turned to fail drive
#*@}*/


#*  @name Device Name Definitions
#*  @{

.def pdnpd 0            @#define PD_DNAME_OSES      @ Original SES ('PD' field?)
                        @#define PD_DNAME_OSLOT 1   @ Original Slot
.def pdnbay 2           @#define PD_DNAME_CSES      @ Current SES (Drive bay number?)
.def pdnslot 3          @#define PD_DNAME_CSLOT     @ Current Slot (Slot number)
#*@}*/


#*****************************************************************************
#* Public defines - macros
#*****************************************************************************


#*****************************************************************************
#* Public defines - data structures
#*****************************************************************************

#** Physical Device Descriptor - Rename "struct pd" to "struct pdd"
.struct             @typedef struct PDD
                    @{
.b pd_class         @   UINT8       devClass;       @ Device class
.b pd_devtype       @   UINT8       devType;        @ Device type
.b pd_miscstat      @   UINT8       miscStat;       @ Device miscellaneous status
.b pd_flags         @   UINT8       flags;          @ Some flags -- currently only one bit for spindown
.b pd_channel       @   UINT8       channel;        @ FC channel
.b pd_loopmap       @   UINT8       loopMap;        @ Index into loop map
.s pd_lun           @   UINT16      lun;            @ Device LUN
.w pd_id            @   UINT32      id;             @ Device FC ID
.w pd_dev           @   struct DEV  *pDev;          @ Device pointer
                                    #* QUAD
.s pd_pid           @   UINT16      pid;            @ Device ID
.b pd_ts_cnt        @   UINT8       ts_cnt;         @ TUR Success count - used in PAB context
.b pd_sbod_p_active @   UINT8       sbod_p_active;  @ 4 bits page 80 host ports ok, 4/81
.b pd_poststat      @   UINT8       postStat;       @ Device POST status
.b pd_devstat       @   UINT8       devStat;        @ Device status
.b pd_fled          @   UINT8       failedLED;      @ Device failed LED status
.b pd_pctrem        @   UINT8       pctRem;         @ Percentage rebuild remaining
.l pd_devcap        @   UINT64      devCap;         @ Device capacity
                                    #* QUAD
.w pd_qd            @   UINT32      qd;             @ Current queue depth
.w pd_rps           @   UINT32      rps;            @ Average req/sec (last sec)
.w pd_avgsc         @   UINT32      avgSC;          @ Average sector cnt (last sec)
.w pd_sserial       @   UINT32      ssn;            @ System serial number (binary)
                                    #* QUAD
.l pd_rreq          @   UINT64      rReq;           @ Read request count
.l pd_wreq          @   UINT64      wReq;           @ Write request count
                                    #* QUAD
.b pd_vendid 8      @   UINT8       vendID[8];      @ Vendor ID
.b pd_rev 4         @   UINT8       prodRev[4];     @ Product revision
.w pd_error         @   UINT32      errorCnt;       @ Error count
                                    #* QUAD
.b pd_prodid 16     @   UINT8       prodID[16];     @ Product ID
                                    #* QUAD
.b pd_serial 12     @   UINT8       serial[12];     @ Product serial number
.w pd_daml          @   struct DAML *pDAML;         @ DAML for this disk
                                    #* QUAD
.l pd_tas           @   UINT64      tas;            @ Total available space
.l pd_las           @   UINT64      las;            @ Largest available space
                                    #* QUAD
.l pd_wwn           @   UINT64      wwn;            @ Device world wide name
.w pd_r10misc       @   UINT32      r10misc;        @ RAID 10 consistency check fails
.b pd_dname 4       @   UINT8       devName[4];     @ GUI positioning information
                                    #* QUAD
                    @   ISP_RLS     rls;            @ Read Link Status
.w pd_lfcnt         @                               @ Link fail count
.w pd_lscnt         @                               @ Loss of sync count
.w pd_lgcnt         @                               @ Loss of signal count
.w pd_pscnt         @                               @ Primitive seq err count
                                    #* QUAD
.w pd_itcnt         @                               @ Invalid xmit word count
.w pd_iccnt         @                               @ CRC error count

.w pd_miscomp       @   UINT32      strMiscompCnt;  @ Parity stripe miscompare count
.w pd_devmiscomp    @   UINT32      devMiscompCnt;  @ Miscompare count on this device
                                    #* QUAD (2)
.l pd_rbtotal       @   UINT64      rbTotal;        @ Total rebuild sectors
.l pd_rbremain      @   UINT64      rbRemain;       @ Remaining rebuild sectors
                                    #* QUAD
# NOTED: pd_ses is used in definebe.as and rebld.as as a byte. Since we limit how many to less than a byte-OK.
.s pd_ses           @   UINT16      ses;            @ Other SES for SES, SES's for drives
.b pd_slot          @   UINT8       slot;           @ Slot in enclosure
.b pd_rsvd199       @   UINT8       rsvd199;        @ RESERVED
.b pd_hsdname 4     @   UINT8       hsDevName[4];   @ GUI position info if used hot spare
.b pd_glid          @   UINT8       geoLocationId;  @ Geo location ID
.b pd_geoflags      @   UINT8       geoFlags;       @ Flags, if any, for GEORAID
                                    #**< Presently, only one bit is used
.b pd_hangcnt       @   UINT8       hangCount;      @ Count of consecutive op failures
.b pd_rsvd203       @   UINT8       rsvd203;        @ RESERVED
.w pd_lastlip       @   UINT32      lastLip;        @ Time of the last Sel LIP
.f pddsiz 0  @} PDD;                     @ Size of PDD


#** PDD index table
    @typedef struct PDX
    @{
    @    UINT16      count;          @ Number of drives
    @    UINT8       rsvd2[2];       @ RESERVED
    @    PDD         *pdd[MAX_PHYSICAL_DISKS];  @ Array of drives
    @} PDX;

#** EDX index table
    @typedef struct EDX
    @{
    @    UINT16     count;          @ Number of enclosures
    @    UINT8      rsvd2[2];       @ RESERVED
    @    PDD        *pdd[MAX_DISK_BAYS]; @ Array of enclosures
    @} EDX;

#** MDX index table
    @typedef struct MDX
    @{
    @    UINT16     count;          @ Number of misc
    @    UINT8      rsvd2[2];       @ RESERVED
    @    PDD        *pdd[MAX_MISC_DEVICES]; @ Array of misc
    @} MDX;


#*****************************************************************************
#* Public variables
#*****************************************************************************


#*****************************************************************************
#* Public function prototypes
#*****************************************************************************


    @#ifdef __cplusplus
    @#pragma pack(pop)
    @#endif

    @#endif /* _PDD_H_ */
#*@}

#***
#* Modelines:
#* Local Variables:
#* tab-width: 4
#* indent-tabs-mode: nil
#* End:
#* vi:sw=4 ts=4 expandtab
