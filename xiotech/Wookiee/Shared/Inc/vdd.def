# $Id: vdd.def 161427 2013-08-23 16:32:05Z marshall_midden $
#**********************************************************************
#
#  NAME: vdd.def (Virtual Device Description)
#
#  DESCRIPTION:
#
#       To provide a common means of supplying the Virtual Device
#       Description (VDD) structure definition.
#
#  Copyright (c) 1996-2008 XIOtech Corporation.  All rights reserved.
#
#**********************************************************************
#
# ATTENTION:
#   If fields of these data structures are changed, it is probably necessary
#   to update the Direct Memory Copy (DMC) vdisk information via:
#       BIT_SET(DMC_bits, CCB_DMC_vdiskcache);  /* Flag vdisk data has changed. */
#

                                @#ifndef _VDD_H_
                                @#define _VDD_H_
                                @#include "XIO_Types.h"
                                @#include "XIO_Const.h"
                                @struct SCD;
                                @struct DCD;
                                @struct VLAR;
                                @struct RDD;
                                @struct SSMS;
#
# --- General definitions
#
.def vio_max 6                  @#define VIO_MAX                @ Maximum matching ILT/VRPs til
                                @                               @   copy operation suspends
#
#   vd_attribute definitions
#       Bit
#            15 = Lock                                      0x8000
#            14 = Instant mirror bit                        0x4000
#            13 = Snappool                                  0x2000
#            12 = Backend Busy                              0x1000
#            11 = In use by X1                              0x0800
#            10 = In use by X1                              0x0400
#             9 = In use by X1                              0x0200
#             8 = Cache enabled (1=TRUE)                    0x0100
#             7 = VLink flag (1=TRUE)                       0x0080
#             6 = VDisk has VLink lock applied (1=TRUE)     0x0040
#             5 = VDisk is source copy device               0x0020
#             4 = VDisk is destination copy device          0x0010
#             3 = Suspended flag                            0x0008
#             2 = Asynch (alink or apool)                   0x0004
#           1-0 = VDisk attribute code (normal=0,hidden=1,private=2)
#
.def vdblock 15                 @#define VD_BLOCK               @ 0x8000 - Locked bit
.def vdbinstmirror 14           @#define VD_BINSTMIRROR         @ 0x4000 - Instant mirror bit
.def vdbspool 13                @#define VD_BSNAPPOOL           @ 0x2000 - Snappool bit
.def vdbbebusy 12               @#define VD_BBEBUSY             @ 0x1000 - ISE busy (proactive busy)
.def vdbcacheen 8               @#define VD_BCACHEEN            @ 0x0100 - Cache enabled bit
.def vdbvlink 7                 @#define VD_BVLINK              @ 0x0080 - VLink flag bit
.def vdbvdlock 6                @#define VD_BVDLOCK             @ 0x0040 - VDisk/VLink lock flag bit
.def vdbscd 5                   @#define VD_BSCD                @ 0x0020 - VDisk is source of copy
.def vdbdcd 4                   @#define VD_BDCD                @ 0x0010 - VDisk is destination of copy
.def vdbvdsusp 3                @#define VD_SUSP                @ 0x0008 - Copy is suspended
.def vdbasync 2                 @#define VD_BASYNCH             @ 0x0004 - VDisk/VLink is APool/ALink
#
.def vdlock 0x8000              @#define VD_LOCK                @ Locked
.def vdslink 0x2000             @#define VD_SLINK               @ Snapshot Link flag
.def vdbebusy 0x1000            @#define VD_BEBUSY              @ ISE busy (proactive busy)
#
.def vd_used_by_x1_3 0x0800     @#define VD_USED_BY_X1_3        @These bits are in use by the
.def vd_used_by_x1_2 0x0400     @#define VD_USED_BY_X1_2        @ X1_VDISK_INFO_RSP struct. See
.def vd_used_by_x1_1 0x0200     @#define VD_USED_BY_X1_1        @ an ICON guy for assistance.

.def vdcacheen 0x0100           @#define VD_CACHEEN             @ Cache is enabled
.def vdvlink 0x0080             @#define VD_VLINK               @ VLink flag
.def vdvdlock 0x0040            @#define VD_VDLOCK              @ VDisk/VLink lock flag
#
.def vdvdscd 0x0020             @#define VD_SCD                 @ Vdisk is source copy
.def vdvddcd 0x0010             @#define VD_DCD                 @ VDisk is destination copy
.def vdvdsusp 0x0008            @#define VD_SUSPEND             @ Suspended flag
.def vdasynch 0x0004            @#define VD_ASYNCH              @ VDisk/VLink asynch bit
#
#   Device Type Definitions
#
.def vdnormal 0                 @#define VD_NORMAL              @ Normal device
.def vdhidden 1                 @#define VD_HIDDEN              @ Hidden device
.def vdprivate 2                @#define VD_PRIVATE             @ Private device

.def vdvdmask 0x0003            @#define VD_VDMASK              @ Vdisk attribute field mask
                                @                               @   VD_HIDDEN | VD_PRIVATE
#
#   vdChgMsk assumes that the CCB will not modifiy the following attribute bits.
#                       0x0008  suspend
#                       0x0010  device is destination of copy
#                       0x0020  device is source of copy
#                       0x0040  vlink lock flag
#                       0x0080  vlink flag
.def vdvdChgMsk 0xff07          @#define VD_VDCHGMSK            @ VDisk attributes change mask
#
#   vd_status - Device Status Definitions
#
.def vdnonx 0x00                @#define VD_NONX                @ Non-existent device
.def vdinop 0x01                @#define VD_INOP                @ Inoperable
.def vduninit 0x02              @#define VD_UNINIT              @ Uninitialized
.def vdsched 0x03               @#define VD_SCHED               @ Scheduled for initializing
.def vdinit 0x04                @#define VD_INIT                @ Initializing
.def ssiosuspend 0x05           @#define SS_IOSUSPEND           @ I/O Suspend State (Snapshot)
.def vdisebusy 0x08             @#define VD_ISE_BUSY            @ ISE busy (proactive busy)
.def vdop 0x10                  @#define VD_OP                  @ Operational
.def vddegraded 0x11            @#define VD_DEGRADED            @ Degraded
#
#   vd_mirror - Device Mirror Definitions
#
.def vdnomirror 0               @#define VD_NOMIRROR            @ No mirror active
.def vdcopyto 1                 @#define VD_COPYTO              @ Secondary copy destination
.def vdcopymirror 2             @#define VD_COPYMIRROR          @ Secondary copy mirror
.def vdcopyuserpause 3          @#define VD_COPYUSERPAUSE       @ Copy user paused
.def vdcopyautopause 4          @#define VD_COPYAUTOPAUSE       @ Copy auto paused
#
# --- Vdisk priority definitions
#
.def visetlow 0                 @#define VI_SETLOW              @ Set low priority
.def visetmed 1                 @#define VI_SETMED              @ Set med priority
.def visethigh 2                @#define VI_SETHIGH             @ Set high priority
#
# --- Vdisk strategy definitions
#
.def vdlow 0                    @#define VD_LOW                 @ Low priority
.def vdmed 1                    @#define VD_MED                 @ Medium priority
.def vdhigh 2                   @#define VD_HIGH                @ High priority
#
#   Owner Definitions
#
                                @#define VD_NOEXPOWNER  0xFF    @ No explicit owner.
                                @                               @ (master assumed)
#
# The following is done this way, because of the necessity of defining
# a struction before in "c" before use,
#
                                @typedef struct GR_GeoRaidVdiskInfo
                                @{
                                @   UINT8 vdOpState:3;
                                @   UINT8 permFlags:4;
                                @   UINT8 allDevMissSyncFlag:1;
                                @   UINT8 tempFlags;
                                @   UINT8 aswapProcessIdx;
                                @} GR_GeoRaidVdiskInfo;
#
#   VDisk statistics
#
                                @typedef struct STATS_PER_HOUR
                                @{
                                @   UINT32 cummIOCount[60];     @ Contains cumulative IO count
                                @                               @   for each minute
                                @   UINT32 cummSC[60];          @ Contains cumulative MB per
                                @                               @   second for each minute
                                @   UINT32 LastOneHrAvgIoPerSecond; @ Avg IO per second for
                                @                               @       the last one hour
                                @   UINT32 LastOneHrAvgSCPerSecond; @ Avg sector count per
                                @                               @       second for last hour
                                @   UINT32 PrevIOCount;         @ Previous one minute IO count
                                @                               @   (taken 1 hr back)
                                @   UINT32 PrevSectorCount;     @ Previous one minute sector
                                @                               @   count (taken 1 hr back)
                                @   UINT8  currentIndex;        @ Index to one minute interval
                                @   UINT8  oneSecondIndicator;  @ Indicator enable to compute
                                @                               @   stats for a single minute
                                @   UINT8  statsFlag;           @ Flag (currently indicates
                                @                               @   if an hour is over)
                                @   UINT8  rsvd;                @ Unused 1 byte
                                @} STATS_PER_HOUR;
#
# --- Begin basic VDD structure ----------------------------------------------
#
                                @                               @ Virtual Device Descriptor
.struct                         @typedef struct VDD
                                @{
.s vd_vid                       @   UINT16 vid;                 @ Virtual device ID
.b vd_mirror                    @   UINT8  mirror;              @ Mirror status
.b vd_status                    @   UINT8  status;              @ VDisk Status
#
.s vd_scorvid                   @   UINT16 scorVID;             @ Secondary copy orig. VID
.b vd_scpcomp                   @   UINT8  scpComp;             @ Secondary copy percent complete
.b vd_raidcnt                   @   UINT8  raidCnt;             @ Number of RAIDs in this VDisk
#
.l vd_devcap                    @   UINT64 devCap;              @ Device capacity
#
.w vd_error                     @   UINT32 error;               @ Errors since last power up
.w vd_qd                        @   UINT32 qd;                  @ Current queue depth
.w vd_rps                       @   UINT32 rps;                 @ Avg req/sec (last second)
.w vd_avgsc                     @   UINT32 avgSC;               @ Avg sector cnt (last second)
#
.l vd_rreq                      @   UINT64 rReq;                @ Read request count
.l vd_wreq                      @   UINT64 wReq;                @ Write request count
#
.s vd_attr                      @   UINT16 attr;                @ VDisk attribute
.b vd_draidcnt                  @   UINT8  draidCnt;            @ Deferred RAID count
.b vd_owner                     @   UINT8  owner;               @ ID of owning DCN in DSC
#
.b vd_strategy                  @   UINT8  priority;            @ Priority of this VDisk
#
.b vd_rsvd1 3                   @   GR_GeoRaidVdiskInfo grInfo; @ GeoRAID services related info
#
.w vd_sprc                      @   UINT32 sprCnt;              @ Sample period request count
.w vd_spsc                      @   UINT32 spsCnt;              @ Sample period sector count
#
.w vd_scdhead                   @   struct SCD  *pSCDHead;      @ SCD list head element
.w vd_scdtail                   @   struct SCD  *pSCDTail;      @ SCD list tail element
.w vd_dcd                       @   struct DCD  *pDCD;          @ DCD element
.w vd_vlinks                    @   struct VLAR *pVLinks;       @ VLink assoc. records
#
.q vd_name                      @   UINT8  name[16];            @ Vdisk name
#
.w vd_createTime                @   UINT32 createTime;          @ VDisk Time Stamp
.w vd_lastaccess                @   INT32  lastAccess;          @ Time of last access

.w vd_lasthravgstats            @   STATS_PER_HOUR *pLastHourAvgStats; @ Pointer to last hour
                                @                               @          average stats info
#
.w vd_drdd                      @   struct RDD  *pDRDD;         @ Pointer to deferred RAIDs
.w vd_rdd                       @   struct RDD  *pRDD;          @ Pointer to list of RAIDs
.w vd_outhead                   @   struct ILT *pOutHead;       @ Output list head pointer
.w vd_outtail                   @   struct ILT *pOutTail;       @ Output list tail pointer
#
.w vd_incssms                   @   struct SSMS *vd_incssms;    @ SSMS (Vdisk is a snapshot)
.w vd_outssms                   @   struct SSMS *vd_outssms;    @ First SSMS (Vdisk is a
                                @                               @   source for a snspshot)
.w vd_outssmstail               @   struct SSMS *vd_outssmstail; @ Tail SSMS pointer

.w vd_breakTime                 @   UINT32 breakTime;           @ Mirror Break time

# NOTE: to save anyone else the trouble, the following is NOT used anywhere in PROC or CCB!!!
.f vd_rsvd2 0                   @   ZeroArray(UINT16, raidList); @ raidList not used anywhere.
# --- End structure ---------------------------------------------------
.f vddsiz 0 # Size of VDDs      @} VDD;

#******************************************************************************
#
#   VDD index table
#
                                @typedef struct VDX
                                @{
                                @   UINT16 count;               @ Number of virtual devices
                                @   UINT8  rsvd2[2];            @ Reserved 2 bytes
                                @   VDD   *vdd[MAX_VIRTUAL_DISKS]; @ Array of virtual devices
                                @} VDX;
#
                                @#endif /* _VDD_H_ */
#******************************************************************************
#
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
