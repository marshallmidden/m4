# $Id: vrp.def 143766 2010-07-06 12:06:32Z m4 $
#**********************************************************************
#
#  NAME: vrp.def (Virtual Request Packet)
#
#  DESCRIPTION:
#
#       To provide a common means of defining the Virtual Request
#       Packet (VRP) definitions.
#
#  Copyright (c) 1996-2010 XIOtech Corporation.  All rights reserved.
#
#**********************************************************************

                                @#ifndef _VRP_H_
                                @#define _VRP_H_
                                @#include "XIO_Types.h"
                                @struct SGL;
#
#   vr_func definitions (part 1)
# --- Normal VRP function code definitions (0x00-0x3f) -----------------------
#
.def vrresv 0                   @#define VRP_RESERVE            @ Reserve
.def vrinput 1                  @#define VRP_INPUT              @ Virtual read
.def vroutput 2                 @#define VRP_OUTPUT             @ Virtual write
.def vrrelresv 4                @#define VRP_RELEASE_RESERVE    @ Release reserve
.def vrinquiry 5                @#define VRP_INQUIRY            @ Virtual inquiry
.def vroutputv 6                @#define VRP_OUTPUT_VERIFY      @ Virtual write and verify
.def vrprrelresv 8              @#define VRP_PRI_REL_RESERVE    @ Priority release reserve
.def vrrebuildchk 12            @#define VRP_REBUILD_CHECK      @ Rebuild Check
.def vrverifyc 20               @#define VRP_VERIFY_CHK_WORD    @ Verify checkword
.def vrverify 22                @#define VRP_VERIFY             @ Verify data
.def vrtstresv 24               @#define VRP_TEST_RESERVE       @ Test reserve
.def vrsync 26                  @#define VRP_SYNC_CACHE         @ Synchronize cache
# NOTE: ABOVE MATCHES BELOW!
.def vrmaxfunc 26               @#define VRP_MAX_FUNC           @ Maximum function code
#
#   Note: The following VRP function codes perform similar services as the
#   preceding function codes but have bit 5 set to have special processing by
#   the Virtual level.
#
.def vrspecial 5                @#define VRP_SPECIAL            @ Special VRP function code bit
#
# The input and output values with bit 5 set as per above note.
#
.def vrcinput 33                @#define VRP_COPYINPUT          @ Copy related read
.def vrcoutput 34               @#define VRP_COPYOUTPUT         @ Copy and write update related
#
# Other special vr_func processing bits.
#
.def apool_bypass 7             @#define APOOL_BYPASS           @ Indicates apool logic should
                                @                               @   be bypassed
.def vrssproc 8                 @#define VRP_SNAPSHOT_SPECIAL   @ Snapshot special processing
#
#   vr_func definitions (part 2)
# --- MAGNITUDE to MAGNITUDE VRP function code definitions (0x40-0x7f) -------
#
.def vrmagst 0x40               @#define VRP_MAG_START          @ Starting code value
.def vrlldop 0x40               @#define VRP_LINK_DRV_OK        @ Link-level driver operational
.def vrmlest 0x41               @#define VRP_MAG_LINK_EST       @ MAGNITUDE link established
.def vrmlterm 0x42              @#define VRP_MAG_LINK_TERM      @ MAGNITUDE link terminated
.def vrftid 0x43                @#define VRP_FOREIGN_TARGET_ID  @ Foreign target identified
.def vrftterm 0x44              @#define VRP_FOREIGN_TARGET_TERM @ Foreign target terminated
.def vrmsgrcv 0x45              @#define VRP_MSG_FROM_MAG       @ Message received from MAG
.def vrsterm 0x46               @#define VRP_SESSION_TERM       @ Session terminated
# NOTE: ABOVE MATCHES BELOW!
.def vrmagend 0x46              @#define VRP_MAG_END            @ Ending code value

#
# --- VRP to transmit an SRP from the BE to the FE processor
#
.def vrbefesrp 0x0600           @#define VRP_BE_FE_SRP          @ Send SRP from BE to FE

#
# The following are used by Link Layer for extra information passed beyond the size of a VRP.
#
.def VRPALLOC 32*4              @#define VRPALLOC               @ VRP allocation size
                                @#define VRPAVAILABLE (VRPALLOC - sizeof(VRP)) @ VRP available
#
#   vr_strategy definitions
#
.def vrlow 0                    @#define VRP_LOW                @ Low non-optimized priority
.def vrnorm 1                   @#define VRP_NORM               @ Normal optimization priority
.def vrhigh 2                   @#define VRP_HIGH               @ High optimization priority
#
#   vr_options bit definitions
#
.def vrvlinkop 0                @#define VRP_VLINK_OPT          @ 0x01 Bit 0 = VLink SCSI Op
                                @                               @          0 = Non-VLink Op
                                @                               @          1 = VLink Op
.def vrcorc 1                   @#define VRP_C_ORC              @ 0x02 Bit 1 = C_orc type op
                                @                               @          0 = non-C_orc op
                                @                               @          1 = C_orc op
.def vrforc 2                   @#define VRP_C_FLUSH_ORC        @ 0x04 Bit 2 = C_flush_orc type op
                                @                               @          0 = non-C_flush_orc op
                                @                               @          1 = C_flush_orc op
                                @                               @ Bits 3-7 Reserved
.if 1 #CSTOP_SAN1171,1416,1670
.ifdef FRONTEND
.def vrinbackend        3       @#define VRP_IN_BACKEND         @ 0x08 Bit 3 = vrp resident flag
                                @                               @          0 = vrp in FE
                                @                               @          1 = vrp still in backend
# Bit 4 is not unused.                                            0x10 Bit 4 = For miscellaneous purpose
.else #FRONTEND
#
#       vr_ geo raid related options - bit definitions
#
.def vrserveroriginator 3       @#define VRP_SERVER_ORIGINATOR  @ VRP originator is from server
.def vrerrorondest 4            @#define VRP_ERROR_ON_DEST      @ GEORAID15
.endif #FRONTEND

.else  #CSTOP_SAN1171,1416,1670
.def vrserveroriginator 3       @#define VRP_SERVER_ORIGINATOR  @ VRP originator is from server
.def vrerrorondest 4            @#define VRP_ERROR_ON_DEST      @ GEORAID15
.endif #CSTOP_SAN1171,1416,1670

.def vrfeiclmaglink 5           @#define VRP_FEICL_MAGLINK      @ 0x20 LLD - MAG link FE for ICL
.def vrnotcompleted 6           @#define VRP_NOTCOMPLETED       @ 0x40 VRP not completed
.if 1
.def vrretryonce 7              @#define VRP_RETRY_ONCE         @ 0x80 VRP retry once flag
.else
.def vrisebusy 7                @#define VRP_ISE_BUSY           @ 0x80 VRP ISE BUSY indication
.endif

#
# General definitions
#
.def SUPER_MAGIC_FLAG 0xd00daaa @#define SUPER_MAGIC_FLAG       @ Flag for copy data in apool


#
# --- "Normal" VRP structure -------------------------------------------
#
.struct                         @typedef struct VRP             @ Virtual Request Packet
                                @{
# Note: many references to vr_func/vr_strategy/vr_status as a 32 bit entry (including calls).
.s vr_func                      @   UINT16      function;       @ Function
.b vr_strategy                  @   UINT8       strategy;       @ Strategy
.b vr_status                    @   UINT8       status;         @ Status
.s vr_vid                       @   UINT16      vid;            @ Virtual ID
.b vr_path                      @   UINT8       path;           @ Path of Request
.b vr_options                   @   UINT8       options;        @ Request Options
.w vr_vlen                      @   UINT32      length;         @ Length in sectors
.w vr_pptr                      @   struct VRP *pktAddr;        @ Packet physical address
.l vr_vsda                      @   UINT64      startDiskAddr;  @ Starting disk address
.w vr_sglptr                    @   struct SGL *pSGL;           @ SGL pointer
.w vr_sglsize                   @   UINT32      sglSize;        @ SGL size
.w vr_use0                      @   UINT32      gen0;           @ VRP General Use #0
.w vr_use1                      @   UINT32      gen1;           @ VRP General Use #1
.w vr_use2                      @   UINT32      gen2;           @ VRP General Use #2
.w vr_use3                      @   UINT32      gen3;           @ VRP General Use #3
# --- End "normal" structure -------------------------------------------
.f vr_sglhdr 0                  @                               @ SGL Header
.f vrpsiz 0 # Size of VRPs      @} VRP;

#
#   Aliases for various fields above..
#
.set vr_blen,vr_vlen            @                       @ Length in bytes       <alias>
.set vr_tid,vr_vsda             @                       @ Target ID <s>         <alias>
.set vr_ilt,vr_use0             @                       @ ILT of VRP for SRP use (alias)
.set vr_otv,vr_use3             @#define vr_otv gen3    @ Op Throttle Value

#=============================================================================
# Non-"Normal" VRP structure definitions follow (as aliases).
#
# --- MAGNITUDE Link Established VRP structure -------------------------
.set vr_mle_dlmid,vr_use1       @               @ Assigned data-link session ID
.set vr_mle_lldid,vr_use2       @               @ Link-level driver session ID
.set vr_mle_magdt,vr_use3       @               @ SGL of MAG descriptor table
# --- End MAGNITUDE Link Established structure -------------------------
#
# --- MAGNITUDE Link Terminated VRP structure --------------------------
.set vr_mlt_dlmid,vr_use1       @               @ Data-link manager session ID
.set vr_mlt_lldid,vr_use2       @               @ Link-level driver session ID
# --- End MAGNITUDE Link Terminated structure --------------------------
#
# --- Foreign Target Identified VRP structure --------------------------
.set vr_fti_dlmid,vr_use1       @               @ Data-link manager session ID
.set vr_fti_lldid,vr_use2       @               @ Link-level driver session ID
.set vr_fti_ftdt,vr_use3        @               @ SGL of FTDT
# --- End Foreign Target Identified structure --------------------------
#
# --- Foreign Target Terminated VRP structure --------------------------
.set vr_ftt_dlmid,vr_use1       @               @ Data-link manager session ID
.set vr_ftt_lldid,vr_use2       @               @ Link-level driver session ID
# --- End Foreign Target Terminated structure --------------------------
#
# --- Message Received from MAGNITUDE VRP structure --------------------
.set vr_mrm_dlmid,vr_use1       @               @ Data-link manager session ID
.set vr_mrm_lldid,vr_use2       @               @ Link-level driver session ID
.set vr_mrm_sgl,vr_use3         @               @ SGL of request/response buffer
# --- End Message Received from MAGNITUDE structure --------------------
#
# --- Session Terminated VRP structure --------------------------
.set vr_st_dlmid,vr_use1        @               @ Data-link manager session ID
.set vr_st_lldid,vr_use2        @               @ Link-level driver session ID
# --- End Session Terminated structure --------------------------
#
                                @#endif /* _VRP_H_ */
#******************************************************************************
#
####
## Modelines:
## Local Variables:
## tab-width: 4
## indent-tabs-mode: nil
## End:
## vi:sw=4 ts=4 expandtab
