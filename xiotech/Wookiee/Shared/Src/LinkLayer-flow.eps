%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Link Layer Design)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 09:33:07 11/23/04
%%For: (John Teske)
%%DocumentData: Clean7Bit
%%BoundingBox: 0 0 612 792
%%HiResBoundingBox: 0.0 0.0 612.0 792.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0
%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Arial-BoldMT
[/N170/Arial-BoldMT 1 TZ
%%IncludeResource ArialMT
[/N171/ArialMT 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1803 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:31aa70e3-2b5f-436f-ba11-c248adb5185d' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:31aa70e3-2b5f-436f-ba11-c248adb5185d' xmlns:pdfx='http://ns.adobe.com/pdfx/1.3/' pdfx:Company='Seagate' pdfx:SourceModified='D:20041123153125'/>
<rdf:Description rdf:about='uuid:31aa70e3-2b5f-436f-ba11-c248adb5185d' xmlns:photoshop='http://ns.adobe.com/photoshop/1.0/'><photoshop:headline><rdf:Seq><rdf:li></rdf:li></rdf:Seq></photoshop:headline></rdf:Description>
<rdf:Description rdf:about='uuid:31aa70e3-2b5f-436f-ba11-c248adb5185d' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2004-11-23T09:32:13-06:00' xap:CreatorTool='Acrobat PDFMaker 6.0 for Word' xap:ModifyDate='2004-11-23T09:32:52-06:00' xap:MetadataDate='2004-11-23T09:32:52-06:00'></rdf:Description>
<rdf:Description rdf:about='uuid:31aa70e3-2b5f-436f-ba11-c248adb5185d' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:4c249ff3-ed1a-4f47-916f-29914bd73f14'><xapMM:VersionID><rdf:Seq><rdf:li>23</rdf:li></rdf:Seq></xapMM:VersionID></rdf:Description>
<rdf:Description rdf:about='uuid:31aa70e3-2b5f-436f-ba11-c248adb5185d' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Link Layer Design</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>John Teske</rdf:li></rdf:Seq></dc:creator><dc:subject><rdf:Seq><rdf:li></rdf:li></rdf:Seq></dc:subject></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
0 0 612 792 rectclip
/N172 [/DeviceRGB] /ColorSpace defineRes pop

%ADOFlattenerSettings: Flattener used: Transparency:, Level: 75 ex: 300.00 in: 150.00 tx ST CC
n
0.0 0.0 m
612.0 0.0 l
612.0 792.0 l
0.0 792.0 l
0.0 0.0 l
q
W
n
88.5 743.459961 m
523.5 743.459961 l
523.5 742.979919 l
88.5 742.979919 l
0.0 0.0 0.0 setrgbcolor
f
q
4.5 719.339966 m
/N170 12.0 Tf
(Data Flow )
[8.660281 6.668277 3.992191 6.668277 3.362278 7.328189 3.332278 7.328189 9.332278 3.362278 ] pdfxs
Q
q
4.5 704.459961 m
/N171 10.020004 Tf
(Re)
[7.237551 5.574226 ] pdfxs
Q
q
17.255569 704.459961 m
/N171 10.020004 Tf
(ctangl)
[5.013108 2.788666 5.574226 5.574226 5.574226 2.227548 ] pdfxs
Q
q
43.938156 704.459961 m
/N171 10.020004 Tf
(es a)
[5.574226 5.013108 2.761612 5.574226 ] pdfxs
Q
q
62.805008 704.459961 m
/N171 10.020004 Tf
(r) show
Q
q
66.16478 704.459961 m
/N171 10.020004 Tf
(e functio)
[5.574226 2.761612 2.788666 5.574226 5.574226 5.013108 2.788666 2.227548 5.574226 ] pdfxs
Q
q
103.984741 704.459961 m
/N171 10.020004 Tf
(n) show
Q
q
109.562927 704.459961 m
/N171 10.020004 Tf
(s i)
[5.013108 2.761612 2.227548 ] pdfxs
Q
q
119.495911 704.459961 m
/N171 10.020004 Tf
(n) show
Q
q
125.074097 704.459961 m
/N171 10.020004 Tf
( the link laye)
[2.761612 2.788666 5.574226 5.574226 2.761612 2.227548 2.227548 5.574226 5.013108 2.761612 2.227548 
5.574226 5.013108 5.574226 ] pdfxs
Q
q
180.670792 704.459961 m
/N171 10.020004 Tf
(r, hex)
[3.339693 2.788666 2.761612 5.574226 5.574226 5.013108 ] pdfxs
Q
q
205.739777 704.459961 m
/N171 10.020004 Tf
(agon)
[5.574226 5.574226 5.574226 5.574226 ] pdfxs
Q
q
227.980377 704.459961 m
/N171 10.020004 Tf
(s a)
[5.013108 2.761612 5.574226 ] pdfxs
Q
q
241.273071 704.459961 m
/N171 10.020004 Tf
(r) show
Q
q
244.632828 704.459961 m
/N171 10.020004 Tf
(e tasks in the link layer, o)
[5.574226 2.761612 2.788666 5.574226 5.013108 5.013108 5.013108 2.761612 2.227548 5.574226 2.761612 
2.788666 5.574226 5.574226 2.761612 2.227548 2.227548 5.574226 5.013108 2.761612 2.227548 5.574226 
5.013108 5.574226 3.339693 2.788666 2.761612 5.574226 ] pdfxs
Q
q
356.994537 704.459961 m
/N171 10.020004 Tf
(v) show
Q
q
361.974548 704.459961 m
/N171 10.020004 Tf
(als are )
[5.574226 2.227548 5.013108 2.761612 5.574226 3.339693 5.574226 2.761612 ] pdfxs
Q
q
4.5 692.939941 m
/N171 10.020004 Tf
(external fun)
[5.573123 5.012006 2.787564 5.573123 3.338591 5.573123 5.573123 2.226446 2.761612 2.787564 5.573123 
5.573123 ] pdfxs
Q
q
56.797272 692.939941 m
/N171 10.020004 Tf
(c) show
Q
q
61.837311 692.939941 m
/N171 10.020004 Tf
(tions. The )
[2.787564 2.226446 5.573123 5.573123 5.012006 2.787564 2.761612 6.12415 5.573123 5.573123 2.761612 
] pdfxs
Q
q
108.530472 692.939941 m
/N171 10.020004 Tf
(sha)
[5.012006 5.573123 5.573123 ] pdfxs
Q
q
124.633575 692.939941 m
/N171 10.020004 Tf
(r) show
Q
q
127.993271 692.939941 m
/N171 10.020004 Tf
(ed mem)
[5.573123 5.573123 2.761612 8.348593 5.573123 8.348593 ] pdfxs
Q
q
164.102325 692.939941 m
/N171 10.020004 Tf
(o) show
Q
q
169.680435 692.939941 m
/N171 10.020004 Tf
(ry)
[3.338591 5.012006 ] pdfxs
Q
q
180.732498 692.939941 m
/N171 10.020004 Tf
(queu)
[5.573123 5.573123 5.573123 5.573123 ] pdfxs
Q
q
202.969849 692.939941 m
/N171 10.020004 Tf
(es a)
[5.573123 5.012006 2.761612 5.573123 ] pdfxs
Q
q
221.834488 692.939941 m
/N171 10.020004 Tf
(r) show
Q
q
225.194199 692.939941 m
/N171 10.020004 Tf
(e di)
[5.573123 2.761612 5.573123 2.226446 ] pdfxs
Q
q
241.260269 692.939941 m
/N171 10.020004 Tf
(splaye)
[5.012006 5.573123 2.226446 5.573123 5.012006 5.573123 ] pdfxs
Q
q
270.174896 692.939941 m
/N171 10.020004 Tf
(d in da)
[5.573123 2.761612 2.226446 5.573123 2.761612 5.573123 5.573123 ] pdfxs
Q
q
300.161743 692.939941 m
/N171 10.020004 Tf
(she)
[5.012006 5.573123 5.573123 ] pdfxs
Q
q
316.264862 692.939941 m
/N171 10.020004 Tf
(d) show
Q
q
321.842987 692.939941 m
/N171 10.020004 Tf
( re)
[2.761612 3.338591 5.573123 ] pdfxs
Q
q
333.461182 692.939941 m
/N171 10.020004 Tf
(ctangl)
[5.012006 2.787564 5.573123 5.573123 5.573123 2.226446 ] pdfxs
Q
q
360.138336 692.939941 m
/N171 10.020004 Tf
(es.)
[5.573123 5.012006 2.787564 ] pdfxs
Q
q
4.5 451.499786 m
/N171 10.020004 Tf
(Initiator)
[2.783556 5.569116 2.222438 2.783556 2.222438 5.569116 2.783556 5.569116 3.334583 ] pdfxs
Q
q
4.5 382.499725 m
/N171 10.020004 Tf
(Targ)
[6.128159 5.577132 3.342599 5.577132 ] pdfxs
Q
q
25.065857 382.499725 m
/N171 10.020004 Tf
(et)
[5.577132 2.791572 ] pdfxs
Q
n
13.02 548.820007 m
184.020004 548.820007 l
184.020004 584.820007 l
13.02 584.820007 l
h
1.0 1.0 1.0  setrgbcolor
f
n
184.019989 584.820007 m
184.019989 584.445007 l
13.019989 584.445007 l
13.019989 584.820007 l
13.394988 584.820007 l
13.394988 548.820007 l
13.019989 548.820007 l
13.019989 549.194946 l
184.019989 549.194946 l
184.019989 548.820007 l
183.644989 548.820007 l
183.644989 584.820007 l
184.019989 584.820007 l
184.019989 584.445007 l
184.019989 584.820007 l
184.394974 584.820007 l
184.394974 548.820007 l
184.394974 548.445007 l
184.019989 548.445007 l
13.019989 548.445007 l
12.644989 548.445007 l
12.644989 548.820007 l
12.644989 584.820007 l
12.644989 585.194946 l
13.019989 585.194946 l
184.019989 585.194946 l
184.394974 585.194946 l
184.394974 584.820007 l
184.019989 584.820007 l
13.02 585.195007 m
13.227106 585.195007 13.395 585.0271 13.395 584.820007 c
13.395 584.612854 13.227106 584.445007 13.02 584.445007 c
12.812892 584.445007 12.645 584.612854 12.645 584.820007 c
12.645 585.0271 12.812892 585.195007 13.02 585.195007 c
0.00392 0.00392 0.00392  setrgbcolor
f
0.0 0.0 0.0  setrgbcolor
q
20.639999 569.700012 m
/N171 12.0 Tf
(L$que\(\))
[6.671997 6.671997 6.671997 6.671997 6.671997 3.995911 3.995911 ] pdfxs
Q
q
20.639999 555.900085 m
/N171 12.0 Tf
(LL_QueueMessageT)
[6.665997 6.665997 6.665997 9.329998 6.665997 6.665997 6.665997 6.665997 9.98991 6.665997 5.994 
5.994 6.665997 6.665997 6.665997 7.325909 ] pdfxs
Q
q
132.655716 555.900085 m
/N171 12.0 Tf
(oSend\(\))
[6.665997 7.998089 6.665997 6.665997 6.665997 3.989911 3.989911 ] pdfxs
Q
n
103.439995 620.820007 m
103.439995 589.799988 l
103.439995 589.619995 103.259987 589.440002 103.019997 589.440002 c
102.839996 589.440002 102.659996 589.619995 102.659996 589.799988 c
102.659996 620.820007 l
102.659996 621.0 102.839996 621.179993 103.019997 621.179993 c
103.259987 621.179993 103.439995 621.0 103.439995 620.820007 c
h
106.019997 590.820007 m
103.019997 584.820007 l
100.019997 590.820007 l
0.00392 0.00392 0.00392  setrgbcolor
f
n
112.019997 665.820007 m
87.180008 665.820007 67.019997 655.73999 67.019997 643.320007 c
67.019997 630.900024 87.180008 620.820007 112.019997 620.820007 c
136.919998 620.820007 157.019989 630.900024 157.019989 643.320007 c
157.019989 655.73999 136.919998 665.820007 112.019997 665.820007 c
1.0 1.0 1.0  setrgbcolor
eofill
n
112.019997 665.820007 m
112.019997 665.444946 l
99.651108 665.445984 88.449867 662.932007 80.372704 658.89209 c
76.333923 656.873169 73.07843 654.47345 70.844353 651.833008 c
68.609299 649.190491 67.39563 646.320801 67.394997 643.320007 c
67.395638 640.319153 68.609299 637.449463 70.844353 634.806946 c
77.541565 626.870544 93.466003 621.185181 112.019997 621.195007 c
124.418991 621.193909 135.620132 623.708008 143.689651 627.747803 c
147.724594 629.766663 150.974396 632.16626 153.203812 634.806641 c
155.434158 637.449097 156.644302 640.318787 156.644974 643.320007 c
156.644318 646.321167 155.434174 649.190857 153.203812 651.833313 c
146.520691 659.769409 130.619186 665.454773 112.019997 665.444946 c
112.019997 665.820007 l
112.019997 666.195007 l
124.520988 666.193909 135.819824 663.667969 144.025314 659.562805 c
148.127853 657.509155 151.45929 655.059998 153.776779 652.317261 c
156.093277 649.576538 157.39563 646.528809 157.394989 643.320007 c
157.39563 640.111145 156.093277 637.063354 153.776779 634.322693 c
146.81926 626.109375 130.770844 620.454773 112.019997 620.444946 c
99.548874 620.445984 88.250137 622.971985 80.037292 627.077087 c
75.931046 629.130676 72.59407 631.579712 70.271881 634.322388 c
67.950661 637.062988 66.644333 640.110779 66.644989 643.320007 c
66.644333 646.529114 67.950668 649.576965 70.271881 652.317566 c
77.243462 660.530518 93.313896 666.185181 112.019997 666.195007 c
112.019997 665.820007 l
0.00392 0.00392 0.00392  setrgbcolor
f
0.0 0.0 0.0  setrgbcolor
q
85.619995 645.240112 m
/N171 12.0 Tf
(User)
[8.659202 5.9952 6.667197 3.991111 ] pdfxs
Q
q
85.619995 631.440186 m
/N171 12.0 Tf
(Function)
[7.322429 6.662517 6.662517 5.99052 3.326519 2.654521 6.662517 6.662517 ] pdfxs
Q
n
103.439995 548.820007 m
103.439995 517.799988 l
103.439995 517.619995 103.259987 517.440002 103.019997 517.440002 c
102.839996 517.440002 102.659996 517.619995 102.659996 517.799988 c
102.659996 548.820007 l
102.659996 549.0 102.839996 549.179993 103.019997 549.179993 c
103.259987 549.179993 103.439995 549.0 103.439995 548.820007 c
h
106.019997 518.820007 m
103.019997 512.820007 l
100.019997 518.820007 l
0.00392 0.00392 0.00392  setrgbcolor
f
n
103.439995 485.819977 m
103.439995 373.800018 l
103.439995 373.619995 103.259987 373.440002 103.019997 373.440002 c
102.839996 373.440002 102.659996 373.619995 102.659996 373.800018 c
102.659996 485.819977 l
102.659996 486.0 102.839996 486.179993 103.019997 486.179993 c
103.259987 486.179993 103.439995 486.0 103.439995 485.819977 c
h
106.019997 374.819977 m
103.019997 368.819977 l
100.019997 374.819977 l
f
n
300.660004 548.820007 m
300.660004 615.779968 l
300.660004 616.019958 300.839996 616.200012 301.019989 616.200012 c
301.259979 616.200012 301.440002 616.019958 301.440002 615.779968 c
301.440002 548.820007 l
301.440002 548.580017 301.259979 548.400024 301.019989 548.400024 c
300.839996 548.400024 300.660004 548.580017 300.660004 548.820007 c
h
298.019989 614.820007 m
301.019989 620.820007 l
304.019989 614.820007 l
f
n
301.019989 665.820007 m
271.200012 665.820007 247.019989 655.73999 247.019989 643.320007 c
247.019989 630.900024 271.200012 620.820007 301.019989 620.820007 c
330.899994 620.820007 355.019989 630.900024 355.019989 643.320007 c
355.019989 655.73999 330.899994 665.820007 301.019989 665.820007 c
1.0 1.0 1.0  setrgbcolor
eofill
n
301.019989 665.820007 m
301.019989 665.444946 l
286.152802 665.445923 272.692474 662.92926 262.98172 658.881348 c
258.126465 656.858704 254.210861 654.452454 251.527191 651.808105 c
248.841202 649.160522 247.395187 646.297913 247.394989 643.320007 c
247.395187 640.342041 248.841217 637.479431 251.527191 634.831848 c
259.578552 626.879028 278.721252 621.184143 301.019989 621.195007 c
315.917236 621.194031 329.377472 623.710754 339.080627 627.758606 c
343.932068 629.781189 347.84198 632.187378 350.520966 634.831604 c
353.202209 637.479126 354.644714 640.341736 354.644958 643.320007 c
354.644714 646.298218 353.202209 649.160828 350.520966 651.80835 c
342.483765 659.760803 323.363861 665.45575 301.019989 665.445007 c
301.019989 665.820007 l
301.019989 666.194946 l
316.002716 666.194031 329.54245 663.670715 339.369324 659.573547 c
344.282867 657.523682 348.270447 655.081116 351.047729 652.342224 c
353.822693 649.606567 355.395172 646.551697 355.394989 643.320007 c
355.395203 640.088257 353.822723 637.033386 351.047729 634.297729 c
342.716156 626.10083 323.496155 620.455811 301.019989 620.445007 c
286.067139 620.445923 272.527466 622.969238 262.693237 627.066345 c
257.77597 629.116211 253.782852 631.558716 251.0009 634.297485 c
248.221222 637.03302 246.64476 640.087891 246.644974 643.320007 c
246.64476 646.552063 248.221237 649.606934 251.0009 652.342468 c
259.346436 660.539063 278.588623 666.184143 301.019989 666.195007 c
301.019989 665.820007 l
0.00392 0.00392 0.00392  setrgbcolor
f
0.0 0.0 0.0  setrgbcolor
q
268.259979 645.240112 m
/N171 12.0 Tf
(User)
[8.659202 5.9952 6.667197 3.991111 ] pdfxs
Q
q
268.259979 631.440186 m
/N171 12.0 Tf
(Com)
[8.643722 6.651717 9.975631 ] pdfxs
Q
n
268.263 630.242981 m
328.97699 630.242981 l
328.97699 642.177002 l
268.263 642.177002 l
268.263 630.242981 l
q
W
q
293.579987 631.440002 m
/N171 12.0 Tf
(p) show
Q
Q
q
300.23999 631.440002 m
/N171 12.0 Tf
(letio)
[2.653202 6.661198 3.325199 2.653202 6.661198 ] pdfxs
Q
q
322.250366 631.440002 m
/N171 12.0 Tf
(n) show
Q
n
300.660004 386.819977 m
300.660004 516.779968 l
300.660004 517.019958 300.839996 517.200012 301.019989 517.200012 c
301.259979 517.200012 301.440002 517.019958 301.440002 516.779968 c
301.440002 386.819977 l
301.440002 386.579987 301.259979 386.399994 301.019989 386.399994 c
300.839996 386.399994 300.660004 386.579987 300.660004 386.819977 c
h
298.019989 515.820007 m
301.019989 521.820007 l
304.019989 515.820007 l
0.00392 0.00392 0.00392  setrgbcolor
f
n
220.019989 362.339996 m
391.019989 362.339996 l
391.019989 389.339996 l
220.019989 389.339996 l
h
1.0 1.0 1.0  setrgbcolor
f
n
391.019989 389.279999 m
391.019989 388.904999 l
220.019989 388.904999 l
220.019989 389.279999 l
220.394974 389.279999 l
220.394974 362.279999 l
220.019989 362.279999 l
220.019989 362.654968 l
391.019989 362.654968 l
391.019989 362.279999 l
390.644989 362.279999 l
390.644989 389.279999 l
391.019989 389.279999 l
391.019989 388.904999 l
391.019989 389.279999 l
391.394958 389.279999 l
391.394958 362.279999 l
391.394958 361.904999 l
391.019989 361.904999 l
220.019989 361.904999 l
219.644989 361.904999 l
219.644989 362.279999 l
219.644989 389.279999 l
219.644989 389.654968 l
220.019989 389.654968 l
391.019989 389.654968 l
391.394958 389.654968 l
391.394958 389.279999 l
391.019989 389.279999 l
220.019989 389.654999 m
220.227081 389.654999 220.394989 389.487091 220.394989 389.279999 c
220.394989 389.072876 220.227081 388.904999 220.019989 388.904999 c
219.812881 388.904999 219.644989 389.072876 219.644989 389.279999 c
219.644989 389.487091 219.812881 389.654999 220.019989 389.654999 c
0.00392 0.00392 0.00392  setrgbcolor
f
0.0 0.0 0.0  setrgbcolor
q
227.639999 374.220001 m
/N171 12.0 Tf
(LL_Target)
[6.668277 6.668277 6.668277 7.328189 6.668277 3.992191 6.668277 6.668277 3.332278 ] pdfxs
Q
q
282.393036 374.220001 m
/N171 12.0 Tf
(TaskCompletion\(\))
[7.328189 6.668277 5.99628 5.99628 8.660281 6.668277 9.99219 6.668277 2.660281 6.668277 3.332278 
2.660281 6.668277 6.668277 3.992191 3.992191 ] pdfxs
Q
n
4.023 423.197998 m
6.273 423.197998 l
6.48 423.197998 6.642 423.026978 6.642 422.819977 c
6.642 422.612976 6.48 422.441986 6.273 422.441986 c
4.023 422.441986 l
3.816 422.441986 3.645 422.612976 3.645 422.819977 c
3.645 423.026978 3.816 423.197998 4.023 423.197998 c
9.27 423.197998 m
11.52 423.197998 l
11.726999 423.197998 11.898 423.026978 11.898 422.819977 c
11.898 422.612976 11.726999 422.441986 11.52 422.441986 c
9.27 422.441986 l
9.063 422.441986 8.892 422.612976 8.892 422.819977 c
8.892 423.026978 9.063 423.197998 9.27 423.197998 c
14.516999 423.197998 m
16.767 423.197998 l
16.973999 423.197998 17.144999 423.026978 17.144999 422.819977 c
17.144999 422.612976 16.973999 422.441986 16.767 422.441986 c
14.516999 422.441986 l
14.309999 422.441986 14.148 422.612976 14.148 422.819977 c
14.148 423.026978 14.309999 423.197998 14.516999 423.197998 c
19.772999 423.197998 m
22.022999 423.197998 l
22.23 423.197998 22.392 423.026978 22.392 422.819977 c
22.392 422.612976 22.23 422.441986 22.022999 422.441986 c
19.772999 422.441986 l
19.566 422.441986 19.394999 422.612976 19.394999 422.819977 c
19.394999 423.026978 19.566 423.197998 19.772999 423.197998 c
25.019999 423.197998 m
27.269999 423.197998 l
27.476999 423.197998 27.647999 423.026978 27.647999 422.819977 c
27.647999 422.612976 27.476999 422.441986 27.269999 422.441986 c
25.019999 422.441986 l
24.813 422.441986 24.642 422.612976 24.642 422.819977 c
24.642 423.026978 24.813 423.197998 25.019999 423.197998 c
30.266998 423.197998 m
32.516998 423.197998 l
32.723999 423.197998 32.895 423.026978 32.895 422.819977 c
32.895 422.612976 32.723999 422.441986 32.516998 422.441986 c
30.266998 422.441986 l
30.059999 422.441986 29.897999 422.612976 29.897999 422.819977 c
29.897999 423.026978 30.059999 423.197998 30.266998 423.197998 c
35.522999 423.197998 m
37.772999 423.197998 l
37.98 423.197998 38.141998 423.026978 38.141998 422.819977 c
38.141998 422.612976 37.98 422.441986 37.772999 422.441986 c
35.522999 422.441986 l
35.315998 422.441986 35.145 422.612976 35.145 422.819977 c
35.145 423.026978 35.315998 423.197998 35.522999 423.197998 c
40.77 423.197998 m
43.02 423.197998 l
43.226997 423.197998 43.397999 423.026978 43.397999 422.819977 c
43.397999 422.612976 43.226997 422.441986 43.02 422.441986 c
40.77 422.441986 l
40.563 422.441986 40.391998 422.612976 40.391998 422.819977 c
40.391998 423.026978 40.563 423.197998 40.77 423.197998 c
46.016998 423.197998 m
48.266998 423.197998 l
48.473999 423.197998 48.644997 423.026978 48.644997 422.819977 c
48.644997 422.612976 48.473999 422.441986 48.266998 422.441986 c
46.016998 422.441986 l
45.809998 422.441986 45.647999 422.612976 45.647999 422.819977 c
45.647999 423.026978 45.809998 423.197998 46.016998 423.197998 c
51.272999 423.197998 m
53.522999 423.197998 l
53.73 423.197998 53.891998 423.026978 53.891998 422.819977 c
53.891998 422.612976 53.73 422.441986 53.522999 422.441986 c
51.272999 422.441986 l
51.065998 422.441986 50.894997 422.612976 50.894997 422.819977 c
50.894997 423.026978 51.065998 423.197998 51.272999 423.197998 c
56.519997 423.197998 m
58.769997 423.197998 l
58.976997 423.197998 59.147999 423.026978 59.147999 422.819977 c
59.147999 422.612976 58.976997 422.441986 58.769997 422.441986 c
56.519997 422.441986 l
56.313 422.441986 56.141998 422.612976 56.141998 422.819977 c
56.141998 423.026978 56.313 423.197998 56.519997 423.197998 c
61.766998 423.197998 m
64.016998 423.197998 l
64.223999 423.197998 64.394997 423.026978 64.394997 422.819977 c
64.394997 422.612976 64.223999 422.441986 64.016998 422.441986 c
61.766998 422.441986 l
61.559998 422.441986 61.397999 422.612976 61.397999 422.819977 c
61.397999 423.026978 61.559998 423.197998 61.766998 423.197998 c
67.022995 423.197998 m
69.272995 423.197998 l
69.479996 423.197998 69.641998 423.026978 69.641998 422.819977 c
69.641998 422.612976 69.479996 422.441986 69.272995 422.441986 c
67.022995 422.441986 l
66.815994 422.441986 66.644997 422.612976 66.644997 422.819977 c
66.644997 423.026978 66.815994 423.197998 67.022995 423.197998 c
72.269997 423.197998 m
74.519997 423.197998 l
74.726997 423.197998 74.897995 423.026978 74.897995 422.819977 c
74.897995 422.612976 74.726997 422.441986 74.519997 422.441986 c
72.269997 422.441986 l
72.062996 422.441986 71.891998 422.612976 71.891998 422.819977 c
71.891998 423.026978 72.062996 423.197998 72.269997 423.197998 c
77.516998 423.197998 m
79.766998 423.197998 l
79.973999 423.197998 80.144997 423.026978 80.144997 422.819977 c
80.144997 422.612976 79.973999 422.441986 79.766998 422.441986 c
77.516998 422.441986 l
77.309998 422.441986 77.147995 422.612976 77.147995 422.819977 c
77.147995 423.026978 77.309998 423.197998 77.516998 423.197998 c
82.772995 423.197998 m
85.022995 423.197998 l
85.229996 423.197998 85.391998 423.026978 85.391998 422.819977 c
85.391998 422.612976 85.229996 422.441986 85.022995 422.441986 c
82.772995 422.441986 l
82.565994 422.441986 82.394997 422.612976 82.394997 422.819977 c
82.394997 423.026978 82.565994 423.197998 82.772995 423.197998 c
88.019997 423.197998 m
90.269997 423.197998 l
90.476997 423.197998 90.647995 423.026978 90.647995 422.819977 c
90.647995 422.612976 90.476997 422.441986 90.269997 422.441986 c
88.019997 422.441986 l
87.812996 422.441986 87.641998 422.612976 87.641998 422.819977 c
87.641998 423.026978 87.812996 423.197998 88.019997 423.197998 c
93.266998 423.197998 m
95.516998 423.197998 l
95.723999 423.197998 95.894997 423.026978 95.894997 422.819977 c
95.894997 422.612976 95.723999 422.441986 95.516998 422.441986 c
93.266998 422.441986 l
93.059998 422.441986 92.897995 422.612976 92.897995 422.819977 c
92.897995 423.026978 93.059998 423.197998 93.266998 423.197998 c
98.522995 423.197998 m
100.772995 423.197998 l
100.979996 423.197998 101.141998 423.026978 101.141998 422.819977 c
101.141998 422.612976 100.979996 422.441986 100.772995 422.441986 c
98.522995 422.441986 l
98.315994 422.441986 98.144997 422.612976 98.144997 422.819977 c
98.144997 423.026978 98.315994 423.197998 98.522995 423.197998 c
103.769997 423.197998 m
106.019997 423.197998 l
106.226997 423.197998 106.397995 423.026978 106.397995 422.819977 c
106.397995 422.612976 106.226997 422.441986 106.019997 422.441986 c
103.769997 422.441986 l
103.562996 422.441986 103.391998 422.612976 103.391998 422.819977 c
103.391998 423.026978 103.562996 423.197998 103.769997 423.197998 c
109.016998 423.197998 m
111.266998 423.197998 l
111.473999 423.197998 111.644997 423.026978 111.644997 422.819977 c
111.644997 422.612976 111.473999 422.441986 111.266998 422.441986 c
109.016998 422.441986 l
108.809998 422.441986 108.647995 422.612976 108.647995 422.819977 c
108.647995 423.026978 108.809998 423.197998 109.016998 423.197998 c
114.272995 423.197998 m
116.522995 423.197998 l
116.729996 423.197998 116.891998 423.026978 116.891998 422.819977 c
116.891998 422.612976 116.729996 422.441986 116.522995 422.441986 c
114.272995 422.441986 l
114.065994 422.441986 113.894997 422.612976 113.894997 422.819977 c
113.894997 423.026978 114.065994 423.197998 114.272995 423.197998 c
119.519997 423.197998 m
121.769997 423.197998 l
121.976997 423.197998 122.147995 423.026978 122.147995 422.819977 c
122.147995 422.612976 121.976997 422.441986 121.769997 422.441986 c
119.519997 422.441986 l
119.312996 422.441986 119.141998 422.612976 119.141998 422.819977 c
119.141998 423.026978 119.312996 423.197998 119.519997 423.197998 c
124.766998 423.197998 m
127.016998 423.197998 l
127.223999 423.197998 127.394997 423.026978 127.394997 422.819977 c
127.394997 422.612976 127.223999 422.441986 127.016998 422.441986 c
124.766998 422.441986 l
124.559998 422.441986 124.397995 422.612976 124.397995 422.819977 c
124.397995 423.026978 124.559998 423.197998 124.766998 423.197998 c
130.022995 423.197998 m
132.272995 423.197998 l
132.479996 423.197998 132.641998 423.026978 132.641998 422.819977 c
132.641998 422.612976 132.479996 422.441986 132.272995 422.441986 c
130.022995 422.441986 l
129.815994 422.441986 129.644989 422.612976 129.644989 422.819977 c
129.644989 423.026978 129.815994 423.197998 130.022995 423.197998 c
135.269989 423.197998 m
137.519989 423.197998 l
137.72699 423.197998 137.897995 423.026978 137.897995 422.819977 c
137.897995 422.612976 137.72699 422.441986 137.519989 422.441986 c
135.269989 422.441986 l
135.062988 422.441986 134.891998 422.612976 134.891998 422.819977 c
134.891998 423.026978 135.062988 423.197998 135.269989 423.197998 c
140.516998 423.197998 m
142.766998 423.197998 l
142.973999 423.197998 143.144989 423.026978 143.144989 422.819977 c
143.144989 422.612976 142.973999 422.441986 142.766998 422.441986 c
140.516998 422.441986 l
140.309998 422.441986 140.147995 422.612976 140.147995 422.819977 c
140.147995 423.026978 140.309998 423.197998 140.516998 423.197998 c
145.772995 423.197998 m
148.022995 423.197998 l
148.229996 423.197998 148.391998 423.026978 148.391998 422.819977 c
148.391998 422.612976 148.229996 422.441986 148.022995 422.441986 c
145.772995 422.441986 l
145.565994 422.441986 145.394989 422.612976 145.394989 422.819977 c
145.394989 423.026978 145.565994 423.197998 145.772995 423.197998 c
151.019989 423.197998 m
153.269989 423.197998 l
153.47699 423.197998 153.647995 423.026978 153.647995 422.819977 c
153.647995 422.612976 153.47699 422.441986 153.269989 422.441986 c
151.019989 422.441986 l
150.812988 422.441986 150.641998 422.612976 150.641998 422.819977 c
150.641998 423.026978 150.812988 423.197998 151.019989 423.197998 c
156.266998 423.197998 m
158.516998 423.197998 l
158.723999 423.197998 158.894989 423.026978 158.894989 422.819977 c
158.894989 422.612976 158.723999 422.441986 158.516998 422.441986 c
156.266998 422.441986 l
156.059998 422.441986 155.897995 422.612976 155.897995 422.819977 c
155.897995 423.026978 156.059998 423.197998 156.266998 423.197998 c
161.522995 423.197998 m
163.772995 423.197998 l
163.979996 423.197998 164.141998 423.026978 164.141998 422.819977 c
164.141998 422.612976 163.979996 422.441986 163.772995 422.441986 c
161.522995 422.441986 l
161.315994 422.441986 161.144989 422.612976 161.144989 422.819977 c
161.144989 423.026978 161.315994 423.197998 161.522995 423.197998 c
166.769989 423.197998 m
169.019989 423.197998 l
169.22699 423.197998 169.397995 423.026978 169.397995 422.819977 c
169.397995 422.612976 169.22699 422.441986 169.019989 422.441986 c
166.769989 422.441986 l
166.562988 422.441986 166.391998 422.612976 166.391998 422.819977 c
166.391998 423.026978 166.562988 423.197998 166.769989 423.197998 c
172.016998 423.197998 m
174.266998 423.197998 l
174.473999 423.197998 174.644989 423.026978 174.644989 422.819977 c
174.644989 422.612976 174.473999 422.441986 174.266998 422.441986 c
172.016998 422.441986 l
171.809998 422.441986 171.647995 422.612976 171.647995 422.819977 c
171.647995 423.026978 171.809998 423.197998 172.016998 423.197998 c
177.272995 423.197998 m
179.522995 423.197998 l
179.729996 423.197998 179.891998 423.026978 179.891998 422.819977 c
179.891998 422.612976 179.729996 422.441986 179.522995 422.441986 c
177.272995 422.441986 l
177.065994 422.441986 176.894989 422.612976 176.894989 422.819977 c
176.894989 423.026978 177.065994 423.197998 177.272995 423.197998 c
182.519989 423.197998 m
184.769989 423.197998 l
184.97699 423.197998 185.147995 423.026978 185.147995 422.819977 c
185.147995 422.612976 184.97699 422.441986 184.769989 422.441986 c
182.519989 422.441986 l
182.312988 422.441986 182.141998 422.612976 182.141998 422.819977 c
182.141998 423.026978 182.312988 423.197998 182.519989 423.197998 c
187.766998 423.197998 m
190.016998 423.197998 l
190.223999 423.197998 190.394989 423.026978 190.394989 422.819977 c
190.394989 422.612976 190.223999 422.441986 190.016998 422.441986 c
187.766998 422.441986 l
187.559998 422.441986 187.397995 422.612976 187.397995 422.819977 c
187.397995 423.026978 187.559998 423.197998 187.766998 423.197998 c
193.022995 423.197998 m
195.272995 423.197998 l
195.479996 423.197998 195.641998 423.026978 195.641998 422.819977 c
195.641998 422.612976 195.479996 422.441986 195.272995 422.441986 c
193.022995 422.441986 l
192.815994 422.441986 192.644989 422.612976 192.644989 422.819977 c
192.644989 423.026978 192.815994 423.197998 193.022995 423.197998 c
198.269989 423.197998 m
200.519989 423.197998 l
200.72699 423.197998 200.897995 423.026978 200.897995 422.819977 c
200.897995 422.612976 200.72699 422.441986 200.519989 422.441986 c
198.269989 422.441986 l
198.062988 422.441986 197.891998 422.612976 197.891998 422.819977 c
197.891998 423.026978 198.062988 423.197998 198.269989 423.197998 c
203.516998 423.197998 m
205.766998 423.197998 l
205.973999 423.197998 206.144989 423.026978 206.144989 422.819977 c
206.144989 422.612976 205.973999 422.441986 205.766998 422.441986 c
203.516998 422.441986 l
203.309998 422.441986 203.147995 422.612976 203.147995 422.819977 c
203.147995 423.026978 203.309998 423.197998 203.516998 423.197998 c
208.772995 423.197998 m
211.022995 423.197998 l
211.229996 423.197998 211.391998 423.026978 211.391998 422.819977 c
211.391998 422.612976 211.229996 422.441986 211.022995 422.441986 c
208.772995 422.441986 l
208.565994 422.441986 208.394989 422.612976 208.394989 422.819977 c
208.394989 423.026978 208.565994 423.197998 208.772995 423.197998 c
214.019989 423.197998 m
216.269989 423.197998 l
216.47699 423.197998 216.647995 423.026978 216.647995 422.819977 c
216.647995 422.612976 216.47699 422.441986 216.269989 422.441986 c
214.019989 422.441986 l
213.812988 422.441986 213.641998 422.612976 213.641998 422.819977 c
213.641998 423.026978 213.812988 423.197998 214.019989 423.197998 c
219.266998 423.197998 m
221.516998 423.197998 l
221.723999 423.197998 221.894989 423.026978 221.894989 422.819977 c
221.894989 422.612976 221.723999 422.441986 221.516998 422.441986 c
219.266998 422.441986 l
219.059998 422.441986 218.897995 422.612976 218.897995 422.819977 c
218.897995 423.026978 219.059998 423.197998 219.266998 423.197998 c
224.522995 423.197998 m
226.772995 423.197998 l
226.979996 423.197998 227.141998 423.026978 227.141998 422.819977 c
227.141998 422.612976 226.979996 422.441986 226.772995 422.441986 c
224.522995 422.441986 l
224.315994 422.441986 224.144989 422.612976 224.144989 422.819977 c
224.144989 423.026978 224.315994 423.197998 224.522995 423.197998 c
229.769989 423.197998 m
232.019989 423.197998 l
232.22699 423.197998 232.397995 423.026978 232.397995 422.819977 c
232.397995 422.612976 232.22699 422.441986 232.019989 422.441986 c
229.769989 422.441986 l
229.562988 422.441986 229.391998 422.612976 229.391998 422.819977 c
229.391998 423.026978 229.562988 423.197998 229.769989 423.197998 c
235.016998 423.197998 m
237.266998 423.197998 l
237.473999 423.197998 237.644989 423.026978 237.644989 422.819977 c
237.644989 422.612976 237.473999 422.441986 237.266998 422.441986 c
235.016998 422.441986 l
234.809998 422.441986 234.647995 422.612976 234.647995 422.819977 c
234.647995 423.026978 234.809998 423.197998 235.016998 423.197998 c
240.272995 423.197998 m
242.522995 423.197998 l
242.729996 423.197998 242.891998 423.026978 242.891998 422.819977 c
242.891998 422.612976 242.729996 422.441986 242.522995 422.441986 c
240.272995 422.441986 l
240.065994 422.441986 239.894989 422.612976 239.894989 422.819977 c
239.894989 423.026978 240.065994 423.197998 240.272995 423.197998 c
245.519989 423.197998 m
247.769989 423.197998 l
247.97699 423.197998 248.147995 423.026978 248.147995 422.819977 c
248.147995 422.612976 247.97699 422.441986 247.769989 422.441986 c
245.519989 422.441986 l
245.312988 422.441986 245.141998 422.612976 245.141998 422.819977 c
245.141998 423.026978 245.312988 423.197998 245.519989 423.197998 c
250.766998 423.197998 m
253.016998 423.197998 l
253.223999 423.197998 253.394989 423.026978 253.394989 422.819977 c
253.394989 422.612976 253.223999 422.441986 253.016998 422.441986 c
250.766998 422.441986 l
250.559998 422.441986 250.397995 422.612976 250.397995 422.819977 c
250.397995 423.026978 250.559998 423.197998 250.766998 423.197998 c
256.02298 423.197998 m
258.27298 423.197998 l
258.47998 423.197998 258.641998 423.026978 258.641998 422.819977 c
258.641998 422.612976 258.47998 422.441986 258.27298 422.441986 c
256.02298 422.441986 l
255.815994 422.441986 255.644989 422.612976 255.644989 422.819977 c
255.644989 423.026978 255.815994 423.197998 256.02298 423.197998 c
261.269989 423.197998 m
263.519989 423.197998 l
263.72699 423.197998 263.89798 423.026978 263.89798 422.819977 c
263.89798 422.612976 263.72699 422.441986 263.519989 422.441986 c
261.269989 422.441986 l
261.062988 422.441986 260.891998 422.612976 260.891998 422.819977 c
260.891998 423.026978 261.062988 423.197998 261.269989 423.197998 c
266.516998 423.197998 m
268.766998 423.197998 l
268.973999 423.197998 269.144989 423.026978 269.144989 422.819977 c
269.144989 422.612976 268.973999 422.441986 268.766998 422.441986 c
266.516998 422.441986 l
266.309998 422.441986 266.14798 422.612976 266.14798 422.819977 c
266.14798 423.026978 266.309998 423.197998 266.516998 423.197998 c
271.77298 423.197998 m
274.02298 423.197998 l
274.22998 423.197998 274.391998 423.026978 274.391998 422.819977 c
274.391998 422.612976 274.22998 422.441986 274.02298 422.441986 c
271.77298 422.441986 l
271.565979 422.441986 271.394989 422.612976 271.394989 422.819977 c
271.394989 423.026978 271.565979 423.197998 271.77298 423.197998 c
277.019989 423.197998 m
279.269989 423.197998 l
279.47699 423.197998 279.64798 423.026978 279.64798 422.819977 c
279.64798 422.612976 279.47699 422.441986 279.269989 422.441986 c
277.019989 422.441986 l
276.812988 422.441986 276.641998 422.612976 276.641998 422.819977 c
276.641998 423.026978 276.812988 423.197998 277.019989 423.197998 c
282.266998 423.197998 m
284.516998 423.197998 l
284.723999 423.197998 284.894989 423.026978 284.894989 422.819977 c
284.894989 422.612976 284.723999 422.441986 284.516998 422.441986 c
282.266998 422.441986 l
282.059998 422.441986 281.89798 422.612976 281.89798 422.819977 c
281.89798 423.026978 282.059998 423.197998 282.266998 423.197998 c
287.52298 423.197998 m
289.77298 423.197998 l
289.97998 423.197998 290.141998 423.026978 290.141998 422.819977 c
290.141998 422.612976 289.97998 422.441986 289.77298 422.441986 c
287.52298 422.441986 l
287.315979 422.441986 287.144989 422.612976 287.144989 422.819977 c
287.144989 423.026978 287.315979 423.197998 287.52298 423.197998 c
292.769989 423.197998 m
295.019989 423.197998 l
295.22699 423.197998 295.39798 423.026978 295.39798 422.819977 c
295.39798 422.612976 295.22699 422.441986 295.019989 422.441986 c
292.769989 422.441986 l
292.562988 422.441986 292.391998 422.612976 292.391998 422.819977 c
292.391998 423.026978 292.562988 423.197998 292.769989 423.197998 c
298.016998 423.197998 m
300.266998 423.197998 l
300.473999 423.197998 300.644989 423.026978 300.644989 422.819977 c
300.644989 422.612976 300.473999 422.441986 300.266998 422.441986 c
298.016998 422.441986 l
297.809998 422.441986 297.64798 422.612976 297.64798 422.819977 c
297.64798 423.026978 297.809998 423.197998 298.016998 423.197998 c
303.27298 423.197998 m
305.52298 423.197998 l
305.72998 423.197998 305.891998 423.026978 305.891998 422.819977 c
305.891998 422.612976 305.72998 422.441986 305.52298 422.441986 c
303.27298 422.441986 l
303.065979 422.441986 302.894989 422.612976 302.894989 422.819977 c
302.894989 423.026978 303.065979 423.197998 303.27298 423.197998 c
308.519989 423.197998 m
310.769989 423.197998 l
310.97699 423.197998 311.14798 423.026978 311.14798 422.819977 c
311.14798 422.612976 310.97699 422.441986 310.769989 422.441986 c
308.519989 422.441986 l
308.312988 422.441986 308.141998 422.612976 308.141998 422.819977 c
308.141998 423.026978 308.312988 423.197998 308.519989 423.197998 c
313.766998 423.197998 m
316.016998 423.197998 l
316.223999 423.197998 316.394989 423.026978 316.394989 422.819977 c
316.394989 422.612976 316.223999 422.441986 316.016998 422.441986 c
313.766998 422.441986 l
313.559998 422.441986 313.39798 422.612976 313.39798 422.819977 c
313.39798 423.026978 313.559998 423.197998 313.766998 423.197998 c
319.02298 423.197998 m
321.27298 423.197998 l
321.47998 423.197998 321.641998 423.026978 321.641998 422.819977 c
321.641998 422.612976 321.47998 422.441986 321.27298 422.441986 c
319.02298 422.441986 l
318.815979 422.441986 318.644989 422.612976 318.644989 422.819977 c
318.644989 423.026978 318.815979 423.197998 319.02298 423.197998 c
324.269989 423.197998 m
326.519989 423.197998 l
326.72699 423.197998 326.89798 423.026978 326.89798 422.819977 c
326.89798 422.612976 326.72699 422.441986 326.519989 422.441986 c
324.269989 422.441986 l
324.062988 422.441986 323.891998 422.612976 323.891998 422.819977 c
323.891998 423.026978 324.062988 423.197998 324.269989 423.197998 c
329.516998 423.197998 m
331.766998 423.197998 l
331.973999 423.197998 332.144989 423.026978 332.144989 422.819977 c
332.144989 422.612976 331.973999 422.441986 331.766998 422.441986 c
329.516998 422.441986 l
329.309998 422.441986 329.14798 422.612976 329.14798 422.819977 c
329.14798 423.026978 329.309998 423.197998 329.516998 423.197998 c
334.77298 423.197998 m
337.02298 423.197998 l
337.22998 423.197998 337.391998 423.026978 337.391998 422.819977 c
337.391998 422.612976 337.22998 422.441986 337.02298 422.441986 c
334.77298 422.441986 l
334.565979 422.441986 334.394989 422.612976 334.394989 422.819977 c
334.394989 423.026978 334.565979 423.197998 334.77298 423.197998 c
340.019989 423.197998 m
342.269989 423.197998 l
342.47699 423.197998 342.64798 423.026978 342.64798 422.819977 c
342.64798 422.612976 342.47699 422.441986 342.269989 422.441986 c
340.019989 422.441986 l
339.812988 422.441986 339.641998 422.612976 339.641998 422.819977 c
339.641998 423.026978 339.812988 423.197998 340.019989 423.197998 c
345.266998 423.197998 m
347.516998 423.197998 l
347.723999 423.197998 347.894989 423.026978 347.894989 422.819977 c
347.894989 422.612976 347.723999 422.441986 347.516998 422.441986 c
345.266998 422.441986 l
345.059998 422.441986 344.89798 422.612976 344.89798 422.819977 c
344.89798 423.026978 345.059998 423.197998 345.266998 423.197998 c
350.52298 423.197998 m
352.77298 423.197998 l
352.97998 423.197998 353.141998 423.026978 353.141998 422.819977 c
353.141998 422.612976 352.97998 422.441986 352.77298 422.441986 c
350.52298 422.441986 l
350.315979 422.441986 350.144989 422.612976 350.144989 422.819977 c
350.144989 423.026978 350.315979 423.197998 350.52298 423.197998 c
355.769989 423.197998 m
358.019989 423.197998 l
358.22699 423.197998 358.39798 423.026978 358.39798 422.819977 c
358.39798 422.612976 358.22699 422.441986 358.019989 422.441986 c
355.769989 422.441986 l
355.562988 422.441986 355.391998 422.612976 355.391998 422.819977 c
355.391998 423.026978 355.562988 423.197998 355.769989 423.197998 c
361.016998 423.197998 m
363.266998 423.197998 l
363.473999 423.197998 363.644989 423.026978 363.644989 422.819977 c
363.644989 422.612976 363.473999 422.441986 363.266998 422.441986 c
361.016998 422.441986 l
360.809998 422.441986 360.64798 422.612976 360.64798 422.819977 c
360.64798 423.026978 360.809998 423.197998 361.016998 423.197998 c
366.27298 423.197998 m
368.52298 423.197998 l
368.72998 423.197998 368.891998 423.026978 368.891998 422.819977 c
368.891998 422.612976 368.72998 422.441986 368.52298 422.441986 c
366.27298 422.441986 l
366.065979 422.441986 365.894989 422.612976 365.894989 422.819977 c
365.894989 423.026978 366.065979 423.197998 366.27298 423.197998 c
371.519989 423.197998 m
373.769989 423.197998 l
373.97699 423.197998 374.14798 423.026978 374.14798 422.819977 c
374.14798 422.612976 373.97699 422.441986 373.769989 422.441986 c
371.519989 422.441986 l
371.312988 422.441986 371.141998 422.612976 371.141998 422.819977 c
371.141998 423.026978 371.312988 423.197998 371.519989 423.197998 c
376.766998 423.197998 m
379.016998 423.197998 l
379.223999 423.197998 379.394989 423.026978 379.394989 422.819977 c
379.394989 422.612976 379.223999 422.441986 379.016998 422.441986 c
376.766998 422.441986 l
376.559998 422.441986 376.39798 422.612976 376.39798 422.819977 c
376.39798 423.026978 376.559998 423.197998 376.766998 423.197998 c
382.02298 423.197998 m
384.27298 423.197998 l
384.47998 423.197998 384.641998 423.026978 384.641998 422.819977 c
384.641998 422.612976 384.47998 422.441986 384.27298 422.441986 c
382.02298 422.441986 l
381.815979 422.441986 381.644989 422.612976 381.644989 422.819977 c
381.644989 423.026978 381.815979 423.197998 382.02298 423.197998 c
387.269989 423.197998 m
389.519989 423.197998 l
389.72699 423.197998 389.89798 423.026978 389.89798 422.819977 c
389.89798 422.612976 389.72699 422.441986 389.519989 422.441986 c
387.269989 422.441986 l
387.062988 422.441986 386.891998 422.612976 386.891998 422.819977 c
386.891998 423.026978 387.062988 423.197998 387.269989 423.197998 c
392.516998 423.197998 m
394.766998 423.197998 l
394.973999 423.197998 395.144989 423.026978 395.144989 422.819977 c
395.144989 422.612976 394.973999 422.441986 394.766998 422.441986 c
392.516998 422.441986 l
392.309998 422.441986 392.14798 422.612976 392.14798 422.819977 c
392.14798 423.026978 392.309998 423.197998 392.516998 423.197998 c
397.77298 423.197998 m
400.02298 423.197998 l
400.22998 423.197998 400.391998 423.026978 400.391998 422.819977 c
400.391998 422.612976 400.22998 422.441986 400.02298 422.441986 c
397.77298 422.441986 l
397.565979 422.441986 397.394989 422.612976 397.394989 422.819977 c
397.394989 423.026978 397.565979 423.197998 397.77298 423.197998 c
403.019989 423.197998 m
405.269989 423.197998 l
405.47699 423.197998 405.64798 423.026978 405.64798 422.819977 c
405.64798 422.612976 405.47699 422.441986 405.269989 422.441986 c
403.019989 422.441986 l
402.812988 422.441986 402.641998 422.612976 402.641998 422.819977 c
402.641998 423.026978 402.812988 423.197998 403.019989 423.197998 c
408.266998 423.197998 m
410.516998 423.197998 l
410.723999 423.197998 410.894989 423.026978 410.894989 422.819977 c
410.894989 422.612976 410.723999 422.441986 410.516998 422.441986 c
408.266998 422.441986 l
408.059998 422.441986 407.89798 422.612976 407.89798 422.819977 c
407.89798 423.026978 408.059998 423.197998 408.266998 423.197998 c
413.52298 423.197998 m
415.77298 423.197998 l
415.97998 423.197998 416.141998 423.026978 416.141998 422.819977 c
416.141998 422.612976 415.97998 422.441986 415.77298 422.441986 c
413.52298 422.441986 l
413.315979 422.441986 413.144989 422.612976 413.144989 422.819977 c
413.144989 423.026978 413.315979 423.197998 413.52298 423.197998 c
0.00392 0.00392 0.00392  setrgbcolor
f
n
49.02 395.819977 m
157.020004 395.819977 l
157.020004 422.819977 l
49.02 422.819977 l
h
1.0 1.0 1.0  setrgbcolor
f
n
49.391998 417.572998 m
49.391998 414.566986 l
48.644997 414.566986 l
48.644997 417.572998 l
49.391998 417.572998 l
49.391998 412.316986 m
49.391998 409.319977 l
48.644997 409.319977 l
48.644997 412.316986 l
49.391998 412.316986 l
49.391998 407.069977 m
49.391998 404.072998 l
48.644997 404.072998 l
48.644997 407.069977 l
49.391998 407.069977 l
49.391998 401.822998 m
49.391998 398.816986 l
48.644997 398.816986 l
48.644997 401.822998 l
49.391998 401.822998 l
49.391998 396.566986 m
49.391998 395.819977 l
49.022999 395.819977 l
49.022999 396.197998 l
51.272999 396.197998 l
51.272999 395.441986 l
49.022999 395.441986 l
48.644997 395.441986 l
48.644997 395.819977 l
48.644997 396.566986 l
49.391998 396.566986 l
53.522999 396.197998 m
56.519997 396.197998 l
56.519997 395.441986 l
53.522999 395.441986 l
53.522999 396.197998 l
58.769997 396.197998 m
61.766998 396.197998 l
61.766998 395.441986 l
58.769997 395.441986 l
58.769997 396.197998 l
64.016998 396.197998 m
67.022995 396.197998 l
67.022995 395.441986 l
64.016998 395.441986 l
64.016998 396.197998 l
69.272995 396.197998 m
72.269997 396.197998 l
72.269997 395.441986 l
69.272995 395.441986 l
69.272995 396.197998 l
74.519997 396.197998 m
77.516998 396.197998 l
77.516998 395.441986 l
74.519997 395.441986 l
74.519997 396.197998 l
79.766998 396.197998 m
82.772995 396.197998 l
82.772995 395.441986 l
79.766998 395.441986 l
79.766998 396.197998 l
85.022995 396.197998 m
88.019997 396.197998 l
88.019997 395.441986 l
85.022995 395.441986 l
85.022995 396.197998 l
90.269997 396.197998 m
93.266998 396.197998 l
93.266998 395.441986 l
90.269997 395.441986 l
90.269997 396.197998 l
95.516998 396.197998 m
98.522995 396.197998 l
98.522995 395.441986 l
95.516998 395.441986 l
95.516998 396.197998 l
100.772995 396.197998 m
103.769997 396.197998 l
103.769997 395.441986 l
100.772995 395.441986 l
100.772995 396.197998 l
106.019997 396.197998 m
109.016998 396.197998 l
109.016998 395.441986 l
106.019997 395.441986 l
106.019997 396.197998 l
111.266998 396.197998 m
114.272995 396.197998 l
114.272995 395.441986 l
111.266998 395.441986 l
111.266998 396.197998 l
116.522995 396.197998 m
119.519997 396.197998 l
119.519997 395.441986 l
116.522995 395.441986 l
116.522995 396.197998 l
121.769997 396.197998 m
124.766998 396.197998 l
124.766998 395.441986 l
121.769997 395.441986 l
121.769997 396.197998 l
127.016998 396.197998 m
130.022995 396.197998 l
130.022995 395.441986 l
127.016998 395.441986 l
127.016998 396.197998 l
132.272995 396.197998 m
135.269989 396.197998 l
135.269989 395.441986 l
132.272995 395.441986 l
132.272995 396.197998 l
137.519989 396.197998 m
140.516998 396.197998 l
140.516998 395.441986 l
137.519989 395.441986 l
137.519989 396.197998 l
142.766998 396.197998 m
145.772995 396.197998 l
145.772995 395.441986 l
142.766998 395.441986 l
142.766998 396.197998 l
148.022995 396.197998 m
151.019989 396.197998 l
151.019989 395.441986 l
148.022995 395.441986 l
148.022995 396.197998 l
153.269989 396.197998 m
156.266998 396.197998 l
156.266998 395.441986 l
153.269989 395.441986 l
153.269989 396.197998 l
156.644989 397.322998 m
156.644989 400.319977 l
157.391998 400.319977 l
157.391998 397.322998 l
156.644989 397.322998 l
156.644989 402.569977 m
156.644989 405.566986 l
157.391998 405.566986 l
157.391998 402.569977 l
156.644989 402.569977 l
156.644989 407.816986 m
156.644989 410.822998 l
157.391998 410.822998 l
157.391998 407.816986 l
156.644989 407.816986 l
156.644989 413.072998 m
156.644989 416.069977 l
157.391998 416.069977 l
157.391998 413.072998 l
156.644989 413.072998 l
156.644989 418.319977 m
156.644989 421.316986 l
157.391998 421.316986 l
157.391998 418.319977 l
156.644989 418.319977 l
156.266998 422.441986 m
153.269989 422.441986 l
153.269989 423.197998 l
156.266998 423.197998 l
156.266998 422.441986 l
151.019989 422.441986 m
148.022995 422.441986 l
148.022995 423.197998 l
151.019989 423.197998 l
151.019989 422.441986 l
145.772995 422.441986 m
142.766998 422.441986 l
142.766998 423.197998 l
145.772995 423.197998 l
145.772995 422.441986 l
140.516998 422.441986 m
137.519989 422.441986 l
137.519989 423.197998 l
140.516998 423.197998 l
140.516998 422.441986 l
135.269989 422.441986 m
132.272995 422.441986 l
132.272995 423.197998 l
135.269989 423.197998 l
135.269989 422.441986 l
130.022995 422.441986 m
127.016998 422.441986 l
127.016998 423.197998 l
130.022995 423.197998 l
130.022995 422.441986 l
124.766998 422.441986 m
121.769997 422.441986 l
121.769997 423.197998 l
124.766998 423.197998 l
124.766998 422.441986 l
119.519997 422.441986 m
116.522995 422.441986 l
116.522995 423.197998 l
119.519997 423.197998 l
119.519997 422.441986 l
114.272995 422.441986 m
111.266998 422.441986 l
111.266998 423.197998 l
114.272995 423.197998 l
114.272995 422.441986 l
109.016998 422.441986 m
106.019997 422.441986 l
106.019997 423.197998 l
109.016998 423.197998 l
109.016998 422.441986 l
103.769997 422.441986 m
100.772995 422.441986 l
100.772995 423.197998 l
103.769997 423.197998 l
103.769997 422.441986 l
98.522995 422.441986 m
95.516998 422.441986 l
95.516998 423.197998 l
98.522995 423.197998 l
98.522995 422.441986 l
93.266998 422.441986 m
90.269997 422.441986 l
90.269997 423.197998 l
93.266998 423.197998 l
93.266998 422.441986 l
88.019997 422.441986 m
85.022995 422.441986 l
85.022995 423.197998 l
88.019997 423.197998 l
88.019997 422.441986 l
82.772995 422.441986 m
79.766998 422.441986 l
79.766998 423.197998 l
82.772995 423.197998 l
82.772995 422.441986 l
77.516998 422.441986 m
74.519997 422.441986 l
74.519997 423.197998 l
77.516998 423.197998 l
77.516998 422.441986 l
72.269997 422.441986 m
69.272995 422.441986 l
69.272995 423.197998 l
72.269997 423.197998 l
72.269997 422.441986 l
67.022995 422.441986 m
64.016998 422.441986 l
64.016998 423.197998 l
67.022995 423.197998 l
67.022995 422.441986 l
61.766998 422.441986 m
58.769997 422.441986 l
58.769997 423.197998 l
61.766998 423.197998 l
61.766998 422.441986 l
56.519997 422.441986 m
53.522999 422.441986 l
53.522999 423.197998 l
56.519997 423.197998 l
56.519997 422.441986 l
51.272999 422.441986 m
49.022999 422.441986 l
49.022999 422.819977 l
49.391998 422.819977 l
49.391998 419.822998 l
48.644997 419.822998 l
48.644997 422.819977 l
48.644997 423.197998 l
49.022999 423.197998 l
51.272999 423.197998 l
51.272999 422.441986 l
0.00392 0.00392 0.00392  setrgbcolor
f
n
247.022995 440.819977 m
112.022995 440.819977 l
112.022995 423.197998 l
114.272995 423.197998 l
114.272995 423.197998 l
116.522995 423.197998 l
116.522995 423.197998 116.522995 423.197998 116.522995 423.197998 c
116.522995 423.197998 l
119.519997 423.197998 l
119.519997 423.197998 l
121.769997 423.197998 l
121.769997 423.197998 121.769997 423.197998 121.769997 423.197998 c
121.769997 423.197998 l
124.766998 423.197998 l
124.766998 423.197998 l
127.016998 423.197998 l
127.016998 423.197998 127.016998 423.197998 127.016998 423.197998 c
127.016998 423.197998 l
130.022995 423.197998 l
130.022995 423.197998 l
132.272995 423.197998 l
132.272995 423.197998 132.272995 423.197998 132.272995 423.197998 c
132.272995 423.197998 l
135.269989 423.197998 l
135.269989 423.197998 l
137.519989 423.197998 l
137.519989 423.197998 137.519989 423.197998 137.519989 423.197998 c
137.519989 423.197998 l
140.516998 423.197998 l
140.516998 423.197998 l
142.766998 423.197998 l
142.766998 423.197998 142.766998 423.197998 142.766998 423.197998 c
142.766998 423.197998 l
145.772995 423.197998 l
145.772995 423.197998 l
148.022995 423.197998 l
148.022995 423.197998 148.022995 423.197998 148.022995 423.197998 c
148.022995 423.197998 l
151.019989 423.197998 l
151.019989 423.197998 l
153.269989 423.197998 l
153.269989 423.197998 153.269989 423.197998 153.269989 423.197998 c
153.269989 423.197998 l
156.266998 423.197998 l
156.266998 423.197998 l
158.516998 423.197998 l
158.723999 423.197998 158.894989 423.026978 158.894989 422.819977 c
161.144989 422.819977 l
161.144989 423.026978 161.315994 423.197998 161.522995 423.197998 c
163.772995 423.197998 l
163.979996 423.197998 164.141998 423.026978 164.141998 422.819977 c
166.391998 422.819977 l
166.391998 423.026978 166.562988 423.197998 166.769989 423.197998 c
169.019989 423.197998 l
169.22699 423.197998 169.397995 423.026978 169.397995 422.819977 c
171.647995 422.819977 l
171.647995 423.026978 171.809998 423.197998 172.016998 423.197998 c
174.266998 423.197998 l
174.473999 423.197998 174.644989 423.026978 174.644989 422.819977 c
176.894989 422.819977 l
176.894989 423.026978 177.065994 423.197998 177.272995 423.197998 c
179.522995 423.197998 l
179.729996 423.197998 179.891998 423.026978 179.891998 422.819977 c
182.141998 422.819977 l
182.141998 423.026978 182.312988 423.197998 182.519989 423.197998 c
184.769989 423.197998 l
184.97699 423.197998 185.147995 423.026978 185.147995 422.819977 c
187.397995 422.819977 l
187.397995 423.026978 187.559998 423.197998 187.766998 423.197998 c
190.016998 423.197998 l
190.223999 423.197998 190.394989 423.026978 190.394989 422.819977 c
192.644989 422.819977 l
192.644989 423.026978 192.815994 423.197998 193.022995 423.197998 c
195.272995 423.197998 l
195.479996 423.197998 195.641998 423.026978 195.641998 422.819977 c
197.891998 422.819977 l
197.891998 423.026978 198.062988 423.197998 198.269989 423.197998 c
200.519989 423.197998 l
200.72699 423.197998 200.897995 423.026978 200.897995 422.819977 c
203.147995 422.819977 l
203.147995 423.026978 203.309998 423.197998 203.516998 423.197998 c
205.766998 423.197998 l
205.973999 423.197998 206.144989 423.026978 206.144989 422.819977 c
208.394989 422.819977 l
208.394989 423.026978 208.565994 423.197998 208.772995 423.197998 c
211.022995 423.197998 l
211.229996 423.197998 211.391998 423.026978 211.391998 422.819977 c
213.641998 422.819977 l
213.641998 423.026978 213.812988 423.197998 214.019989 423.197998 c
216.269989 423.197998 l
216.47699 423.197998 216.647995 423.026978 216.647995 422.819977 c
218.897995 422.819977 l
218.897995 423.026978 219.059998 423.197998 219.266998 423.197998 c
221.516998 423.197998 l
221.723999 423.197998 221.894989 423.026978 221.894989 422.819977 c
224.144989 422.819977 l
224.144989 423.026978 224.315994 423.197998 224.522995 423.197998 c
226.772995 423.197998 l
226.979996 423.197998 227.141998 423.026978 227.141998 422.819977 c
229.391998 422.819977 l
229.391998 423.026978 229.562988 423.197998 229.769989 423.197998 c
232.019989 423.197998 l
232.22699 423.197998 232.397995 423.026978 232.397995 422.819977 c
234.647995 422.819977 l
234.647995 423.026978 234.809998 423.197998 235.016998 423.197998 c
237.266998 423.197998 l
237.473999 423.197998 237.644989 423.026978 237.644989 422.819977 c
239.894989 422.819977 l
239.894989 423.026978 240.065994 423.197998 240.272995 423.197998 c
242.522995 423.197998 l
242.729996 423.197998 242.891998 423.026978 242.891998 422.819977 c
245.141998 422.819977 l
245.141998 423.026978 245.312988 423.197998 245.519989 423.197998 c
247.022995 423.197998 l
247.022995 440.819977 l
0.0 0.0 0.0 0.0 setcmykcolor
f
n
247.022995 423.197998 m
245.519989 423.197998 l
245.312988 423.197998 245.141998 423.026978 245.141998 422.819977 c
247.022995 422.819977 l
247.022995 423.197998 l
242.522995 423.197998 m
240.272995 423.197998 l
240.065994 423.197998 239.894989 423.026978 239.894989 422.819977 c
242.891998 422.819977 l
242.891998 423.026978 242.729996 423.197998 242.522995 423.197998 c
237.266998 423.197998 m
235.016998 423.197998 l
234.809998 423.197998 234.647995 423.026978 234.647995 422.819977 c
237.644989 422.819977 l
237.644989 423.026978 237.473999 423.197998 237.266998 423.197998 c
232.019989 423.197998 m
229.769989 423.197998 l
229.562988 423.197998 229.391998 423.026978 229.391998 422.819977 c
232.397995 422.819977 l
232.397995 423.026978 232.22699 423.197998 232.019989 423.197998 c
226.772995 423.197998 m
224.522995 423.197998 l
224.315994 423.197998 224.144989 423.026978 224.144989 422.819977 c
227.141998 422.819977 l
227.141998 423.026978 226.979996 423.197998 226.772995 423.197998 c
221.516998 423.197998 m
219.266998 423.197998 l
219.059998 423.197998 218.897995 423.026978 218.897995 422.819977 c
221.894989 422.819977 l
221.894989 423.026978 221.723999 423.197998 221.516998 423.197998 c
216.269989 423.197998 m
214.019989 423.197998 l
213.812988 423.197998 213.641998 423.026978 213.641998 422.819977 c
216.647995 422.819977 l
216.647995 423.026978 216.47699 423.197998 216.269989 423.197998 c
211.022995 423.197998 m
208.772995 423.197998 l
208.565994 423.197998 208.394989 423.026978 208.394989 422.819977 c
211.391998 422.819977 l
211.391998 423.026978 211.229996 423.197998 211.022995 423.197998 c
205.766998 423.197998 m
203.516998 423.197998 l
203.309998 423.197998 203.147995 423.026978 203.147995 422.819977 c
206.144989 422.819977 l
206.144989 423.026978 205.973999 423.197998 205.766998 423.197998 c
200.519989 423.197998 m
198.269989 423.197998 l
198.062988 423.197998 197.891998 423.026978 197.891998 422.819977 c
200.897995 422.819977 l
200.897995 423.026978 200.72699 423.197998 200.519989 423.197998 c
195.272995 423.197998 m
193.022995 423.197998 l
192.815994 423.197998 192.644989 423.026978 192.644989 422.819977 c
195.641998 422.819977 l
195.641998 423.026978 195.479996 423.197998 195.272995 423.197998 c
190.016998 423.197998 m
187.766998 423.197998 l
187.559998 423.197998 187.397995 423.026978 187.397995 422.819977 c
190.394989 422.819977 l
190.394989 423.026978 190.223999 423.197998 190.016998 423.197998 c
184.769989 423.197998 m
182.519989 423.197998 l
182.312988 423.197998 182.141998 423.026978 182.141998 422.819977 c
185.147995 422.819977 l
185.147995 423.026978 184.97699 423.197998 184.769989 423.197998 c
179.522995 423.197998 m
177.272995 423.197998 l
177.065994 423.197998 176.894989 423.026978 176.894989 422.819977 c
179.891998 422.819977 l
179.891998 423.026978 179.729996 423.197998 179.522995 423.197998 c
174.266998 423.197998 m
172.016998 423.197998 l
171.809998 423.197998 171.647995 423.026978 171.647995 422.819977 c
174.644989 422.819977 l
174.644989 423.026978 174.473999 423.197998 174.266998 423.197998 c
169.019989 423.197998 m
166.769989 423.197998 l
166.562988 423.197998 166.391998 423.026978 166.391998 422.819977 c
169.397995 422.819977 l
169.397995 423.026978 169.22699 423.197998 169.019989 423.197998 c
163.772995 423.197998 m
161.522995 423.197998 l
161.315994 423.197998 161.144989 423.026978 161.144989 422.819977 c
164.141998 422.819977 l
164.141998 423.026978 163.979996 423.197998 163.772995 423.197998 c
158.516998 423.197998 m
156.266998 423.197998 l
156.266998 422.819977 l
158.894989 422.819977 l
158.894989 423.026978 158.723999 423.197998 158.516998 423.197998 c
153.269989 423.197998 m
151.019989 423.197998 l
151.019989 422.819977 l
153.269989 422.819977 l
153.269989 423.197998 l
153.269989 423.197998 153.269989 423.197998 153.269989 423.197998 c
148.022995 423.197998 m
145.772995 423.197998 l
145.772995 422.819977 l
148.022995 422.819977 l
148.022995 423.197998 l
148.022995 423.197998 148.022995 423.197998 148.022995 423.197998 c
142.766998 423.197998 m
140.516998 423.197998 l
140.516998 422.819977 l
142.766998 422.819977 l
142.766998 423.197998 l
142.766998 423.197998 142.766998 423.197998 142.766998 423.197998 c
137.519989 423.197998 m
135.269989 423.197998 l
135.269989 422.819977 l
137.519989 422.819977 l
137.519989 423.197998 l
137.519989 423.197998 137.519989 423.197998 137.519989 423.197998 c
132.272995 423.197998 m
130.022995 423.197998 l
130.022995 422.819977 l
132.272995 422.819977 l
132.272995 423.197998 l
132.272995 423.197998 132.272995 423.197998 132.272995 423.197998 c
127.016998 423.197998 m
124.766998 423.197998 l
124.766998 422.819977 l
127.016998 422.819977 l
127.016998 423.197998 l
127.016998 423.197998 127.016998 423.197998 127.016998 423.197998 c
121.769997 423.197998 m
119.519997 423.197998 l
119.519997 422.819977 l
121.769997 422.819977 l
121.769997 423.197998 l
121.769997 423.197998 121.769997 423.197998 121.769997 423.197998 c
116.522995 423.197998 m
114.272995 423.197998 l
114.272995 422.819977 l
116.522995 422.819977 l
116.522995 423.197998 l
116.522995 423.197998 116.522995 423.197998 116.522995 423.197998 c
0.74902 0.678431 0.670588 0.898039  setcmykcolor
f
n
156.266998 423.197998 m
153.269989 423.197998 l
153.269989 423.197998 l
153.269989 422.819977 l
156.266998 422.819977 l
156.266998 423.197998 l
156.266998 423.197998 l
151.019989 423.197998 m
148.022995 423.197998 l
148.022995 423.197998 l
148.022995 422.819977 l
151.019989 422.819977 l
151.019989 423.197998 l
151.019989 423.197998 l
145.772995 423.197998 m
142.766998 423.197998 l
142.766998 423.197998 l
142.766998 422.819977 l
145.772995 422.819977 l
145.772995 423.197998 l
145.772995 423.197998 l
140.516998 423.197998 m
137.519989 423.197998 l
137.519989 423.197998 l
137.519989 422.819977 l
140.516998 422.819977 l
140.516998 423.197998 l
140.516998 423.197998 l
135.269989 423.197998 m
132.272995 423.197998 l
132.272995 423.197998 l
132.272995 422.819977 l
135.269989 422.819977 l
135.269989 423.197998 l
135.269989 423.197998 l
130.022995 423.197998 m
127.016998 423.197998 l
127.016998 423.197998 l
127.016998 422.819977 l
130.022995 422.819977 l
130.022995 423.197998 l
130.022995 423.197998 l
124.766998 423.197998 m
121.769997 423.197998 l
121.769997 423.197998 l
121.769997 422.819977 l
124.766998 422.819977 l
124.766998 423.197998 l
124.766998 423.197998 l
119.519997 423.197998 m
116.522995 423.197998 l
116.522995 423.197998 l
116.522995 422.819977 l
119.519997 422.819977 l
119.519997 423.197998 l
119.519997 423.197998 l
114.272995 423.197998 m
112.022995 423.197998 l
112.022995 422.819977 l
114.272995 422.819977 l
114.272995 423.197998 l
114.272995 423.197998 l
f
n
247.019989 422.819977 m
373.019989 422.819977 l
373.019989 449.819977 l
247.019989 449.819977 l
h
1.0 1.0 1.0 setrgbcolor
f
n
247.394989 444.569977 m
247.394989 441.569977 l
246.644989 441.569977 l
246.644989 444.569977 l
247.394989 439.319977 m
247.394989 436.319977 l
246.644989 436.319977 l
246.644989 439.319977 l
247.394989 434.069977 m
247.394989 431.069977 l
246.644989 431.069977 l
246.644989 434.069977 l
247.394989 428.819977 m
247.394989 425.819977 l
246.644989 425.819977 l
246.644989 428.819977 l
247.394974 423.569977 m
247.394974 422.819977 l
247.019989 422.819977 l
247.019989 423.194946 l
249.269974 423.194946 l
249.269974 422.445007 l
247.019989 422.444977 l
246.644989 422.444977 l
246.644989 422.819977 l
246.644989 423.569977 l
247.394989 423.569977 l
251.519974 423.194977 m
254.519974 423.194977 l
254.519974 422.444977 l
251.519974 422.444977 l
256.769958 423.194977 m
259.769958 423.194977 l
259.769958 422.444977 l
256.769958 422.444977 l
262.019958 423.194977 m
265.019958 423.194977 l
265.019958 422.444977 l
262.019958 422.444977 l
267.269958 423.194977 m
270.269958 423.194977 l
270.269958 422.444977 l
267.269958 422.444977 l
272.519958 423.194977 m
275.519958 423.194977 l
275.519958 422.444977 l
272.519958 422.444977 l
277.769958 423.194977 m
280.769958 423.194977 l
280.769958 422.444977 l
277.769958 422.444977 l
283.019958 423.194977 m
286.019958 423.194977 l
286.019958 422.444977 l
283.019958 422.444977 l
288.269958 423.194977 m
291.269958 423.194977 l
291.269958 422.444977 l
288.269958 422.444977 l
293.519958 423.194977 m
296.519958 423.194977 l
296.519958 422.444977 l
293.519958 422.444977 l
298.769958 423.194977 m
301.769958 423.194977 l
301.769958 422.444977 l
298.769958 422.444977 l
304.019958 423.194977 m
307.019958 423.194977 l
307.019958 422.444977 l
304.019958 422.444977 l
309.269958 423.194977 m
312.269958 423.194977 l
312.269958 422.444977 l
309.269958 422.444977 l
314.519958 423.194977 m
317.519958 423.194977 l
317.519958 422.444977 l
314.519958 422.444977 l
319.769958 423.194977 m
322.769958 423.194977 l
322.769958 422.444977 l
319.769958 422.444977 l
325.019958 423.194977 m
328.019928 423.194977 l
328.019928 422.444977 l
325.019958 422.444977 l
330.269928 423.194977 m
333.269928 423.194977 l
333.269928 422.444977 l
330.269928 422.444977 l
335.519928 423.194977 m
338.519928 423.194977 l
338.519928 422.444977 l
335.519928 422.444977 l
340.769928 423.194977 m
343.769928 423.194977 l
343.769928 422.444977 l
340.769928 422.444977 l
346.019928 423.194977 m
349.019928 423.194977 l
349.019928 422.444977 l
346.019928 422.444977 l
351.269928 423.194977 m
354.269928 423.194977 l
354.269928 422.444977 l
351.269928 422.444977 l
356.519928 423.194977 m
359.519897 423.194977 l
359.519897 422.444977 l
356.519928 422.444977 l
361.769897 423.194977 m
364.769897 423.194977 l
364.769897 422.444977 l
361.769897 422.444977 l
367.019897 423.194977 m
370.019897 423.194977 l
370.019897 422.444977 l
367.019897 422.444977 l
372.269897 423.194946 m
373.019989 423.194946 l
373.019989 422.819977 l
372.644989 422.819977 l
372.644989 425.069885 l
373.394989 425.069885 l
373.394958 422.819977 l
373.394958 422.444977 l
373.019989 422.444977 l
372.269897 422.444977 l
372.269897 423.194977 l
372.644989 427.319885 m
372.644989 430.319885 l
373.394989 430.319885 l
373.394989 427.319885 l
372.644989 432.569885 m
372.644989 435.569885 l
373.394989 435.569885 l
373.394989 432.569885 l
372.644989 437.819885 m
372.644989 440.819885 l
373.394989 440.819885 l
373.394989 437.819885 l
372.644989 443.069885 m
372.644989 446.069885 l
373.394989 446.069885 l
373.394989 443.069885 l
372.644989 448.319885 m
372.644989 449.819977 l
373.019989 449.819977 l
373.019989 449.444977 l
371.52005 449.444977 l
371.52005 450.194977 l
373.019989 450.194946 l
373.394958 450.194946 l
373.394958 449.819977 l
373.394958 448.319885 l
372.64502 448.319885 l
369.27005 449.444977 m
366.27005 449.444977 l
366.27005 450.194977 l
369.27005 450.194977 l
364.02005 449.444977 m
361.02005 449.444977 l
361.02005 450.194977 l
364.02005 450.194977 l
358.77005 449.444977 m
355.77005 449.444977 l
355.77005 450.194977 l
358.77005 450.194977 l
353.52005 449.444977 m
350.52005 449.444977 l
350.52005 450.194977 l
353.52005 450.194977 l
348.27005 449.444977 m
345.27005 449.444977 l
345.27005 450.194977 l
348.27005 450.194977 l
343.02005 449.444977 m
340.02005 449.444977 l
340.02005 450.194977 l
343.02005 450.194977 l
337.77005 449.444977 m
334.77005 449.444977 l
334.77005 450.194977 l
337.77005 450.194977 l
332.52005 449.444977 m
329.52005 449.444977 l
329.52005 450.194977 l
332.52005 450.194977 l
327.27005 449.444977 m
324.27005 449.444977 l
324.27005 450.194977 l
327.27005 450.194977 l
322.02005 449.444977 m
319.02005 449.444977 l
319.02005 450.194977 l
322.02005 450.194977 l
316.77005 449.444977 m
313.77005 449.444977 l
313.77005 450.194977 l
316.77005 450.194977 l
311.520081 449.444977 m
308.520081 449.444977 l
308.520081 450.194977 l
311.520081 450.194977 l
306.270081 449.444977 m
303.270081 449.444977 l
303.270081 450.194977 l
306.270081 450.194977 l
301.020081 449.444977 m
298.020081 449.444977 l
298.020081 450.194977 l
301.020081 450.194977 l
295.770081 449.444977 m
292.770081 449.444977 l
292.770081 450.194977 l
295.770081 450.194977 l
290.520081 449.444977 m
287.520081 449.444977 l
287.520081 450.194977 l
290.520081 450.194977 l
285.270081 449.444977 m
282.270081 449.444977 l
282.270081 450.194977 l
285.270081 450.194977 l
280.020081 449.444977 m
277.020111 449.444977 l
277.020111 450.194977 l
280.020081 450.194977 l
274.770111 449.444977 m
271.770111 449.444977 l
271.770111 450.194977 l
274.770111 450.194977 l
269.520111 449.444977 m
266.520111 449.444977 l
266.520111 450.194977 l
269.520111 450.194977 l
264.270111 449.444977 m
261.270111 449.444977 l
261.270111 450.194977 l
264.270111 450.194977 l
259.020111 449.444977 m
256.020111 449.444977 l
256.020111 450.194977 l
259.020111 450.194977 l
253.770126 449.444977 m
250.770126 449.444977 l
250.770126 450.194977 l
253.770126 450.194977 l
248.520126 449.444977 m
247.019989 449.444977 l
247.019989 449.819977 l
247.394974 449.819977 l
247.394974 446.819977 l
246.645004 446.819977 l
246.644989 449.819977 l
246.644989 450.194946 l
247.019989 450.194946 l
248.520126 450.194946 l
248.520126 449.445007 l
0.00392 0.00392 0.00392  setrgbcolor
f
0.0 0.0 0.0  setrgbcolor
q
254.639999 434.700012 m
/N171 12.0 Tf
(LLCompletionQueue)
[6.669598 6.669598 8.661602 6.669598 9.993511 6.669598 2.661602 6.669598 3.333599 2.661602 6.669598 
6.669598 9.333599 6.669598 6.669598 6.669598 6.669598 ] pdfxs
Q
q
119.279999 427.97998 m
/N171 10.020004 Tf
(Share)
[6.682315 5.570018 5.570018 3.335485 5.570018 ] pdfxs
Q
q
145.955917 427.97998 m
/N171 10.020004 Tf
(d) show
Q
q
151.533981 427.97998 m
/N171 10.020004 Tf
( Mem)
[2.761412 8.345487 5.570018 8.345487 ] pdfxs
Q
q
176.490479 427.97998 m
/N171 10.020004 Tf
(o) show
Q
q
182.068558 427.97998 m
/N171 10.020004 Tf
(r) show
Q
n
119.276993 426.419983 m
232.136993 426.419983 l
232.136993 436.97699 l
119.276993 436.97699 l
119.276993 426.419983 l
q
W
q
185.459991 427.97998 m
/N171 10.020004 Tf
(y) show
Q
Q
q
190.440002 427.97998 m
/N171 10.020004 Tf
( Interface )
[2.761512 2.779548 5.565108 2.779548 5.565108 3.330575 2.779548 5.565108 5.00399 5.565108 2.761512 
] pdfxs
Q
q
56.639999 407.700012 m
/N171 12.0 Tf
(LLTargetQueue)
[6.665997 6.665997 7.325909 6.665997 3.989911 6.665997 6.665997 3.329998 9.329998 6.665997 6.665997 
6.665997 6.665997 ] pdfxs
Q
n
236.580002 548.820007 m
365.160004 548.820007 l
409.019989 535.320007 l
365.160004 521.820007 l
236.580002 521.820007 l
193.019989 535.320007 l
1.0 1.0 1.0  setrgbcolor
eofill
n
236.580002 548.820007 m
236.580002 549.195007 l
365.160004 549.195007 l
365.270294 549.178406 l
409.13028 535.678406 l
409.287231 535.630066 409.394989 535.484192 409.394989 535.320007 c
409.394989 535.155762 409.287231 535.009827 409.13028 534.961548 c
365.270294 521.461548 l
365.160004 521.444946 l
236.580002 521.444946 l
236.468979 521.461792 l
192.908966 534.961792 l
192.75209 535.010376 192.644974 535.155762 192.644974 535.320007 c
192.644974 535.484192 192.752106 535.629517 192.908966 535.678162 c
236.468979 549.178162 l
236.580002 549.195007 l
236.580002 548.820007 l
236.69101 548.461792 l
193.130997 534.961792 l
193.019989 535.320007 l
193.130997 535.678162 l
236.69101 522.178162 l
236.580002 521.820007 l
236.580002 522.195007 l
365.160004 522.195007 l
365.160004 521.820007 l
365.049683 522.178406 l
408.909668 535.678406 l
409.019989 535.320007 l
408.909668 534.961548 l
365.049683 548.461548 l
365.160004 548.820007 l
365.160004 548.444946 l
236.580002 548.444946 l
236.580002 548.820007 l
236.69101 548.461792 l
236.580002 548.820007 l
0.00392 0.00392 0.00392  setrgbcolor
f
0.0 0.0 0.0  setrgbcolor
q
241.139999 533.700012 m
/N171 12.0 Tf
(LL_CompletionTask\(\))
[6.673317 6.673317 6.673317 8.665321 6.673317 9.997231 6.673317 2.665321 6.673317 3.337318 2.665321 
6.673317 6.673317 7.333229 6.673317 6.00132 6.00132 3.997231 3.997231 ] pdfxs
Q
n
56.52 512.820007 m
158.339996 512.820007 l
193.019989 499.319977 l
158.339996 485.819977 l
56.52 485.819977 l
22.02 499.319977 l
1.0 1.0 1.0  setrgbcolor
eofill
n
56.52 512.820007 m
56.52 513.195007 l
158.339981 513.195007 l
158.476028 513.169434 l
193.156021 499.669403 l
193.300537 499.613129 193.394989 499.475067 193.394989 499.319977 c
193.394989 499.164856 193.300552 499.026764 193.156021 498.97052 c
158.476028 485.47052 l
158.339996 485.444946 l
56.519997 485.444946 l
56.38335 485.470734 l
21.88335 498.970734 l
21.739965 499.026825 21.645 499.166016 21.645 499.319977 c
21.645 499.473907 21.739979 499.613068 21.88335 499.669189 c
56.38335 513.169189 l
56.52 513.195007 l
56.52 512.820007 l
56.656647 512.470764 l
22.156649 498.970734 l
22.02 499.319977 l
22.156649 499.669189 l
56.656647 486.169189 l
56.52 485.819977 l
56.52 486.194977 l
158.339981 486.194977 l
158.339981 485.819977 l
158.203949 486.169403 l
192.883942 499.669403 l
193.019989 499.319977 l
192.883942 498.97052 l
158.203949 512.47052 l
158.339996 512.820007 l
158.339996 512.444946 l
56.519997 512.444946 l
56.519997 512.820007 l
56.656647 512.470764 l
56.52 512.820007 l
0.00392 0.00392 0.00392  setrgbcolor
f
0.0 0.0 0.0  setrgbcolor
q
61.080002 497.700012 m
/N171 12.0 Tf
(LL_Initiator)
[6.670677 6.670677 6.670677 3.334679 6.670677 2.662682 3.334679 2.662682 6.670677 3.334679 6.670677 
3.994591 ] pdfxs
Q
q
120.513824 497.700012 m
/N171 12.0 Tf
(Task\(\))
[7.330589 6.670677 5.99868 5.99868 3.994591 3.994591 ] pdfxs
Q
n
103.320007 351.059998 m
163.019989 282.839996 l
163.199997 282.660004 163.139999 282.419983 163.019989 282.300018 c
162.839996 282.119995 162.600006 282.179993 162.479996 282.300018 c
102.779999 350.579987 l
102.600006 350.700012 102.659996 350.940002 102.779999 351.059998 c
102.960007 351.23999 103.200005 351.179993 103.320007 351.059998 c
h
164.339996 285.300018 m
166.019989 278.820007 l
159.839996 281.339996 l
0.00392 0.00392 0.00392  setrgbcolor
f
n
56.52 377.819977 m
158.339996 377.819977 l
193.019989 364.319977 l
158.339996 350.820007 l
56.52 350.820007 l
22.02 364.319977 l
1.0 1.0 1.0  setrgbcolor
eofill
n
56.52 377.819977 m
56.52 378.194977 l
158.339981 378.194977 l
158.476028 378.169403 l
193.156021 364.669403 l
193.300537 364.613129 193.394989 364.475067 193.394989 364.319977 c
193.394989 364.164856 193.300552 364.026764 193.156021 363.97052 c
158.476028 350.470551 l
158.339996 350.444977 l
56.519997 350.444977 l
56.38335 350.470764 l
21.88335 363.970734 l
21.739965 364.026825 21.645 364.166016 21.645 364.319977 c
21.645 364.473907 21.739979 364.613068 21.88335 364.669189 c
56.38335 378.169189 l
56.52 378.194977 l
56.52 377.819977 l
56.656647 377.470734 l
22.156649 363.970734 l
22.02 364.319977 l
22.156649 364.669189 l
56.656647 351.16922 l
56.52 350.820007 l
56.52 351.195007 l
158.339981 351.195007 l
158.339981 350.820007 l
158.203949 351.169434 l
192.883942 364.669403 l
193.019989 364.319977 l
192.883942 363.97052 l
158.203949 377.47052 l
158.339996 377.819977 l
158.339996 377.444946 l
56.519997 377.444946 l
56.519997 377.819977 l
56.656647 377.470734 l
56.52 377.819977 l
0.00392 0.00392 0.00392  setrgbcolor
f
0.0 0.0 0.0  setrgbcolor
q
61.080002 362.700012 m
/N171 12.0 Tf
(LL_Target)
[6.669598 6.669598 6.669598 7.32951 6.669598 3.993511 6.669598 6.669598 3.333599 ] pdfxs
Q
q
115.843384 362.700012 m
/N171 12.0 Tf
(Task\(\))
[7.32951 6.669598 5.9976 5.9976 3.993511 3.993511 ] pdfxs
Q
n
237.779999 281.519989 m
297.660004 358.559998 l
297.779999 358.73999 298.019989 358.800018 298.200012 358.679993 c
298.380005 358.5 298.380005 358.259979 298.259979 358.139984 c
238.319977 281.100006 l
238.199997 280.919983 237.959991 280.859985 237.839996 280.97998 c
237.659988 281.160004 237.600006 281.339996 237.779999 281.519989 c
h
295.019989 359.399994 m
301.019989 362.279999 l
299.759979 355.73999 l
0.00392 0.00392 0.00392  setrgbcolor
f
n
202.019989 290.279999 m
177.179993 290.279999 157.019989 278.220001 157.019989 263.279999 c
157.019989 248.400009 177.179993 236.279999 202.019989 236.279999 c
226.919998 236.279999 247.019989 248.400009 247.019989 263.279999 c
247.019989 278.220001 226.919998 290.279999 202.019989 290.279999 c
1.0 1.0 1.0  setrgbcolor
eofill
n
202.019989 290.279999 m
202.019989 289.904968 l
189.660812 289.906006 178.470474 286.901428 170.397781 282.060852 c
162.31839 277.215485 157.391769 270.568634 157.394974 263.279999 c
157.391556 256.022003 162.318359 249.374268 170.39801 244.5215 c
178.470901 239.673386 189.661087 236.653976 202.019989 236.654999 c
214.408981 236.653976 225.599091 239.673431 233.664337 244.521423 c
241.736237 249.3741 246.64827 256.021393 246.644974 263.279999 c
246.648056 270.569214 241.736206 277.215668 233.664551 282.060913 c
225.599487 286.901367 214.409317 289.905975 202.019989 289.904968 c
202.019989 290.279999 l
202.019989 290.654999 l
214.53067 290.653961 225.840469 287.628601 234.050415 282.704041 c
242.253738 277.784302 247.391876 270.930786 247.394974 263.279999 c
247.391663 255.658569 242.253708 248.805893 234.050644 243.878571 c
225.840881 238.946548 214.531006 235.906006 202.019989 235.904984 c
189.538834 235.906006 178.229065 238.946594 170.011963 243.878494 c
161.80159 248.805725 156.648392 255.657944 156.644974 263.279999 c
156.648178 270.931335 161.801559 277.784485 170.012177 282.704132 c
178.229492 287.62854 189.539093 290.653961 202.019989 290.654999 c
202.019989 290.279999 l
0.00392 0.00392 0.00392  setrgbcolor
f
0.0 0.0 0.0  setrgbcolor
q
175.619995 268.440094 m
/N171 12.0 Tf
(Target)
[7.335629 6.675717 3.999631 6.675717 6.675717 3.339719 ] pdfxs
Q
q
175.619995 254.640167 m
/N171 12.0 Tf
(Function)
[7.322429 6.662517 6.662517 5.99052 3.326519 2.654521 6.662517 6.662517 ] pdfxs
Q
n
88.5 49.020004 m
523.5 49.020004 l
523.5 48.539993 l
88.5 48.539993 l
f
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Arial-BoldMT
%%+ font ArialMT
%%EOF
