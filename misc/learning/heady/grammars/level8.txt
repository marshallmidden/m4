start: _EOL* statement+

statement: if_statement elif_statement* else_statement?
         | repeat
         | ranged_loop
         | assignment _EOL+
         | print _EOL+
         | echo _EOL+

if_statement: "if" expression _EOL INDENT statement+ DEDENT
elif_statement: "elif" expression _EOL INDENT statement+ DEDENT
else_statement: "else" _EOL INDENT statement+ DEDENT 

repeat: "repeat" expression "times" _EOL INDENT statement+ DEDENT

ranged_loop: "for" NAME "in" "range" expression "to" expression _EOL INDENT statement+ DEDENT

assignment: NAME "is" expression
          | ask

?expression: sum
           | expression "="  sum -> eq
           | expression "!=" sum -> ne
           | expression "<=" sum -> le
           | expression ">=" sum -> ge
           | expression "<"  sum -> lt
           | expression ">"  sum -> gt

?sum: product
   | sum "+" product -> addition
   | sum "-" product -> substraction

?product: atom
    | product "*" atom -> multiplication
    | product "/" atom -> division
    | product "%" atom -> modulo

?atom: NAME 
      | INTEGER
      | FLOAT
      | STRING
      | "[" (expression? | (expression ",")+ expression) "]" -> list 
      | "(" expression? ")" 
      | NAME "at" atom -> list_access

print: "print" expression+
echo: "echo" expression+
ask: "ask" expression+

_EOL: /(\r?\n[\t ]*)+/ 

%import common.WS_INLINE
%import common.SIGNED_INT -> INTEGER
%import common.FLOAT -> FLOAT
%import common.CNAME -> NAME
%import common._STRING_ESC_INNER
%import common.ESCAPED_STRING -> STRING // TODO: support single quoted strings

%declare INDENT DEDENT

%ignore WS_INLINE 


