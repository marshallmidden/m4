start: program
program: _EOL* command (" ")* (_EOL+ command (" ")*)* _EOL* //lines may end on spaces and might be separated by many newlines
?command: print
         | ask
         | assign_list
         | assign
         | invalid //catch all at the end

_EOL: "\r"?"\n"

print: "print " (" "| list_access | quoted_text | var)*  -> print

ask : var " " + "is ask " + (" " | text | punctuation)*
assign_list: var " is " text ((", "|",") text)+
assign : var " is " text
invalid: textwithoutspaces " " text

punctuation : PUNCTUATION -> punctuation
PUNCTUATION: "!" | "?" | "." //uppercase places tokens in tree

var: NAME -> var
list_access : var " at " (index | random) -> list_access
index : NUMBER
random : "random"

text: /([^\n,]+)/ -> text //anything can be parsed except for a newline and a comma for list separators
//punctuation does not need to be treated differently anymore

quoted_text_no_escape: /'([^']*)'/ -> text //simply all between quotes should this be used at earlier levels?
quoted_text: /'((?:[^\\']|\\.)*)'/ -> text //text can be between single quotes, but quotes may be escaped with \

textwithoutspaces: /([^\r\n, *+-\/]+)/ -> text //anything can be parsed except for spaces (plus: a newline and a comma for list separators)

%import common.LETTER   // imports from terminal library
%import common.DIGIT   // imports from terminal library
%import common.WS_INLINE   // imports from terminal library
%import common.NEWLINE   // imports from terminal library
%import common.SIGNED_INT -> NUMBER
%import common.CNAME -> NAME

