diff -Nrp -U 7 --no-ignore-file-name-case --strip-trailing-cr '--exclude=.git*' '--exclude=objtool' '--exclude=cpupower' a/fs/smb/client/cifsglob.h b/fs/smb/client/cifsglob.h
--- a/fs/smb/client/cifsglob.h	2019-09-15 16:19:32.000000000 -0500
+++ b/fs/smb/client/cifsglob.h	2024-02-07 15:01:05.269892954 -0600
@@ -662,14 +662,15 @@ inc_rfc1001_len(void *buf, int count)
 struct TCP_Server_Info {
 	struct list_head tcp_ses_list;
 	struct list_head smb_ses_list;
 	spinlock_t srv_lock;  /* protect anything here that is not protected */
 	__u64 conn_id; /* connection identifier (useful for debugging) */
 	int srv_count; /* reference counter */
 	/* 15 character server name + 0x20 16th byte indicating type = srv */
+	char *volUNC;
 	char server_RFC1001_name[RFC1001_NAME_LEN_WITH_NULL];
 	struct smb_version_operations	*ops;
 	struct smb_version_values	*vals;
 	/* updates to tcpStatus protected by cifs_tcp_ses_lock */
 	enum statusEnum tcpStatus; /* what we think the status is */
 	char *hostname; /* hostname portion of UNC string */
 	struct socket *ssocket;
diff -Nrp -U 7 --no-ignore-file-name-case --strip-trailing-cr '--exclude=.git*' '--exclude=objtool' '--exclude=cpupower' a/fs/smb/client/cifsproto.h b/fs/smb/client/cifsproto.h
--- a/fs/smb/client/cifsproto.h	2019-09-15 16:19:32.000000000 -0500
+++ b/fs/smb/client/cifsproto.h	2024-02-07 14:59:45.068171000 -0600
@@ -217,15 +217,16 @@ extern struct inode *cifs_iget(struct su
 				       struct cifs_open_info_data *data,
 				       struct super_block *sb,
 				       const unsigned int xid);
 extern int cifs_get_inode_info_unix(struct inode **pinode,
 			const unsigned char *search_path,
 			struct super_block *sb, unsigned int xid);
 extern int cifs_set_file_info(struct inode *inode, struct iattr *attrs,
-			      unsigned int xid, const char *full_path, __u32 dosattr);
+			      unsigned int xid, const char *full_path, __u32 dosattr,
+			      __le64 creationtime);
 extern int cifs_rename_pending_delete(const char *full_path,
 				      struct dentry *dentry,
 				      const unsigned int xid);
 extern int sid_to_id(struct cifs_sb_info *cifs_sb, struct cifs_sid *psid,
 				struct cifs_fattr *fattr, uint sidtype);
 extern int cifs_acl_to_fattr(struct cifs_sb_info *cifs_sb,
 			      struct cifs_fattr *fattr, struct inode *inode,
diff -Nrp -U 7 --no-ignore-file-name-case --strip-trailing-cr '--exclude=.git*' '--exclude=objtool'
'--exclude=cpupower' a/fs/smb/client/connect.c b/fs/smb/client/connect.c
--- a/fs/smb/client/connect.c	2019-09-15 16:19:32.000000000 -0500
+++ b/fs/smb/client/connect.c	2024-02-07 14:59:45.069170997 -0600
@@ -1508,16 +1508,20 @@ static int match_server(struct TCP_Serve
 	if (strcmp(ctx->vals->version_string, SMB3ANY_VERSION_STRING) == 0) {
 		if (server->vals->protocol_id < SMB30_PROT_ID)
 			return 0;
 	} else if (strcmp(ctx->vals->version_string,
 		   SMBDEFAULT_VERSION_STRING) == 0) {
 		if (server->vals->protocol_id < SMB21_PROT_ID)
 			return 0;
-	} else if ((server->vals != ctx->vals) || (server->ops != ctx->ops))
+	} else if ((server->vals != ctx->vals) || (server->ops != ctx->ops)) {
 		return 0;
+	} else if (server->volUNC != ctx->UNC ) { /* intentional POINTER test */
+		return 0;
+	}
+
 
 	if (!net_eq(cifs_net_ns(server), current->nsproxy->net_ns))
 		return 0;
 
 	if (!cifs_match_ipaddr((struct sockaddr *)&ctx->srcaddr,
 			       (struct sockaddr *)&server->srcaddr))
 		return 0;
@@ -1696,14 +1700,15 @@ cifs_get_tcp_session(struct smb_vol *vol
 	}
 
 	if (ctx->nosharesock)
 		tcp_ses->nosharesock = true;
 
 	tcp_ses->ops = ctx->ops;
 	tcp_ses->vals = ctx->vals;
+	tcp_ses->volUNC = ctx->UNC;
 	cifs_set_net_ns(tcp_ses, get_net(current->nsproxy->net_ns));
 
 	tcp_ses->conn_id = atomic_inc_return(&tcpSesNextId);
 	tcp_ses->noblockcnt = ctx->rootfs;
 	tcp_ses->noblocksnd = ctx->noblocksnd || ctx->rootfs;
 	tcp_ses->noautotune = ctx->noautotune;
 	tcp_ses->tcp_nodelay = ctx->sockopt_tcp_nodelay;
