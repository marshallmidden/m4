diff -Nrp -U 7 --strip-trailing-cr a/drivers/scsi/libiscsi.c b/drivers/scsi/libiscsi.c
--- a/drivers/scsi/libiscsi.c	2024-02-12 15:07:46.000000000 -0600
+++ b/drivers/scsi/libiscsi.c	2024-02-12 15:47:52.550180592 -0600
@@ -2252,19 +2252,19 @@ static void iscsi_check_transport_timeou
 	if (!recv_timeout)
 		goto done;
 
 	recv_timeout *= HZ;
 	last_recv = conn->last_recv;
 
 	if (iscsi_has_ping_timed_out(conn)) {
-		iscsi_conn_printk(KERN_ERR, conn, "ping timeout of %d secs "
-				  "expired, recv timeout %d, last rx %lu, "
-				  "last ping %lu, now %lu\n",
-				  conn->ping_timeout, conn->recv_timeout,
-				  last_recv, conn->last_ping, jiffies);
+		// iscsi_conn_printk(KERN_ERR, conn, "ping timeout of %d secs "
+		// 		  "expired, recv timeout %d, last rx %lu, "
+		// 		  "last ping %lu, now %lu\n",
+		// 		  conn->ping_timeout, conn->recv_timeout,
+		// 		  last_recv, conn->last_ping, jiffies);
 		spin_unlock(&session->frwd_lock);
 		iscsi_conn_failure(conn, ISCSI_ERR_NOP_TIMEDOUT);
 		return;
 	}
 
 	if (time_before_eq(last_recv + recv_timeout, jiffies)) {
 		/* send a ping to try to provoke some traffic */
diff -Nrp -U 7 --strip-trailing-cr a/drivers/scsi/qla2xxx/qla_init.c b/drivers/scsi/qla2xxx/qla_init.c
--- a/drivers/scsi/qla2xxx/qla_init.c	2024-02-12 15:37:49.599348681 -0600
+++ b/drivers/scsi/qla2xxx/qla_init.c	2024-02-12 15:47:52.551180588 -0600
@@ -384,19 +384,19 @@ qla2x00_async_login(struct scsi_qla_host
 	}
 
 	if (NVME_TARGET(vha->hw, fcport))
 		lio->u.logio.flags |= SRB_LOGIN_SKIP_PRLI;
 
 	rval = qla2x00_start_sp(sp);
 
-	ql_dbg(ql_dbg_disc, vha, 0x2072,
-	       "Async-login - %8phC hdl=%x, loopid=%x portid=%06x retries=%d %s.\n",
-	       fcport->port_name, sp->handle, fcport->loop_id,
-	       fcport->d_id.b24, fcport->login_retry,
-	       lio->u.logio.flags & SRB_LOGIN_FCSP ? "FCSP" : "");
+//	ql_dbg(ql_dbg_disc, vha, 0x2072,
+//	       "Async-login - %8phC hdl=%x, loopid=%x portid=%06x retries=%d %s.\n",
+//	       fcport->port_name, sp->handle, fcport->loop_id,
+//	       fcport->d_id.b24, fcport->login_retry,
+//	       lio->u.logio.flags & SRB_LOGIN_FCSP ? "FCSP" : "");
 
 	if (rval != QLA_SUCCESS) {
 		fcport->flags |= FCF_LOGIN_NEEDED;
 		set_bit(RELOGIN_NEEDED, &vha->dpc_flags);
 		goto done_free_sp;
 	}
 
diff -Nrp -U 7 --strip-trailing-cr a/drivers/scsi/qla2xxx/qla_isr.c b/drivers/scsi/qla2xxx/qla_isr.c
--- a/drivers/scsi/qla2xxx/qla_isr.c	2024-02-12 15:37:49.599348681 -0600
+++ b/drivers/scsi/qla2xxx/qla_isr.c	2024-02-12 15:47:52.552180585 -0600
@@ -1742,17 +1742,17 @@ global_port_update:
 		/* Check if the Vport has issued a SCR */
 		if (vha->vp_idx && test_bit(VP_SCR_NEEDED, &vha->vp_flags))
 			break;
 		/* Only handle SCNs for our Vport index. */
 		if (ha->flags.npiv_supported && vha->vp_idx != (mb[3] & 0xff))
 			break;
 
-		ql_log(ql_log_warn, vha, 0x5013,
-		       "RSCN database changed -- %04x %04x %04x.\n",
-		       mb[1], mb[2], mb[3]);
+//		ql_log(ql_log_warn, vha, 0x5013,
+//		       "RSCN database changed -- %04x %04x %04x.\n",
+//		       mb[1], mb[2], mb[3]);
 
 		rscn_entry = ((mb[1] & 0xff) << 16) | mb[2];
 		host_pid = (vha->d_id.b.domain << 16) | (vha->d_id.b.area << 8)
 				| vha->d_id.b.al_pa;
 		if (rscn_entry == host_pid) {
 			ql_dbg(ql_dbg_async, vha, 0x5014,
 			    "Ignoring RSCN update to local host "
diff -Nrp -U 7 --strip-trailing-cr a/drivers/scsi/qla2xxx/qla_mbx.c b/drivers/scsi/qla2xxx/qla_mbx.c
--- a/drivers/scsi/qla2xxx/qla_mbx.c	2024-02-12 15:07:46.000000000 -0600
+++ b/drivers/scsi/qla2xxx/qla_mbx.c	2024-02-12 15:47:52.552180585 -0600
@@ -300,17 +300,17 @@ qla2x00_mailbox_command(scsi_qla_host_t
 			ha->flags.mbox_busy = 0;
 			spin_unlock_irqrestore(&ha->hardware_lock, flags);
 			atomic_dec(&ha->num_pend_mbx_stage2);
 			rval = QLA_ABORTED;
 			goto premature_exit;
 		}
 
-		if (time_after(jiffies, wait_time + 5 * HZ))
-			ql_log(ql_log_warn, vha, 0x1015, "cmd=0x%x, waited %d msecs\n",
-			    command, jiffies_to_msecs(jiffies - wait_time));
+//		if (time_after(jiffies, wait_time + 5 * HZ))
+//			ql_log(ql_log_warn, vha, 0x1015, "cmd=0x%x, waited %d msecs\n",
+//			    command, jiffies_to_msecs(jiffies - wait_time));
 	} else {
 		ql_dbg(ql_dbg_mbx, vha, 0x1011,
 		    "Cmd=%x Polling Mode.\n", command);
 
 		if (IS_P3P_TYPE(ha)) {
 			if (rd_reg_dword(&reg->isp82.hint) &
 				HINT_MBX_INT_PENDING) {
