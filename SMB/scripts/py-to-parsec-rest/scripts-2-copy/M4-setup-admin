#!/bin/bash -e
echo "In $0 $* <------------------------------------------------------------"
#-----------------------------------------------------------------------------
dir="$1"
if [ "$1" = "" ]; then
    echo "Script expects a directory to create setup files in."
    echo "Script expects second argument of a few letters for uniqueness."
    exit 1
fi
pa="$2"
if [ "$2" = "" ]; then
    echo "Script expects second argument of a few letters for uniqueness."
    exit 1
fi
#------------------------------------------------------------------------------
# Talk about strange bash processing. It deletes a blank argument. Thus 3 is not ''.
if [ "$5" != "" ]; then
    CIFSIP="$3"
    WUSR="$4"
    PW="$5"
    V=`echo "${dir}" | sed -e 's;/.*$;;'`
    SHARE=`echo "${dir}" | sed -e 's;^.*/;;'`
    cmd.exe /c net-use.bat ${V} ${CIFSIP} ${SHARE} "${WUSR}" "${PW}"
fi
#-----------------------------------------------------------------------------
W=`pwd`
#-----------------------------------------------------------------------------
create_tiny_file()
{
    echo "create_tiny_file $1"
    name="$1"					|| true
    wn=`echo "${name}" | sed -e 'sa/a\\\\ag'`   || true
    if [ -e "${name}" ]; then
	cmd.exe /c attrib -s -r -h "${wn}"
    fi
    rm -f "${name}"
    cmd.exe /c echo "This is file named ${wn}." '>' "${wn}"
}
#-----------------------------------------------------------------------------
make_directory ()
{
    echo "make_directory $1"
    name="$1"
    wn=`echo "${name}" | sed -e 'sa/a\\\\ag'`   || true
    if [ -e "${name}" ]; then
	cmd.exe /c attrib -s -r -h "${wn}"
    fi
    rm -rf "${name}"
    cmd.exe /c mkdir "${wn}"
}
#-----------------------------------------------------------------------------
# Get to right place.
if [ -e "${dir}" ]; then
    cd "${dir}"
else
    dir=`echo "${dir}" | sed -e 's/:.*$/:/'`
    cd "${dir}"
fi
#-----------------------------------------------------------------------------
#   $ cmd.exe /c mklink
#   Creates a symbolic link.
#   MKLINK [[/D] | [/H] | [/J]] Link Target
#           /D      Creates a directory symbolic link.  Default is a file
#                   symbolic link.
#           /H      Creates a hard link instead of a symbolic link.
#           /J      Creates a Directory Junction.
#           Link    specifies the new symbolic link name.
#           Target  specifies the path (relative or absolute) that the new link
#                   refers to.
#--------------------
# Create normal file.
f="linkfile-${pa}.txz"
create_tiny_file    "${f}"

rm -f "${f}-softlink"
cmd.exe /c mklink "${f}-softlink" "${f}" || true
rm -f "${f}-hardlink"
cmd.exe /c mklink /h "${f}-hardlink" "${f}" || true
#--------------------
# Create directory.
f="linkdir-${pa}"
make_directory "${f}"
rm -f "${f}-softlink"
cmd.exe /c mklink /d "${f}-softlink" "${f}" || true
rm -f "${f}-junction"
cmd.exe /c mklink /j "${f}-junction" "${f}" || true
#-----------------------------------------------------------------------------
echo "Done with $0 $* <------------------------------------------------------------"
exit 0
#-----------------------------------------------------------------------------
# End of script M4-setup-admin
