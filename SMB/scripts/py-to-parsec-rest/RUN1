#!/bin/bash -e
#-----------------------------------------------------------------------------
/bin/date '+%Y-%m-%d_%H-%M-%S'
#-----------------------------------------------------------------------------
# Get username, password, parsec_IPADDRESS.
source ENV
#-----------------------------------------------------------------------------
# Command that handles projects/jobs through the REST interface.
CMD="./m4.py"
#-----------------------------------------------------------------------------
DELETEJOBS=yes
DELETEPROJ=yes
#=============================================================================
# Abbreviated name for each source storage.
SOURCEABR=(na116)
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Source IP addresses.
SOURCEIPS=(172.22.14.116)
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Source share names.
SOURCESHR=(cifs_v1)
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Source SMB version.
SOURCEVER=(1.0)
#----------------------------------------------------------------------------
# Abbreviated name for each destination storage.
DESTINABR=(na116)
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Destination IP addresses.
DESTINIPS=(172.22.14.116)
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Destination share names.
DESTINSHR=(cifs_v2)
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
# Destination SMB version.
DESTINVER=(1.0)
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
#+ for i in {0..6}; do
#+     echo "${SOURCEABR[$i]} ${SOURCEIPS[$i]} ${SOURCESHR[$i]} ${SOURCEVER[$i]}  -> ${DESTINABR[$i]} ${DESTINIPS[$i]} ${DESTINSHR[$i]} ${DESTINVER[$i]}"
#+ done
let i=${#SOURCEABR[@]} || true
if [ "${#SOURCEIPS[@]}" != $i -o "${#SOURCESHR[@]}" != $i -o	\
     "${#SOURCEVER[@]}" != $i -o				\
     "${#DESTINABR[@]}" != $i -o "${#DESTINIPS[@]}" != $i -o	\
     "${#DESTINSHR[@]}" != $i -o "${#DESTINVER[@]}" != $i ]; then
    echo "ERROR - arrays are not of the same length, please fix."
    echo SOURCEABR="${#SOURCEABR[@]}" SOURCEIPS="${#SOURCEIPS[@]}" SOURCESHR="${#SOURCESHR[@]}" SOURCEVER="${#SOURCEVER[@]}"
    echo DESTINABR="${#DESTINABR[@]}" DESTINIPS="${#DESTINIPS[@]}" DESTINSHR="${#DESTINSHR[@]}" DESTINVER="${#DESTINVER[@]}"
    exit 1
fi

#=============================================================================
# 1 
echo 'Delete any existing jobs'
# Get the job id's.
J=`${CMD} --brief job list`
if [ "$J" != '' ]; then
    # Make sure they are stopped.
    STOP=`${CMD} job stop ${J}`
    echo "${STOP}"
    # Disable the jobs.
    DISABLE=`${CMD} job disable ${J}`
    echo "${DISABLE}"
    # Delete the jobs.
    DELE=`${CMD} job dele ${J}`
    echo "${DELE}"
fi
#-----------------------------------------------------------------------------
# 2
echo 'Delete any existing projects'
# Get the project id's.
P=`${CMD} --brief proj list`
if [ "$P" != '' ]; then
    echo "P='${P}'"
    P_DELE=`${CMD} proj delete ${P}`
    echo ${P_DELE}
fi
#-----------------------------------------------------------------------------
# 3
echo 'Remove destination shares.'
for ((i=0; i < ${#SOURCEABR[*]}; i++)); do
    make rm_files_${DESTINABR[$i]}_${DESTINSHR[$i]}
done
#-----------------------------------------------------------------------------
# 4
# echo 'Setup all sources.'
# for ((i=0; i < ${#SOURCEABR[*]}; i++)); do
#     make setup_${SOURCEABR[$i]} 2>&1 | tee AAA.${SOURCEABR[$i]}
# done
#-----------------------------------------------------------------------------
# 5
# echo 'Get lots of information for each source.'
# for ((i=0; i < ${#SOURCEABR[*]}; i++)); do
#     make info_${SOURCEABR[$i]}_${SOURCESHR[$i]} 2>&1 | tee AAA.info_${SOURCEABR[$i]}_${SOURCESHR[$i]}
# done
#-----------------------------------------------------------------------------
# 6
echo 'Create projects and jobs.'
for ((i=0; i < ${#SOURCEABR[*]}; i++)); do
    PN="Scripted SMB project&job for ${SOURCEABR[$i]} ${SOURCESHR[$i]} to ${DESTINABR[$i]} ${DESTINSHR[$i]}"
    JN="${SOURCEABR[$i]} ${SOURCESHR[$i]} to ${DESTINABR[$i]} ${DESTINSHR[$i]}"
    #-------------------------------------------------------------------------
    # Create the project via REST interface.
    echo 'Create the project.'
    PC=`${CMD} p c "${PN}" "${SOURCEVER[$i]}" "${DESTINVER[$i]}"`
    echo "${PN}"
    #-------------------------------------------------------------------------
    # Create the job connected to above project, via REST interface.
    echo 'Create the new job for migration'
    JC1=`${CMD} j c "${PN}" cifs://${SOURCEIPS[$i]}/${SOURCESHR[$i]} cifs://${DESTINIPS[$i]}/${DESTINSHR[$i]} "${JN}"`
    echo "${JC1}"
done
#-----------------------------------------------------------------------------
# 7
echo "Sleep five seconds to let scheduler do its business."
sleep 5
date
echo 'Run the jobs'
# Get the new job id's.
J=`${CMD} --brief job list`
if [ "$J" != '' ]; then
    echo "J=${J}"
    #-- # Enable the job.
    #-- ENABLE=`${CMD} job enable ${J}`
    #-- echo "ENABLE=${ENABLE}"
    # Run the jobs.
    START=`${CMD} job run ${J}`
    echo "START=${START}"
fi
echo 'Started all jobs.'
#-----------------------------------------------------------------------------
# 8
echo "Sleep five seconds to let scheduler do its business."
sleep 5
date
echo 'Wait til all jobs finished.'
set +e					# No longer have exit status exit script.
c=0
while [ "$c" != '' ]; do
    sleep 0.25
    c=`ps -C pxlhr -o pid=`
done
echo 'pxlhr appears to be done.'
#-----------------------------------------------------------------------------
# 9
echo "Sleep five seconds to let things settle down."
sleep 5
date
echo 'Get lots of information for each destination.'
for ((i=0; i < ${#SOURCEABR[*]}; i++)); do
    make info_${DESTINABR[$i]}_${DESTINSHR[$i]} 2>&1 | tee AAA.info_${DESTINABR[$i]}_${DESTINSHR[$i]} 
done
#-----------------------------------------------------------------------------
echo "Done with $0"
/bin/date '+%Y-%m-%d_%H-%M-%S'
#-----------------------------------------------------------------------------
exit 0
#-----------------------------------------------------------------------------
