#!/opt/homebrew/bin/python3 -B
# vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4
import sys

from music21 import *

# Create a score with nested streams
score = stream.Score()
part1 = stream.Part()
part2 = stream.Part()

# Adding some notes and chords
part1.append(note.Note('C4', quarterLength=1))
part1.append(note.Note('E4', quarterLength=1))
part2.append(chord.Chord(['G4', 'B4'], quarterLength=1))
part2.append(note.Note('D4', quarterLength=1))

# Adding parts to the score
score.append(part1)
score.append(part2)

# Flatten the score
flat_score = score.flatten()

#+ # Print the flattened structure
#+ print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
#+ for element in flat_score:
#+     print('flat_score:', element, file=sys.stderr, flush=True)
#+ # rof
#+ print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
#+ for i1 in part1:
#+     print('i1:', i1, file=sys.stderr, flush=True)
#+ # rof
#+ for i2 in part2:
#+     print('i2:', i2, file=sys.stderr, flush=True)
#+ # rof
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)

import print_recursive_classes

print_recursive_classes.print_vars(8589934592)
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
print_recursive_classes.print_vars(3.14159)
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
print_recursive_classes.print_vars('hithere')
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
print_recursive_classes.print_vars(True)
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
print_recursive_classes.print_vars(False)
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
print_recursive_classes.print_vars(None)
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
print_recursive_classes.print_vars((1,2))
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
print_recursive_classes.print_vars([3,4])
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
print_recursive_classes.print_vars({'a': 'b'})
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
print_recursive_classes.print_vars(score)
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
print_recursive_classes.print_vars(part1)
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
print_recursive_classes.print_vars(part2)
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
print_recursive_classes.print_vars(flat_score)
print('------------------------------------------------------------------------------', file=sys.stderr, flush=True)
