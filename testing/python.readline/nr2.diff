--- read2.py	(original)
+++ read2.py	(refactored)
@@ -12,17 +12,17 @@
 completer = rlcompleter.Completer()
 
 for phrase in "co", "sys.p", "is":
-    print phrase, "=>",
+    print(phrase, "=>", end=' ')
     # emulate readline completion handler
     try:
-        for index in xrange(sys.maxint):
+        for index in range(sys.maxsize):
             term = completer.complete(phrase, index)
             if term is None:
                 break
-            print term,
+            print(term, end=' ')
     except:
         pass
-    print
+    print()
 
 ## co => continue compile complex coerce completer
 ## sys.p => sys.path sys.platform sys.prefix
